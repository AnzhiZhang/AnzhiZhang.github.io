<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Andy&#39;s Blog</title>
  <icon>https://picture.zhanganzhi.com/2022/06/19/kr6b1ea.jpg</icon>
  
  <link href="https://blog.zhanganzhi.com/atom.xml" rel="self"/>
  
  <link href="https://blog.zhanganzhi.com/"/>
  <updated>2022-06-17T19:09:42.000Z</updated>
  <id>https://blog.zhanganzhi.com/</id>
  
  <author>
    <name>Andy Zhang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>GitHub Actions 自动部署 Hexo 博客</title>
    <link href="https://blog.zhanganzhi.com/zh-CN/2022/06/0800d76d306e/"/>
    <id>https://blog.zhanganzhi.com/zh-CN/2022/06/0800d76d306e/</id>
    <published>2022-06-17T19:09:42.000Z</published>
    <updated>2022-06-17T19:09:42.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Hexo 官方文档的 <a href="https://pages.github.com/">GitHub Pages</a> 部署方案<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="[将 Hexo 部署到 GitHub Pages](https://hexo.io/zh-cn/docs/github-pages). Hexo. 2022-06-11 [2022-06-17]. （原始内容[存档](https://web.archive.org/web/20220617122944/https://hexo.io/zh-cn/docs/github-pages)于2022-06-17）.">[1]</span></a></sup>需要注册第三方账号且绑定信用卡，所以创建博客时选择了一键部署<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="[部署](https://hexo.io/zh-cn/docs/one-command-deployment). Hexo. 2022-06-11 [2022-06-17]. （原始内容[存档](https://web.archive.org/web/20220617122947/https://hexo.io/zh-cn/docs/one-command-deployment)于2022-06-17）.">[2]</span></a></sup>的方案，但是需要手动使用 <code>hexo clean &amp;&amp; hexo d</code> 部署博客，有些麻烦，于是决定改为 GitHub Actions 自动部署。</p></blockquote><span id="more"></span><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>分别设置博客仓库和部署仓库，部署仓库为 <a href="https://pages.github.com/">GitHub Pages</a>。</p><h2 id="配置-SSH"><a href="#配置-SSH" class="headerlink" title="配置 SSH"></a>配置 SSH</h2><p>在本地生成一对 SSH 密钥，注意更改文件名避免将正在使用的密钥覆盖。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -t ed25519 -C <span class="hljs-string">&quot;your_email@example.com&quot;</span><br></code></pre></td></tr></table></figure><p>在<strong>博客仓库</strong>的 <code>Settings -&gt; Secrets -&gt; Actions</code> 中添加 SSH <strong>私钥</strong>，命名为 <code>SSH_DEPLOY_KEY</code>。</p><p><img src="https://picture.zhanganzhi.com/2022/06/19/011b4r1.png" alt="添加私钥"></p><p>在<strong>部署仓库</strong>的 <code>Settings -&gt; Deploy keys</code> 中添加 SSH <strong>公钥</strong>，注意勾选 <code>Allow write access</code>。</p><p><img src="https://picture.zhanganzhi.com/2022/06/19/ui72xts.png" alt="添加公钥"></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/ktzdikp.png" alt="勾选 Allow write access"></p><h2 id="编写-Workflow"><a href="#编写-Workflow" class="headerlink" title="编写 Workflow"></a>编写 Workflow</h2><p>创建 <code>.github/workflows/deployment.yml</code>，写入以下内容，注意修改仓库地址和 Git 配置。此时当 <code>push</code> 到博客仓库时，GitHub Actions 将会自动部署。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">name:</span> <span class="hljs-string">Deployment</span><br><span class="hljs-attr">on:</span> <span class="hljs-string">push</span><br><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">deployment:</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">Deployment</span><br><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Check</span> <span class="hljs-string">Out</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v3</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Clone</span> <span class="hljs-string">Repo</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v3</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">repository:</span> <span class="hljs-string">Username/Repository</span><br>          <span class="hljs-attr">path:</span> <span class="hljs-string">.deploy_git</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Setup</span> <span class="hljs-string">Node</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/setup-node@v3</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">node-version:</span> <span class="hljs-number">16</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Setup</span> <span class="hljs-string">Git</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">          git config --global user.name &quot;Example&quot;</span><br><span class="hljs-string">          git config --global user.email &quot;email@example.com&quot;</span><br><span class="hljs-string"></span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Setup</span> <span class="hljs-string">SSH</span> <span class="hljs-string">Key</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">          mkdir -p ~/.ssh</span><br><span class="hljs-string">          echo &quot;$&#123;&#123; secrets.SSH_DEPLOY_KEY &#125;&#125;&quot; &gt; ~/.ssh/id_ed25519</span><br><span class="hljs-string">          chmod 600 ~/.ssh/id_ed25519</span><br><span class="hljs-string"></span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Deploy</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">          npm install --location=global hexo-cli</span><br><span class="hljs-string">          npm install</span><br><span class="hljs-string">          hexo d</span><br></code></pre></td></tr></table></figure><h2 id="Workflow-解析"><a href="#Workflow-解析" class="headerlink" title="Workflow 解析"></a>Workflow 解析</h2><p>两个 Checkout 的作用是切换到博客仓库最新提交，并且将部署仓库克隆到 <code>.deploy_git</code>，也就是 Hexo 的部署目录。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Check</span> <span class="hljs-string">Out</span><br>    <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v3</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Clone</span> <span class="hljs-string">Repo</span><br>  <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v3</span><br>  <span class="hljs-attr">with:</span><br>   <span class="hljs-attr">repository:</span> <span class="hljs-string">Username/Repository</span><br>   <span class="hljs-attr">path:</span> <span class="hljs-string">.deploy_git</span><br></code></pre></td></tr></table></figure><p>下一步安装 Node，版本需要与博客使用的版本相同。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Setup</span> <span class="hljs-string">Node</span><br>  <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/setup-node@v3</span><br>  <span class="hljs-attr">with:</span><br>    <span class="hljs-attr">node-version:</span> <span class="hljs-number">16</span><br></code></pre></td></tr></table></figure><p>设置提交的用户名和邮箱。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Setup</span> <span class="hljs-string">Git</span><br>  <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">    git config --global user.name &quot;Example&quot;</span><br><span class="hljs-string">    git config --global user.email &quot;email@example.com&quot;</span><br></code></pre></td></tr></table></figure><p>将存储在仓库 Secrets 的 SSH 私钥存储到本地供 Git 使用。<code>mkdir</code> 是为了下一步可以在 <code>~/.ssh</code> 目录中创建文件，<code>chmod</code> 设置权限，Git 才能使用私钥<sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><span class="hint--top hint--rounded" aria-label="[利用 Github Actions 自动部署 Hexo 博客](https://sanonz.github.io/2020/deploy-a-hexo-blog-from-github-actions/). Sanonz. 2020-05-12 [2022-06-17]. （原始内容[存档](https://web.archive.org/web/20210618140206/https://sanonz.github.io/2020/deploy-a-hexo-blog-from-github-actions/)于2021-06-18）.">[3]</span></a></sup>。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Setup</span> <span class="hljs-string">SSH</span> <span class="hljs-string">Key</span><br>  <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">    mkdir -p ~/.ssh</span><br><span class="hljs-string">    echo &quot;$&#123;&#123; secrets.SSH_DEPLOY_KEY &#125;&#125;&quot; &gt; ~/.ssh/id_ed25519</span><br><span class="hljs-string">    chmod 600 ~/.ssh/id_ed25519</span><br></code></pre></td></tr></table></figure><p>最后安装 Hexo 和依赖，运行 <code>hexo d</code> 部署博客。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Deploy</span><br>  <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">    npm install --location=global hexo-cli</span><br><span class="hljs-string">    npm install</span><br><span class="hljs-string">    hexo d</span><br></code></pre></td></tr></table></figure><section class="footnotes"><h2 id="参考文献">参考文献</h2><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://hexo.io/zh-cn/docs/github-pages">将 Hexo 部署到 GitHub Pages</a>. Hexo. 2022-06-11 [2022-06-17]. （原始内容<a href="https://web.archive.org/web/20220617122944/https://hexo.io/zh-cn/docs/github-pages">存档</a>于2022-06-17）.<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://hexo.io/zh-cn/docs/one-command-deployment">部署</a>. Hexo. 2022-06-11 [2022-06-17]. （原始内容<a href="https://web.archive.org/web/20220617122947/https://hexo.io/zh-cn/docs/one-command-deployment">存档</a>于2022-06-17）.<a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="https://sanonz.github.io/2020/deploy-a-hexo-blog-from-github-actions/">利用 Github Actions 自动部署 Hexo 博客</a>. Sanonz. 2020-05-12 [2022-06-17]. （原始内容<a href="https://web.archive.org/web/20210618140206/https://sanonz.github.io/2020/deploy-a-hexo-blog-from-github-actions/">存档</a>于2021-06-18）.<a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Hexo 官方文档的 &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt; 部署方案&lt;sup id=&quot;fnref:1&quot; class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;#fn:1&quot; rel=&quot;footnote&quot;&gt;&lt;span class=&quot;hint--top hint--rounded&quot; aria-label=&quot;[将 Hexo 部署到 GitHub Pages](https://hexo.io/zh-cn/docs/github-pages). Hexo. 2022-06-11 [2022-06-17]. （原始内容[存档](https://web.archive.org/web/20220617122944/https://hexo.io/zh-cn/docs/github-pages)于2022-06-17）.&quot;&gt;[1]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;需要注册第三方账号且绑定信用卡，所以创建博客时选择了一键部署&lt;sup id=&quot;fnref:2&quot; class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;#fn:2&quot; rel=&quot;footnote&quot;&gt;&lt;span class=&quot;hint--top hint--rounded&quot; aria-label=&quot;[部署](https://hexo.io/zh-cn/docs/one-command-deployment). Hexo. 2022-06-11 [2022-06-17]. （原始内容[存档](https://web.archive.org/web/20220617122947/https://hexo.io/zh-cn/docs/one-command-deployment)于2022-06-17）.&quot;&gt;[2]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;的方案，但是需要手动使用 &lt;code&gt;hexo clean &amp;amp;&amp;amp; hexo d&lt;/code&gt; 部署博客，有些麻烦，于是决定改为 GitHub Actions 自动部署。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="开发" scheme="https://blog.zhanganzhi.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    <category term="博客" scheme="https://blog.zhanganzhi.com/categories/%E5%BC%80%E5%8F%91/%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="GitHub" scheme="https://blog.zhanganzhi.com/tags/GitHub/"/>
    
    <category term="博客" scheme="https://blog.zhanganzhi.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="自动部署" scheme="https://blog.zhanganzhi.com/tags/%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/"/>
    
  </entry>
  
  <entry>
    <title>CurseForge Modpack Downloader Tutorial</title>
    <link href="https://blog.zhanganzhi.com/en/2022/06/7b049d0aa9ff/"/>
    <id>https://blog.zhanganzhi.com/en/2022/06/7b049d0aa9ff/</id>
    <published>2022-06-09T00:12:37.000Z</published>
    <updated>2022-06-09T00:12:37.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>On May 16, 2022, CurseForge released the official API. This result in third-party launchers no longer to download modpacks, like MultiMC and PCL2. More info can be found in <a href="https://medium.com/overwolf/the-curseforge-official-api-is-now-live-d314606355c2">“The CurseForge Official API is Now Live”</a><sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="Moran Weiss. &quot;[The CurseForge Official API is Now Live](https://medium.com/overwolf/the-curseforge-official-api-is-now-live-d314606355c2)&quot;. Overwolf Blog. 16 May 2022. [Archived](https://web.archive.org/web/20220608151743/https://medium.com/overwolf/the-curseforge-official-api-is-now-live-d314606355c2) from the original on 8 June 2022. Retrieved 23 May 2022.">[1]</span></a></sup>.</p></blockquote><span id="more"></span><p>Therefore, I made a software <a href="https://github.com/AnzhiZhang/CurseForgeModpackDownloader">CurseForge Modpack Downloader</a> (CMPDL). It could download mods for modpack downloaded from CurseForge, an pack to the format that is supported by launchers like MultiMC, HMCL, and PCL2.</p><p>At this moment, they say HMCL and PCL2 can download again, but obviously, it is not in the official method. MMC’s author said he has may support the API Key of CurseForge to downlaod<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="phit. &quot;[Looks like CurseForge API in MultiMC is deprecated and unusable](https://github.com/MultiMC/Launcher/issues/4716#issuecomment-1135498404)&quot;. GitHub. 24 May 2022. [Archived](https://web.archive.org/web/20220608152954/https://github.com/MultiMC/Launcher/issues/4716) from the original on 8 June 2022. Retrieved 26 May 2022.">[2]</span></a></sup>.</p><h2 id="Download-Program"><a href="#Download-Program" class="headerlink" title="Download Program"></a>Download Program</h2><p>Open the <a href="https://github.com/AnzhiZhang/CurseForgeModpackDownloader">repository</a>, and download the newest version on the right side. You also could click <a href="https://github.com/AnzhiZhang/CurseForgeModpackDownloader/releases/latest">here</a> to go to the newest release.</p><p><img src="https://picture.zhanganzhi.com/2022/06/19/2vn7b19.png" alt="Find Releases"></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/d747beu.png" alt="Download the first one in Assets"></p><h2 id="Download-Modpack"><a href="#Download-Modpack" class="headerlink" title="Download Modpack"></a>Download Modpack</h2><p>There are two ways to download modpacks: direct download in program or import.</p><h3 id="Direct-Download-in-CMPDL"><a href="#Direct-Download-in-CMPDL" class="headerlink" title="Direct Download in CMPDL"></a>Direct Download in CMPDL</h3><p>You could find modpacks in the list.</p><p><img src="https://picture.zhanganzhi.com/2022/06/19/lqfefxc.png" alt="Select a modpack"></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/wxp7lxf.png" alt="Entry keywords at the top to search"></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/fy60yqf.png" alt="Change sort by"></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/4kir4gd.png" alt="Filter game version"></p><p>After selecting a modpack, you could choose the modpack version at the bottom right.</p><p><img src="https://picture.zhanganzhi.com/2022/06/19/2defdt2.png" alt="Choose modpack version"></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/mm9ulsp.png" alt="Click download and wait for the downloading"></p><h3 id="Use-CurseForge-Download-and-Import"><a href="#Use-CurseForge-Download-and-Import" class="headerlink" title="Use CurseForge Download and Import"></a>Use CurseForge Download and Import</h3><p>Find moodpack your like on CourseForge and download modpack file, I will use Restrict Skyblock for example.</p><p><img src="https://picture.zhanganzhi.com/2022/06/19/7jqy8d1.png" alt="Go to Files"></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/0lwxnnf.png" alt="Choose modpack version"></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/4lgr1mb.png" alt="Click Download"></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/w0x17uf.png" alt="Click Import"></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/teu0gwf.png" alt="Select the file downloaded from CurseForge"></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/l3mkqq6.png" alt="Wait for the downloading"></p><h2 id="Import-to-Launcher"><a href="#Import-to-Launcher" class="headerlink" title="Import to Launcher"></a>Import to Launcher</h2><p>Wait for the downloading to finish and pop this prompt. Import the zip file (located at the program path, if imported from a specific file, it is the original path) into your launcher.</p><p><img src="https://picture.zhanganzhi.com/2022/06/19/6cpt62r.png" alt="Prompt of finished"></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/r1o164g.png" alt="Import to MultiMC"></p><h2 id="Thanks"><a href="#Thanks" class="headerlink" title="Thanks"></a>Thanks</h2><p>Thanks <a href="http://anyijun.com/">anyijun</a>, <a href="https://github.com/Cyl18">Cyl18</a>, and <a href="https://github.com/ShaBaiTianCN">ShaBaiTianCN</a> provided advice and help during this program developing.</p><h3 id="Used-API-Documents"><a href="#Used-API-Documents" class="headerlink" title="Used API Documents"></a>Used API Documents</h3><p><a href="https://gist.github.com/crapStone/9a423f7e97e64a301e88a2f6a0f3e4d9">Curse API</a><sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><span class="hint--top hint--rounded" aria-label="&quot;[curse_api.md](https://gist.github.com/crapStone/9a423f7e97e64a301e88a2f6a0f3e4d9)&quot;. GitHub. 9 September 2020. [Archived](https://web.archive.org/web/20220608154714/https://gist.github.com/crapStone/9a423f7e97e64a301e88a2f6a0f3e4d9) from the original on 8 June 2022. Retrieved 23 May 2022.">[3]</span></a></sup></p><p><a href="https://github.com/Gaz492/CurseforgeAPI/blob/master/apiary.apib">CurseforgeAPI&#x2F;apiary.apib</a><sup id="fnref:4" class="footnote-ref"><a href="#fn:4" rel="footnote"><span class="hint--top hint--rounded" aria-label="&quot;[CurseforgeAPI/apiary.apib](https://github.com/Gaz492/CurseforgeAPI/blob/master/apiary.apib)&quot;. GitHub. 10 April 2021. [Archived](https://web.archive.org/web/20220608154724/https://github.com/Gaz492/CurseforgeAPI/blob/master/apiary.apib) from the original on 8 June 2022. Retrieved 23 May 2022.">[4]</span></a></sup></p><h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><p>Copyright © 2022 Andy Zhang</p><p>This program is free software: you can redistribute it and&#x2F;or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.</p><p>This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.</p><p>You should have received a copy of the GNU General Public License along with this program. If not, see <a href="https://www.gnu.org/licenses/">https://www.gnu.org/licenses/</a>.</p><section class="footnotes"><h2 id="参考文献">参考文献</h2><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>Moran Weiss. &quot;<a href="https://medium.com/overwolf/the-curseforge-official-api-is-now-live-d314606355c2">The CurseForge Official API is Now Live</a>&quot;. Overwolf Blog. 16 May 2022. <a href="https://web.archive.org/web/20220608151743/https://medium.com/overwolf/the-curseforge-official-api-is-now-live-d314606355c2">Archived</a> from the original on 8 June 2022. Retrieved 23 May 2022.<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span>phit. &quot;<a href="https://github.com/MultiMC/Launcher/issues/4716#issuecomment-1135498404">Looks like CurseForge API in MultiMC is deprecated and unusable</a>&quot;. GitHub. 24 May 2022. <a href="https://web.archive.org/web/20220608152954/https://github.com/MultiMC/Launcher/issues/4716">Archived</a> from the original on 8 June 2022. Retrieved 26 May 2022.<a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span>&quot;<a href="https://gist.github.com/crapStone/9a423f7e97e64a301e88a2f6a0f3e4d9">curse_api.md</a>&quot;. GitHub. 9 September 2020. <a href="https://web.archive.org/web/20220608154714/https://gist.github.com/crapStone/9a423f7e97e64a301e88a2f6a0f3e4d9">Archived</a> from the original on 8 June 2022. Retrieved 23 May 2022.<a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:4" class="footnote-text"><span>&quot;<a href="https://github.com/Gaz492/CurseforgeAPI/blob/master/apiary.apib">CurseforgeAPI&#x2F;apiary.apib</a>&quot;. GitHub. 10 April 2021. <a href="https://web.archive.org/web/20220608154724/https://github.com/Gaz492/CurseforgeAPI/blob/master/apiary.apib">Archived</a> from the original on 8 June 2022. Retrieved 23 May 2022.<a href="#fnref:4" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;On May 16, 2022, CurseForge released the official API. This result in third-party launchers no longer to download modpacks, like MultiMC and PCL2. More info can be found in &lt;a href=&quot;https://medium.com/overwolf/the-curseforge-official-api-is-now-live-d314606355c2&quot;&gt;“The CurseForge Official API is Now Live”&lt;/a&gt;&lt;sup id=&quot;fnref:1&quot; class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;#fn:1&quot; rel=&quot;footnote&quot;&gt;&lt;span class=&quot;hint--top hint--rounded&quot; aria-label=&quot;Moran Weiss. &amp;quot;[The CurseForge Official API is Now Live](https://medium.com/overwolf/the-curseforge-official-api-is-now-live-d314606355c2)&amp;quot;. Overwolf Blog. 16 May 2022. [Archived](https://web.archive.org/web/20220608151743/https://medium.com/overwolf/the-curseforge-official-api-is-now-live-d314606355c2) from the original on 8 June 2022. Retrieved 23 May 2022.&quot;&gt;[1]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Minecraft" scheme="https://blog.zhanganzhi.com/categories/Minecraft/"/>
    
    <category term="工具" scheme="https://blog.zhanganzhi.com/categories/Minecraft/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="Minecraft" scheme="https://blog.zhanganzhi.com/tags/Minecraft/"/>
    
    <category term="整合包" scheme="https://blog.zhanganzhi.com/tags/%E6%95%B4%E5%90%88%E5%8C%85/"/>
    
    <category term="CurseForge" scheme="https://blog.zhanganzhi.com/tags/CurseForge/"/>
    
  </entry>
  
  <entry>
    <title>CurseForge 整合包下载器教程</title>
    <link href="https://blog.zhanganzhi.com/zh-CN/2022/06/7b049d0aa9ff/"/>
    <id>https://blog.zhanganzhi.com/zh-CN/2022/06/7b049d0aa9ff/</id>
    <published>2022-06-09T00:12:37.000Z</published>
    <updated>2022-06-09T00:12:37.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>2022年5月16日，CurseForge 发布了官方 API，同时弃用了旧的 API，这导致第三方启动器无法下载，如 MultiMC 和 PCL2。具体原因和详细情况在 <a href="https://medium.com/overwolf/the-curseforge-official-api-is-now-live-d314606355c2">《The CurseForge Official API is Now Live》</a><sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="Moran Weiss. [The CurseForge Official API is Now Live](https://medium.com/overwolf/the-curseforge-official-api-is-now-live-d314606355c2). Overwolf Blog. 2022-05-16 [2022-05-23]. （原始内容[存档](https://web.archive.org/web/20220608151743/https://medium.com/overwolf/the-curseforge-official-api-is-now-live-d314606355c2)于2022-06-08）.">[1]</span></a></sup> 中有详细说明。</p></blockquote><span id="more"></span><p>因此，我制作了一个软件 <a href="https://github.com/AnzhiZhang/CurseForgeModpackDownloader">CurseForge Modpack Downloader</a> (CMPDL)，可以将 CurseForge 下载的整合包补全文件，制作为启动器支持的格式。目前已测试支持的启动器列表为：MultiMC，HMCL 和 PCL2。</p><p>当前，据说 HMCL 和 PCL2 已重新支持下载，但显然不是官方认可的方式。MMC 作者表示没有短期支持的计划，长期可能支持 API Key 的方式<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="phit. [Looks like CurseForge API in MultiMC is deprecated and unusable](https://github.com/MultiMC/Launcher/issues/4716#issuecomment-1135498404). GitHub. 2022-05-24 [2022-05-26]. （原始内容[存档](https://web.archive.org/web/20220608152954/https://github.com/MultiMC/Launcher/issues/4716)于2022-06-08）.">[2]</span></a></sup>。</p><h2 id="下载程序"><a href="#下载程序" class="headerlink" title="下载程序"></a>下载程序</h2><p>打开 <a href="https://github.com/AnzhiZhang/CurseForgeModpackDownloader">程序仓库</a>，在右侧的 Releases 下载最新版。您也可以点击 <a href="https://github.com/AnzhiZhang/CurseForgeModpackDownloader/releases/latest">这里</a> 直接前往最新版</p><p><img src="https://picture.zhanganzhi.com/2022/06/19/2vn7b19.png" alt="找到 Releases"></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/d747beu.png" alt="下载 Assets 的第一个"></p><h2 id="下载整合包"><a href="#下载整合包" class="headerlink" title="下载整合包"></a>下载整合包</h2><p>共有两种方式下载整合包：直接在程序内下载或导入。</p><h3 id="直接使用-CMPDL-下载"><a href="#直接使用-CMPDL-下载" class="headerlink" title="直接使用 CMPDL 下载"></a>直接使用 CMPDL 下载</h3><p>在中间的列表可以直接选择整合包。</p><p><img src="https://picture.zhanganzhi.com/2022/06/19/lqfefxc.png" alt="选择整合包"></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/wxp7lxf.png" alt="在上方输入关键词搜索"></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/fy60yqf.png" alt="修改排序方式"></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/4kir4gd.png" alt="筛选游戏版本"></p><p>选择整合包后，可以在右下方选择整合包版本。</p><p><img src="https://picture.zhanganzhi.com/2022/06/19/2defdt2.png" alt="选择整合包版本"></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/mm9ulsp.png" alt="点击下载并等待完成"></p><h3 id="使用-CurseForge-下载并导入"><a href="#使用-CurseForge-下载并导入" class="headerlink" title="使用 CurseForge 下载并导入"></a>使用 CurseForge 下载并导入</h3><p>在 CourseForge 上找到喜欢的整合包，下载整合包文件，此处以 Restrict Skyblock 为例</p><p><img src="https://picture.zhanganzhi.com/2022/06/19/7jqy8d1.png" alt="打开 Files"></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/0lwxnnf.png" alt="选择整合包版本"></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/4lgr1mb.png" alt="点击 Download 下载"></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/w0x17uf.png" alt="点击导入"></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/teu0gwf.png" alt="选择从 CurseForge 下载的文件"></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/l3mkqq6.png" alt="等待下载完成"></p><h2 id="导入启动器"><a href="#导入启动器" class="headerlink" title="导入启动器"></a>导入启动器</h2><p>等待下载完成弹出下图提示。将压缩包（位于软件目录，如果是导入即为原路径）导入启动器即可。</p><p><img src="https://picture.zhanganzhi.com/2022/06/19/6cpt62r.png" alt="提示下载完成"></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/r1o164g.png" alt="导入 MultiMC"></p><h2 id="鸣谢"><a href="#鸣谢" class="headerlink" title="鸣谢"></a>鸣谢</h2><p>感谢 <a href="http://anyijun.com/">安逸菌</a>、<a href="https://github.com/Cyl18">Cyl18</a> 和 <a href="https://github.com/ShaBaiTianCN">安逸汉化组</a> 在本软件开发过程中提供的建议和帮助。</p><h3 id="使用的-API-的文档"><a href="#使用的-API-的文档" class="headerlink" title="使用的 API 的文档"></a>使用的 API 的文档</h3><p><a href="https://gist.github.com/crapStone/9a423f7e97e64a301e88a2f6a0f3e4d9">Curse API</a><sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><span class="hint--top hint--rounded" aria-label="[curse_api.md](https://gist.github.com/crapStone/9a423f7e97e64a301e88a2f6a0f3e4d9). GitHub. 2020-09-09 [2022-05-23]. （原始内容[存档](https://web.archive.org/web/20220608154714/https://gist.github.com/crapStone/9a423f7e97e64a301e88a2f6a0f3e4d9)于2022-06-08）.">[3]</span></a></sup></p><p><a href="https://github.com/Gaz492/CurseforgeAPI/blob/master/apiary.apib">CurseforgeAPI&#x2F;apiary.apib</a><sup id="fnref:4" class="footnote-ref"><a href="#fn:4" rel="footnote"><span class="hint--top hint--rounded" aria-label="[CurseforgeAPI/apiary.apib](https://github.com/Gaz492/CurseforgeAPI/blob/master/apiary.apib). GitHub. 2021-04-10 [2022-05-23]. （原始内容[存档](https://web.archive.org/web/20220608154724/https://github.com/Gaz492/CurseforgeAPI/blob/master/apiary.apib)于2022-06-08）.">[4]</span></a></sup></p><h2 id="许可"><a href="#许可" class="headerlink" title="许可"></a>许可</h2><p>Copyright © 2022 Andy Zhang</p><p>本程序是自由软件：你可以再分发之和&#x2F;或依照由自由软件基金会发布的 GNU 通用公共许可证修改之，无论是版本 3 许可证，还是（按你的决定）任何以后版都可以。</p><p>发布该程序是希望它能有用，但是并无保障；甚至连可销售和符合某个特定的目的都不保证。请参看 GNU 通用公共许可证，了解详情。</p><p>你应该随程序获得一份 GNU 通用公共许可证的复本。如果没有，请看 <a href="https://www.gnu.org/licenses/">https://www.gnu.org/licenses/</a>。</p><section class="footnotes"><h2 id="参考文献">参考文献</h2><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>Moran Weiss. <a href="https://medium.com/overwolf/the-curseforge-official-api-is-now-live-d314606355c2">The CurseForge Official API is Now Live</a>. Overwolf Blog. 2022-05-16 [2022-05-23]. （原始内容<a href="https://web.archive.org/web/20220608151743/https://medium.com/overwolf/the-curseforge-official-api-is-now-live-d314606355c2">存档</a>于2022-06-08）.<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span>phit. <a href="https://github.com/MultiMC/Launcher/issues/4716#issuecomment-1135498404">Looks like CurseForge API in MultiMC is deprecated and unusable</a>. GitHub. 2022-05-24 [2022-05-26]. （原始内容<a href="https://web.archive.org/web/20220608152954/https://github.com/MultiMC/Launcher/issues/4716">存档</a>于2022-06-08）.<a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="https://gist.github.com/crapStone/9a423f7e97e64a301e88a2f6a0f3e4d9">curse_api.md</a>. GitHub. 2020-09-09 [2022-05-23]. （原始内容<a href="https://web.archive.org/web/20220608154714/https://gist.github.com/crapStone/9a423f7e97e64a301e88a2f6a0f3e4d9">存档</a>于2022-06-08）.<a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:4" class="footnote-text"><span><a href="https://github.com/Gaz492/CurseforgeAPI/blob/master/apiary.apib">CurseforgeAPI&#x2F;apiary.apib</a>. GitHub. 2021-04-10 [2022-05-23]. （原始内容<a href="https://web.archive.org/web/20220608154724/https://github.com/Gaz492/CurseforgeAPI/blob/master/apiary.apib">存档</a>于2022-06-08）.<a href="#fnref:4" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;2022年5月16日，CurseForge 发布了官方 API，同时弃用了旧的 API，这导致第三方启动器无法下载，如 MultiMC 和 PCL2。具体原因和详细情况在 &lt;a href=&quot;https://medium.com/overwolf/the-curseforge-official-api-is-now-live-d314606355c2&quot;&gt;《The CurseForge Official API is Now Live》&lt;/a&gt;&lt;sup id=&quot;fnref:1&quot; class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;#fn:1&quot; rel=&quot;footnote&quot;&gt;&lt;span class=&quot;hint--top hint--rounded&quot; aria-label=&quot;Moran Weiss. [The CurseForge Official API is Now Live](https://medium.com/overwolf/the-curseforge-official-api-is-now-live-d314606355c2). Overwolf Blog. 2022-05-16 [2022-05-23]. （原始内容[存档](https://web.archive.org/web/20220608151743/https://medium.com/overwolf/the-curseforge-official-api-is-now-live-d314606355c2)于2022-06-08）.&quot;&gt;[1]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt; 中有详细说明。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Minecraft" scheme="https://blog.zhanganzhi.com/categories/Minecraft/"/>
    
    <category term="工具" scheme="https://blog.zhanganzhi.com/categories/Minecraft/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="Minecraft" scheme="https://blog.zhanganzhi.com/tags/Minecraft/"/>
    
    <category term="整合包" scheme="https://blog.zhanganzhi.com/tags/%E6%95%B4%E5%90%88%E5%8C%85/"/>
    
    <category term="CurseForge" scheme="https://blog.zhanganzhi.com/tags/CurseForge/"/>
    
  </entry>
  
  <entry>
    <title>GPG 入门教程</title>
    <link href="https://blog.zhanganzhi.com/zh-CN/2022/06/1c71f69657ed/"/>
    <id>https://blog.zhanganzhi.com/zh-CN/2022/06/1c71f69657ed/</id>
    <published>2022-06-08T11:17:08.000Z</published>
    <updated>2022-06-08T11:17:08.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介和概念"><a href="#简介和概念" class="headerlink" title="简介和概念"></a>简介和概念</h2><p>完整的官方文档可在 <a href="https://www.gnupg.org/">官网</a> 阅读。</p><blockquote><p>GNU Privacy Guard（GnuPG 或 GPG）是一个密码学软件，用于加密、签名通信内容及管理非对称密码学的密钥。GnuPG 是自由软件，遵循 IETF 订定的 OpenPGP 技术标准设计，并与 PGP 保持兼容。</p></blockquote><p>GPG 有许多用途，包括文件和邮件加密、签名、Git 提交签名等。</p><p><img src="https://picture.zhanganzhi.com/2022/06/19/2hq6kjy.png" alt="经过 GPG 签名的提交可以在 GitHub 显示绿色的 Verified&lt;sup id=&quot;fnref:1&quot; class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;#fn:1&quot; rel=&quot;footnote&quot;&gt;&lt;span class=&quot;hint--top hint--rounded&quot; aria-label=&quot;[About commit signature verification](https://docs.github.com/en/authentication/managing-commit-signature-verification/about-commit-signature-verification). GitHub Docs. [2022-06-06]. （原始内容[存档](https://web.archive.org/web/20220606095245/https://docs.github.com/en/authentication/managing-commit-signature-verification/about-commit-signature-verification)于2022-06-06）&quot;&gt;[1]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;"></p><p>以下概念建议先浏览一遍，操作后再回来看一遍，可以更好理解。</p><h3 id="主密钥（Primary-Key）和子密钥（Subkey）"><a href="#主密钥（Primary-Key）和子密钥（Subkey）" class="headerlink" title="主密钥（Primary Key）和子密钥（Subkey）"></a>主密钥（Primary Key）和子密钥（Subkey）</h3><p>类似证书的根证书结构，GPG 密钥分为主密钥和子密钥。</p><p><img src="https://picture.zhanganzhi.com/2022/06/19/jgoxt42.png" alt="主密钥和子密钥的关系&lt;sup id=&quot;fnref:5&quot; class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;#fn:5&quot; rel=&quot;footnote&quot;&gt;&lt;span class=&quot;hint--top hint--rounded&quot; aria-label=&quot;嗯了个踢. [简明 GPG 概念](https://zhuanlan.zhihu.com/p/137801979). 知乎. 2020-05-02 [2022-06-06]. （原始内容[存档](https://web.archive.org/save/https://zhuanlan.zhihu.com/p/137801979)于2022-06-06）&quot;&gt;[5]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;"></p><p>子密钥虽然有自己的公钥，但是实际使用导出的是一组公钥，发布这一个公钥即可认证所有子密钥。所有的变更都是通过这个公钥发布的，比如 UID 的更改、子密钥的新增或撤销等。</p><h3 id="密钥类型"><a href="#密钥类型" class="headerlink" title="密钥类型"></a>密钥类型</h3><p>共有四种类型的密钥，对应的缩写<sup id="fnref:8" class="footnote-ref"><a href="#fn:8" rel="footnote"><span class="hint--top hint--rounded" aria-label="UlyC. [2021年，用更现代的方法使用PGP（上）](https://ulyc.github.io/2021/01/13/2021%E5%B9%B4-%E7%94%A8%E6%9B%B4%E7%8E%B0%E4%BB%A3%E7%9A%84%E6%96%B9%E6%B3%95%E4%BD%BF%E7%94%A8PGP-%E4%B8%8A/). UlyC - C的博客. 2021-01-13 [2022-06-06]. （原始内容[存档](https://web.archive.org/web/20220606133111/https://ulyc.github.io/2021/01/13/2021%E5%B9%B4-%E7%94%A8%E6%9B%B4%E7%8E%B0%E4%BB%A3%E7%9A%84%E6%96%B9%E6%B3%95%E4%BD%BF%E7%94%A8PGP-%E4%B8%8A/)于2022-06-06）">[8]</span></a></sup>如下：</p><table><thead><tr><th>类型</th><th>全名</th><th>缩写</th></tr></thead><tbody><tr><td>主公钥</td><td>Public Key</td><td>pub</td></tr><tr><td>子公钥</td><td>Public Subkey</td><td>sub</td></tr><tr><td>主私钥</td><td>Secret Key</td><td>sec</td></tr><tr><td>子私钥</td><td>Secret Subkey</td><td>ssb</td></tr></tbody></table><h3 id="用途（Usage）"><a href="#用途（Usage）" class="headerlink" title="用途（Usage）"></a>用途（Usage）</h3><p>每个密钥可以用不同的用途，下表是不同用途的含义：</p><table><thead><tr><th>缩写</th><th>全名</th><th>用途</th></tr></thead><tbody><tr><td>C</td><td>Certificating</td><td>认证，如子密钥或证书，类似根证书的作用。</td></tr><tr><td>S</td><td>Signing</td><td>签名，如文件数字签名、邮件签名、Git 提交。</td></tr><tr><td>A</td><td>Authenticating</td><td>身份验证，如登录。</td></tr><tr><td>E</td><td>Encrypting</td><td>加密，如文件和文本。</td></tr></tbody></table><p>具有 <code>C</code> 的密钥是主密钥，只有这个密钥可以用于：</p><ul><li>添加或撤销子密钥的用途</li><li>添加、更改或撤销密钥关联的身份（UID）</li><li>添加或更改本身或其他子密钥的到期时间</li><li>为了网络信任目的为其它密钥签名<sup id="fnref:7" class="footnote-ref"><a href="#fn:7" rel="footnote"><span class="hint--top hint--rounded" aria-label="Konstantin Ryabitsev. [用 PGP 保护代码完整性（二）：生成你的主密钥](https://linux.cn/article-9529-1.html). Linux 中国. 2018-04-09 [2022-06-06].">[7]</span></a></sup></li></ul><h3 id="用户-ID（User-ID）"><a href="#用户-ID（User-ID）" class="headerlink" title="用户 ID（User ID）"></a>用户 ID（User ID）</h3><p>用户 ID 用于将密钥和真人关联，可以有多个 UID，一般为以下格式：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">Name &lt;name@example.com&gt;<br></code></pre></td></tr></table></figure><p>如果使用多个身份，比如个人邮箱、 GitHub 账号、公司邮箱<sup id="fnref:6" class="footnote-ref"><a href="#fn:6" rel="footnote"><span class="hint--top hint--rounded" aria-label="Konstantin Ryabitsev. [用 PGP 保护代码完整性（一）： 基本概念和工具](https://linux.cn/article-9524-1.html). Linux 中国. 2018-04-08 [2022-06-06].">[6]</span></a></sup>，可以设置为这样：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">Name &lt;name@example.com&gt;<br>Name(GitHub) &lt;name@users.noreply.github.com&gt;<br>Name(Work) &lt;name@work.com&gt;<br></code></pre></td></tr></table></figure><p>需要注意公钥会包含电子邮件地址，注意隐私和垃圾邮件问题。</p><h3 id="密钥-ID（Key-ID）"><a href="#密钥-ID（Key-ID）" class="headerlink" title="密钥 ID（Key ID）"></a>密钥 ID（Key ID）</h3><p>每一个密钥 ID（Key ID）有三种形式，指定密钥的最好方式就是使用指纹，可以最大限度避免重复的 ID：</p><ul><li>指纹：证书的 SHA-1 哈希，20 字节；</li><li>长 ID：指纹的最后 16 位，8 字节；</li><li>短 ID：指纹的最后 8 位，4 字节；</li></ul><h3 id="过期（Expire）和撤销（Revoke）"><a href="#过期（Expire）和撤销（Revoke）" class="headerlink" title="过期（Expire）和撤销（Revoke）"></a>过期（Expire）和撤销（Revoke）</h3><p>GPG 密钥可以设置过期时间，可以是永久有效。很多人会给主密钥设置长期有效，对不同用途的子密钥设置较短的期限。</p><p>GPG 可以发布撤销证书，发布撤销证书后，其他人收到后就知道之前发布的密钥失效了。</p><h2 id="安装-GPG"><a href="#安装-GPG" class="headerlink" title="安装 GPG"></a>安装 GPG</h2><p>如果安装了 <a href="https://git-scm.com/">Git</a>，可直接使用 Git Bash。</p><p>也可以到 <a href="https://www.gnupg.org/download/">官网</a> 下载安装。</p><h2 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">gpg --full-gen-key<br></code></pre></td></tr></table></figure><p>选择加密类型，推荐 RSA 4096。</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs console">Please select what kind of key you want:<br>   (1) RSA and RSA (default)<br>   (2) DSA and Elgamal<br>   (3) DSA (sign only)<br>   (4) RSA (sign only)<br>  (14) Existing key from card<br>Your selection? 1<br>RSA keys may be between 1024 and 4096 bits long.<br>What keysize do you want? (3072) 4096<br>Requested keysize is 4096 bits<br></code></pre></td></tr></table></figure><p>设置过期时间，<code>0</code> 为永久。</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs console">Please specify how long the key should be valid.<br>         0 = key does not expire<br>      &lt;n&gt;  = key expires in n days<br>      &lt;n&gt;w = key expires in n weeks<br>      &lt;n&gt;m = key expires in n months<br>      &lt;n&gt;y = key expires in n years<br>Key is valid for? (0)<br>Key does not expire at all<br>Is this correct? (y/N) y<br></code></pre></td></tr></table></figure><p>根据提示输入姓名和邮箱，<code>Comment</code> 留空即可，然后设置密钥的密码。密码用于对称加密本地存储的私钥，在文件泄露的情况下也能保护你的密钥，在使用 GPG 密钥时经常需要输入密码以验证身份。</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs console">GnuPG needs to construct a user ID to identify your key.<br><br>Real name: Name<br>Email address: name@example.com<br>Comment:<br>You selected this USER-ID:<br>    &quot;Name &lt;name@example.com&gt;&quot;<br><br>Change (N)ame, (C)omment, (E)mail or (O)kay/(Q)uit? o<br></code></pre></td></tr></table></figure><p><img src="https://picture.zhanganzhi.com/2022/06/19/h6k7ui1.png" alt="设置密码"></p><p>同时会自动生成一个用途为 <code>E</code> 的子密钥，生成的密钥将会列出。</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs console">public and secret key created and signed.<br><br>pub   rsa4096 2022-06-06 [SC]<br>      5DE3E0509C47EA3CF04A42D34AEE18F83AFDEB23<br>uid                      Name &lt;name@example.com&gt;<br>sub   rsa4096 2022-06-06 [E]<br></code></pre></td></tr></table></figure><h3 id="生成子密钥"><a href="#生成子密钥" class="headerlink" title="生成子密钥"></a>生成子密钥</h3><p><strong>在日常使用中，应当避免使用主密钥，而是为不同用途使用不同的子密钥。</strong><sup id="fnref:8" class="footnote-ref"><a href="#fn:8" rel="footnote"><span class="hint--top hint--rounded" aria-label="UlyC. [2021年，用更现代的方法使用PGP（上）](https://ulyc.github.io/2021/01/13/2021%E5%B9%B4-%E7%94%A8%E6%9B%B4%E7%8E%B0%E4%BB%A3%E7%9A%84%E6%96%B9%E6%B3%95%E4%BD%BF%E7%94%A8PGP-%E4%B8%8A/). UlyC - C的博客. 2021-01-13 [2022-06-06]. （原始内容[存档](https://web.archive.org/web/20220606133111/https://ulyc.github.io/2021/01/13/2021%E5%B9%B4-%E7%94%A8%E6%9B%B4%E7%8E%B0%E4%BB%A3%E7%9A%84%E6%96%B9%E6%B3%95%E4%BD%BF%E7%94%A8PGP-%E4%B8%8A/)于2022-06-06）">[8]</span></a></sup></p><p>进入密钥的编辑，参数为上一步输出的密钥指纹。加上 <code>--expert</code> 参数以在下一步使用 <a href="https://zh.wikipedia.org/wiki/Curve25519">Curve 25519</a> 算法生成子密钥<sup id="fnref:9" class="footnote-ref"><a href="#fn:9" rel="footnote"><span class="hint--top hint--rounded" aria-label="UlyC. [2021年，用更现代的方法使用PGP（中）](https://ulyc.github.io/2021/01/18/2021%E5%B9%B4-%E7%94%A8%E6%9B%B4%E7%8E%B0%E4%BB%A3%E7%9A%84%E6%96%B9%E6%B3%95%E4%BD%BF%E7%94%A8PGP-%E4%B8%AD/). UlyC - C的博客. 2021-01-18 [2022-06-06]. （原始内容[存档](https://web.archive.org/web/20220606133131/https://ulyc.github.io/2021/01/18/2021%E5%B9%B4-%E7%94%A8%E6%9B%B4%E7%8E%B0%E4%BB%A3%E7%9A%84%E6%96%B9%E6%B3%95%E4%BD%BF%E7%94%A8PGP-%E4%B8%AD/)于2022-06-06）">[9]</span></a></sup>，这是一种安全性介于 RSA 2048 和 RSA 4096 之间的算法，且速度更快。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">gpg --expert --edit-key 5DE3E0509C47EA3CF04A42D34AEE18F83AFDEB23<br></code></pre></td></tr></table></figure><p>使用 <code>addkey</code> 添加子密钥，根据提示选择、输入密码、保存更改。</p><p>注意不同用途的子密钥可能需要选择不同的加密方式。</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">gpg&gt; </span><span class="language-bash">addkey</span><br>Please select what kind of key you want:<br>   (3) DSA (sign only)<br>   (4) RSA (sign only)<br>   (5) Elgamal (encrypt only)<br>   (6) RSA (encrypt only)<br>   (7) DSA (set your own capabilities)<br>   (8) RSA (set your own capabilities)<br>  (10) ECC (sign only)<br>  (11) ECC (set your own capabilities)<br>  (12) ECC (encrypt only)<br>  (13) Existing key<br>  (14) Existing key from card<br>Your selection? 10<br>Please select which elliptic curve you want:<br>   (1) Curve 25519<br>   (3) NIST P-256<br>   (4) NIST P-384<br>   (5) NIST P-521<br>   (6) Brainpool P-256<br>   (7) Brainpool P-384<br>   (8) Brainpool P-512<br>   (9) secp256k1<br>Your selection? 1<br>Please specify how long the key should be valid.<br>         0 = key does not expire<br>      &lt;n&gt;  = key expires in n days<br>      &lt;n&gt;w = key expires in n weeks<br>      &lt;n&gt;m = key expires in n months<br>      &lt;n&gt;y = key expires in n years<br>Key is valid for? (0)<br>Key does not expire at all<br>Is this correct? (y/N) y<br>Really create? (y/N) y<br></code></pre></td></tr></table></figure><p>在弹出的对话框输入密码。生成完成后保存。</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">gpg&gt; </span><span class="language-bash">save</span><br></code></pre></td></tr></table></figure><h3 id="撤销证书"><a href="#撤销证书" class="headerlink" title="撤销证书"></a>撤销证书</h3><p>默认情况下生成密钥后会在用户文件夹内的 <code>.gnupg\openpgp-revocs.d</code> 生成一份撤销证书，也可以使用 <code>gpg --output revoke.asc --gen-revoke mykey</code> 生成一份。</p><h2 id="管理密钥"><a href="#管理密钥" class="headerlink" title="管理密钥"></a>管理密钥</h2><h3 id="列出密钥"><a href="#列出密钥" class="headerlink" title="列出密钥"></a>列出密钥</h3><p>使用 <code>gpg --list-keys</code> 即可列出本地所有公钥和子公钥，还有一个简便写法：<code>gpg -k</code>。</p><p>私钥类似，<code>gpg --list-secret-keys</code> 和 <code>gpg -K</code>。</p><hr><p>我们在本地使用时，长 ID 和短 ID 更方便，使用 <code>--keyid-format &#123;none|short|0xshort|long|0xlong&#125;</code> 即可输出长 ID 或短 ID：</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">gpg -k --keyid-format short</span><br>~/.gnupg/pubring.kbx<br>---------------------------------<br>pub   rsa2048/3AFDEB23 2017-08-16 [SC]<br>      5DE3E0509C47EA3CF04A42D34AEE18F83AFDEB23<br>uid         [ultimate] GitHub (web-flow commit signing) &lt;noreply@github.com&gt;<br></code></pre></td></tr></table></figure><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">gpg -k --keyid-format long</span><br>~/.gnupg/pubring.kbx<br>---------------------------------<br>pub   rsa2048/4AEE18F83AFDEB23 2017-08-16 [SC]<br>      5DE3E0509C47EA3CF04A42D34AEE18F83AFDEB23<br>uid                 [ultimate] GitHub (web-flow commit signing) &lt;noreply@github.com&gt;<br></code></pre></td></tr></table></figure><p>默认情况下会输出连续的 20 字节指纹，例如 <code>5DE3E0509C47EA3CF04A42D34AEE18F83AFDEB23</code>。使用 <code>--fingerprint</code> 参数可输出有空格分隔的指纹，例如 <code>5DE3 E050 9C47 EA3C F04A  42D3 4AEE 18F8 3AFD EB23</code>。</p><p>以上两个参数可以在配置文件 <code>~/.gnupg/gpg.conf</code> 中添加以避免重复输入，文件需要手动创建。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">keyid-format long<br>fingerprint<br></code></pre></td></tr></table></figure><h3 id="导入和导出"><a href="#导入和导出" class="headerlink" title="导入和导出"></a>导入和导出</h3><p>使用 <code>gpg --import key.gpg</code> 导入密钥，后面会提到导入 GitHub 的公钥。</p><hr><p>通过以下命令查看使用 ASCII-armored 格式的公钥：</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">gpg --<span class="hljs-built_in">export</span> --armor 4AEE18F83AFDEB23</span><br>-----BEGIN PGP PUBLIC KEY BLOCK-----<br>[...]<br>-----END PGP PUBLIC KEY BLOCK-----<br></code></pre></td></tr></table></figure><p>增加 <code>--output</code> 参数以导出到文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">gpg --armor --output public-key.gpg --<span class="hljs-built_in">export</span> 4AEE18F83AFDEB23<br></code></pre></td></tr></table></figure><p>导出私钥，需要输入密码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">gpg --armor --output private-key.gpg --export-secret-keys 4AEE18F83AFDEB23<br></code></pre></td></tr></table></figure><p>建议将导出的公私钥和撤销证书做好备份。</p><h3 id="修改用户-ID（UID）"><a href="#修改用户-ID（UID）" class="headerlink" title="修改用户 ID（UID）"></a>修改用户 ID（UID）</h3><p>进入编辑密钥，然后修改 UID，可以添加、设置主 UID、撤销和删除。</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">gpg --edit-key 4AEE18F83AFDEB23</span><br><span class="hljs-meta prompt_">gpg&gt; </span><span class="language-bash">adduid</span><br>Real name: Name(Work)<br>Email address: name@work.com<br>Comment:<br>You selected this USER-ID:<br>    &quot;Name(Work) &lt;name@work.com&gt;&quot;<br><br>Change (N)ame, (C)omment, (E)mail or (O)kay/(Q)uit? o<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">gpg&gt; </span><span class="language-bash">uid 1</span><br>[ultimate] (1)* Name &lt;name@example.com&gt;<br>[ unknown] (2). Name(Work) &lt;name@work.com&gt;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">gpg&gt; </span><span class="language-bash">primary</span><br>[ultimate] (1)* Name &lt;name@example.com&gt;<br>[ unknown] (2)  Name(Work) &lt;name@work.com&gt;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">gpg&gt; </span><span class="language-bash">uid 1</span><br>[ultimate] (1). Name &lt;name@example.com&gt;<br>[ unknown] (2)  Name(Work) &lt;name@work.com&gt;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">gpg&gt; </span><span class="language-bash">uid 2</span><br>[ultimate] (1). Name &lt;name@example.com&gt;<br>[ unknown] (2)* Name(Work) &lt;name@work.com&gt;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">gpg&gt; </span><span class="language-bash">revuid</span><br>[ultimate] (1). Name &lt;name@example.com&gt;<br>[ revoked] (2)  Name(Work) &lt;name@work.com&gt;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">gpg&gt; </span><span class="language-bash">uid 2</span><br>[ultimate] (1). Name &lt;name@example.com&gt;<br>[ revoked] (2)* Name(Work) &lt;name@work.com&gt;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">gpg&gt; </span><span class="language-bash">deluid</span><br>[ultimate] (1). Name &lt;name@example.com&gt;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">gpg&gt; </span><span class="language-bash">save</span><br></code></pre></td></tr></table></figure><h2 id="Git-amp-GitHub-使用"><a href="#Git-amp-GitHub-使用" class="headerlink" title="Git &amp; GitHub 使用"></a>Git &amp; GitHub 使用</h2><p>Git 提交可以使用 GPG 密钥签名，增加 <code>--show-signature</code> 参数即可显示提交的签名信息。</p><p>未信任的公钥签名的提交显示红色提示。</p><p><img src="https://picture.zhanganzhi.com/2022/06/19/txzi1fd.png" alt="未信任公钥的签名"></p><p>已信任的公钥签名的提交显示青色提示。</p><p><img src="https://picture.zhanganzhi.com/2022/06/19/dje94dq.png" alt="已信任公钥的签名"></p><h3 id="Git-设置"><a href="#Git-设置" class="headerlink" title="Git 设置"></a>Git 设置</h3><p>密钥的 UID 需要包括 Git 使用的邮箱。</p><p>首先告诉 Git 使用的密钥。<sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><span class="hint--top hint--rounded" aria-label="[Telling Git about your signing key](https://docs.github.com/en/authentication/managing-commit-signature-verification/telling-git-about-your-signing-key). GitHub Docs. [2022-06-06]. （原始内容[存档](https://web.archive.org/web/20220529202622/https://docs.github.com/en/authentication/managing-commit-signature-verification/telling-git-about-your-signing-key)于2022-05-29）">[3]</span></a></sup></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.signingkey 4AEE18F83AFDEB23<br></code></pre></td></tr></table></figure><p>然后设置提交时使用 GPG 签名。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global commit.gpgsign <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><h3 id="信任-GitHub-公钥"><a href="#信任-GitHub-公钥" class="headerlink" title="信任 GitHub 公钥"></a>信任 GitHub 公钥</h3><p>使用以下命令导入并信任 GitHub 的公钥。<sup id="fnref:11" class="footnote-ref"><a href="#fn:11" rel="footnote"><span class="hint--top hint--rounded" aria-label="VonC. [What is GitHub's public GPG key?](https://stackoverflow.com/questions/60482588/what-is-githubs-public-gpg-key). Stack Overflow. 2022-03-02 [2022-06-06]. （原始内容[存档](https://web.archive.org/web/20211123035710/https://stackoverflow.com/questions/60482588/what-is-githubs-public-gpg-key)于2021-11-23）">[11]</span></a></sup></p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">curl https://github.com/web-flow.gpg | gpg --import</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">gpg --edit-key noreply@github.com</span><br><span class="hljs-meta prompt_">gpg&gt; </span><span class="language-bash">trust</span><br><span class="hljs-meta prompt_">gpg&gt; </span><span class="language-bash">save</span><br></code></pre></td></tr></table></figure><h3 id="上传公钥到-GitHub"><a href="#上传公钥到-GitHub" class="headerlink" title="上传公钥到 GitHub"></a>上传公钥到 GitHub</h3><p>打开 GitHub 设置，找到 <code>SSH and GPG Keys</code>。<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="[Adding a new GPG key to your GitHub account](https://docs.github.com/en/authentication/managing-commit-signature-verification/adding-a-new-gpg-key-to-your-github-account). GitHub Docs. [2022-06-06]. （原始内容[存档](https://web.archive.org/web/20220531040934/https://docs.github.com/en/authentication/managing-commit-signature-verification/adding-a-new-gpg-key-to-your-github-account)于2022-05-31）">[2]</span></a></sup></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/c6mmdq9.png" alt="GitHub 设置"></p><p>点击 <code>New GPG Key</code>，把导出的公钥复制进去。</p><p><img src="https://picture.zhanganzhi.com/2022/06/19/98vpfaj.png" alt="新建 GPG 密钥"></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/eiq03eb.png" alt="填写并保存"></p><p>此时签名的提交在 GitHub 即可显示绿色的 <code>Verified</code>。</p><section class="footnotes"><h2 id="参考文献">参考文献</h2><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://docs.github.com/en/authentication/managing-commit-signature-verification/about-commit-signature-verification">About commit signature verification</a>. GitHub Docs. [2022-06-06]. （原始内容<a href="https://web.archive.org/web/20220606095245/https://docs.github.com/en/authentication/managing-commit-signature-verification/about-commit-signature-verification">存档</a>于2022-06-06）<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://docs.github.com/en/authentication/managing-commit-signature-verification/adding-a-new-gpg-key-to-your-github-account">Adding a new GPG key to your GitHub account</a>. GitHub Docs. [2022-06-06]. （原始内容<a href="https://web.archive.org/web/20220531040934/https://docs.github.com/en/authentication/managing-commit-signature-verification/adding-a-new-gpg-key-to-your-github-account">存档</a>于2022-05-31）<a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="https://docs.github.com/en/authentication/managing-commit-signature-verification/telling-git-about-your-signing-key">Telling Git about your signing key</a>. GitHub Docs. [2022-06-06]. （原始内容<a href="https://web.archive.org/web/20220529202622/https://docs.github.com/en/authentication/managing-commit-signature-verification/telling-git-about-your-signing-key">存档</a>于2022-05-29）<a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:4" class="footnote-text"><span>阮一峰. <a href="https://www.ruanyifeng.com/blog/2013/07/gpg.html">GPG入门教程</a>. 阮一峰的网络日志. 2013-07-12 [2022-06-06]. （原始内容<a href="https://web.archive.org/web/20220601090505/https://www.ruanyifeng.com/blog/2013/07/gpg.html">存档</a>于2022-06-01）<a href="#fnref:4" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:5" class="footnote-text"><span>嗯了个踢. <a href="https://zhuanlan.zhihu.com/p/137801979">简明 GPG 概念</a>. 知乎. 2020-05-02 [2022-06-06]. （原始内容<a href="https://web.archive.org/save/https://zhuanlan.zhihu.com/p/137801979">存档</a>于2022-06-06）<a href="#fnref:5" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:6" class="footnote-text"><span>Konstantin Ryabitsev. <a href="https://linux.cn/article-9524-1.html">用 PGP 保护代码完整性（一）： 基本概念和工具</a>. Linux 中国. 2018-04-08 [2022-06-06].<a href="#fnref:6" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:7" class="footnote-text"><span>Konstantin Ryabitsev. <a href="https://linux.cn/article-9529-1.html">用 PGP 保护代码完整性（二）：生成你的主密钥</a>. Linux 中国. 2018-04-09 [2022-06-06].<a href="#fnref:7" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:8" class="footnote-text"><span>UlyC. <a href="https://ulyc.github.io/2021/01/13/2021%E5%B9%B4-%E7%94%A8%E6%9B%B4%E7%8E%B0%E4%BB%A3%E7%9A%84%E6%96%B9%E6%B3%95%E4%BD%BF%E7%94%A8PGP-%E4%B8%8A/">2021年，用更现代的方法使用PGP（上）</a>. UlyC - C的博客. 2021-01-13 [2022-06-06]. （原始内容<a href="https://web.archive.org/web/20220606133111/https://ulyc.github.io/2021/01/13/2021%E5%B9%B4-%E7%94%A8%E6%9B%B4%E7%8E%B0%E4%BB%A3%E7%9A%84%E6%96%B9%E6%B3%95%E4%BD%BF%E7%94%A8PGP-%E4%B8%8A/">存档</a>于2022-06-06）<a href="#fnref:8" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:9" class="footnote-text"><span>UlyC. <a href="https://ulyc.github.io/2021/01/18/2021%E5%B9%B4-%E7%94%A8%E6%9B%B4%E7%8E%B0%E4%BB%A3%E7%9A%84%E6%96%B9%E6%B3%95%E4%BD%BF%E7%94%A8PGP-%E4%B8%AD/">2021年，用更现代的方法使用PGP（中）</a>. UlyC - C的博客. 2021-01-18 [2022-06-06]. （原始内容<a href="https://web.archive.org/web/20220606133131/https://ulyc.github.io/2021/01/18/2021%E5%B9%B4-%E7%94%A8%E6%9B%B4%E7%8E%B0%E4%BB%A3%E7%9A%84%E6%96%B9%E6%B3%95%E4%BD%BF%E7%94%A8PGP-%E4%B8%AD/">存档</a>于2022-06-06）<a href="#fnref:9" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:10" class="footnote-text"><span>UlyC. <a href="https://ulyc.github.io/2021/01/26/2021%E5%B9%B4-%E7%94%A8%E6%9B%B4%E7%8E%B0%E4%BB%A3%E7%9A%84%E6%96%B9%E6%B3%95%E4%BD%BF%E7%94%A8PGP-%E4%B8%8B/">2021年，用更现代的方法使用PGP（下）</a>. UlyC - C的博客. 2021-01-26 [2022-06-06]. （原始内容<a href="https://web.archive.org/web/20220606170227/https://ulyc.github.io/2021/01/26/2021%E5%B9%B4-%E7%94%A8%E6%9B%B4%E7%8E%B0%E4%BB%A3%E7%9A%84%E6%96%B9%E6%B3%95%E4%BD%BF%E7%94%A8PGP-%E4%B8%8B/">存档</a>于2022-06-06）<a href="#fnref:10" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:11" class="footnote-text"><span>VonC. <a href="https://stackoverflow.com/questions/60482588/what-is-githubs-public-gpg-key">What is GitHub’s public GPG key?</a>. Stack Overflow. 2022-03-02 [2022-06-06]. （原始内容<a href="https://web.archive.org/web/20211123035710/https://stackoverflow.com/questions/60482588/what-is-githubs-public-gpg-key">存档</a>于2021-11-23）<a href="#fnref:11" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <summary type="html">GPG 简介和基本操作</summary>
    
    
    
    <category term="开发" scheme="https://blog.zhanganzhi.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="计算机" scheme="https://blog.zhanganzhi.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    <category term="密码学" scheme="https://blog.zhanganzhi.com/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
    <category term="GPG" scheme="https://blog.zhanganzhi.com/tags/GPG/"/>
    
    <category term="GitHub" scheme="https://blog.zhanganzhi.com/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>Minecraft Forge Mod 开发环境搭建</title>
    <link href="https://blog.zhanganzhi.com/zh-CN/2022/06/226b86b1999a/"/>
    <id>https://blog.zhanganzhi.com/zh-CN/2022/06/226b86b1999a/</id>
    <published>2022-06-04T22:03:06.000Z</published>
    <updated>2022-06-04T22:03:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文参考了 <a href="https://boson.v2mcdev.com/introducation/intro.html">Boson 1.16 Modding Tutorial</a> 的 <code>环境配置</code><sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="[环境配置](https://boson.v2mcdev.com/devenvironment/intro.html). Boson 1.16 Modding Tutorial. [2022-06-04].">[1]</span></a></sup> 部分。</p><h2 id="准备工具"><a href="#准备工具" class="headerlink" title="准备工具"></a>准备工具</h2><ul><li>IDE：<a href="https://www.jetbrains.com/zh-cn/idea/">IntelliJ IDEA</a></li><li>Java开发环境：<a href="https://www.oracle.com/java/technologies/javase/javase8u211-later-archive-downloads.html#:~:text=Java%20SE%20Development%20Kit%208u311">JDK 8u311</a></li><li>安装示例插件：<a href="https://files.minecraftforge.net/net/minecraftforge/forge/">Forge MDK</a></li></ul><p><img src="https://picture.zhanganzhi.com/2022/06/19/hh9z1s5.png" alt="MDK下载"></p><h2 id="导入项目"><a href="#导入项目" class="headerlink" title="导入项目"></a>导入项目</h2><p>解压下载的压缩文件，使用 IDEA 打开文件夹，等待项目导入完成。</p><p><img src="https://picture.zhanganzhi.com/2022/06/19/575ptqi.png" alt="项目导入完成"></p><p>打开 <code>Settings</code> -&gt; <code>Build, Execution, Deployment</code> -&gt; <code>Build Tools</code> -&gt; <code>Gradle</code>，将 <code>Build and run using</code> 设置为 <code>IntelliJ IDEA</code> 以加快运行速度</p><p><img src="https://picture.zhanganzhi.com/2022/06/19/zmdjmu9.png" alt="Gradle 设置"></p><p>建议将 <code>build.gradle</code> 中的所有 <code>property &#39;forge.logging.console.level&#39;, &#39;debug&#39;</code> 改为 <code>property &#39;forge.logging.console.level&#39;, &#39;info&#39;</code> 以减少日志输出。</p><p>打开右侧的 <code>Gradle</code> 面板，运行 <code>genIntellijRuns</code>。</p><p><img src="https://picture.zhanganzhi.com/2022/06/19/kmxtmtj.png" alt="生成 IDEA 运行配置"></p><p>在右上角选择 <code>runClient</code>，使用 run 或 debug 启动 Minecraft。</p><p><img src="https://picture.zhanganzhi.com/2022/06/19/iyiwnkf.png" alt="点击运行客户端"></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/pt49mui.png" alt="成功运行客户端"></p><h3 id="项目文件结构简介"><a href="#项目文件结构简介" class="headerlink" title="项目文件结构简介"></a>项目文件结构简介</h3><table><thead><tr><th>文件或文件夹</th><th>简介</th></tr></thead><tbody><tr><td>build.gradle</td><td>Gradle 配置文件，大部分项目配置都在这里。</td></tr><tr><td>build 和 out</td><td>编译目录，打包的 jar 文件在 <code>build/libs</code> 中。</td></tr><tr><td>run</td><td>MC 根目录，可以在此处查看日志等信息。</td></tr><tr><td>src</td><td>资源文件和源码目录。</td></tr></tbody></table><h2 id="配置模组信息"><a href="#配置模组信息" class="headerlink" title="配置模组信息"></a>配置模组信息</h2><h3 id="build-gradle"><a href="#build-gradle" class="headerlink" title="build.gradle"></a>build.gradle</h3><p>打开 <code>build.gradle</code>，找到 <code>version</code>、<code>group</code> 和 <code>archiveBaseName</code>。</p><p><img src="https://picture.zhanganzhi.com/2022/06/19/hfsxkze.png" alt="默认的配置"></p><ul><li><code>version</code> 是版本号，一般遵循 Forge的 <a href="https://mcforge.readthedocs.io/en/latest/gettingstarted/versioning/">语义化版本</a>，改为 <code>1.16.5-0.0.1.0</code>。</li><li><code>group</code> 是包名，一般为域名，这里配置为 <code>com.example</code>。</li><li><code>archiveBaseName</code> 是打包的文件的基础名，打包的文件名格式为 <code>&lt;archivesBaseName&gt;-&lt;version&gt;.jar</code>。修改完成后点击右上角的 <code>Load Gradle Changes</code>。</li></ul><p><img src="https://picture.zhanganzhi.com/2022/06/19/lemo4gi.png" alt="修改后的配置"><br><img src="https://picture.zhanganzhi.com/2022/06/19/l2fu0mi.png" alt="点击加载新配置"></p><h3 id="mods-toml"><a href="#mods-toml" class="headerlink" title="mods.toml"></a>mods.toml</h3><p>这部分内容可以在游戏内的模组列表看到效果。打开 <code>src/main/resources/META-INF/mods.toml</code>，注释说明得很全面，也可以参考下表<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="[Structuring Your Mod](https://mcforge.readthedocs.io/en/latest/gettingstarted/structuring/). Forge Documentation. [2022-06-04]. （原始内容[存档](https://web.archive.org/web/20220605133857/https://mcforge.readthedocs.io/en/latest/gettingstarted/structuring/)于2022-06-05）.">[2]</span></a></sup>：</p><table><thead><tr><th>属性</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>license</td><td>string</td><td>许可证名称。</td></tr><tr><td>modid</td><td>string</td><td>modid。</td></tr><tr><td>version</td><td>string</td><td>模组版本，必须是点分隔的数字，最好符合 Forge 的 <a href="https://mcforge.readthedocs.io/en/latest/gettingstarted/versioning/">语义化版本</a> 结构。</td></tr><tr><td>displayName</td><td>string</td><td>模组显示的名称。</td></tr><tr><td>updateJSONURL</td><td>string</td><td><a href="https://mcforge.readthedocs.io/en/latest/misc/updatechecker/">版本 JSON 文件</a> 的 URL。</td></tr><tr><td>displayURL</td><td>string</td><td>模组主页的URL。</td></tr><tr><td>logoFile</td><td>string</td><td>logo 文件名，必须位于 resources 文件夹内。</td></tr><tr><td>credits</td><td>string</td><td>鸣谢。</td></tr><tr><td>authors</td><td>string</td><td>模组作者。</td></tr><tr><td>description</td><td>string</td><td>模组描述，可以是多行。</td></tr><tr><td>dependencies</td><td>[list]</td><td>模组依赖列表。</td></tr></tbody></table><h3 id="模组主类"><a href="#模组主类" class="headerlink" title="模组主类"></a>模组主类</h3><p>删除 <code>src/main/java</code> 内的全部文件，按 <code>group</code> 和 <code>modid</code>，自己新建一个包和类，这个类就是模组的入口，内容如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.examplemod;<br><br><span class="hljs-keyword">import</span> net.minecraftforge.fml.common.Mod;<br><br><span class="hljs-meta">@Mod(&quot;examplemod&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ExampleMod</span> &#123;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="pack-mcmeta"><a href="#pack-mcmeta" class="headerlink" title="pack.mcmeta"></a>pack.mcmeta</h3><p>数据包描述，可以修改 <code>description</code>。</p><p><img src="https://picture.zhanganzhi.com/2022/06/19/f9kf0y9.png" alt="选择数据包的界面"></p><h2 id="其它模组"><a href="#其它模组" class="headerlink" title="其它模组"></a>其它模组</h2><h3 id="依赖项"><a href="#依赖项" class="headerlink" title="依赖项"></a>依赖项</h3><p>如果想将某个模组设置为依赖项，需要在 <code>mods.toml</code> 中配置，每一个依赖项的格式必须为 <code>[[dependencies.modid]]</code>，参考下表<sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><span class="hint--top hint--rounded" aria-label="[Mods.toml](https://forge.gemwire.uk/wiki/Mods.toml#:~:text=http%3A//example.com/%22-,Dependency%20Configurations,-Mods%20can%20define). Forge Community Wiki. 2022-03-22 [2022-06-04]. （原始内容[存档](https://web.archive.org/web/20220605134745/https://forge.gemwire.uk/wiki/Mods.toml#:~:text=http%3A//example.com/%22-,Dependency%20Configurations,-Mods%20can%20define)于2022-06-05）.">[3]</span></a></sup>：</p><table><thead><tr><th>属性</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>modId</td><td>string</td><td>依赖项的模组 ID。</td></tr><tr><td>mandatory</td><td>boolean</td><td>依赖项未满足时是否崩溃。</td></tr><tr><td>versionRange</td><td>string</td><td>可接受的依赖项版本，以 <a href="https://maven.apache.org/enforcer/enforcer-rules/versionRanges.html">Maven version spec</a> 表示。空字符串为无边界版本范围，即匹配任意版本。</td></tr><tr><td>ordering</td><td>string</td><td>定义模组是否必须在此依赖项之前或之后加载。有效值为 <code>BEFORE</code>（必须在之前加载）、<code>AFTER</code>（必须在之后加载）和 <code>NONE</code>（不关心顺序）。</td></tr><tr><td>side</td><td>string</td><td>有效值为 <code>CLIENT</code>（存在于客户端）、SERVER（存在于专用服务器）和 BOTH（存在于两侧）。</td></tr></tbody></table><p>尽管空字符串的 <code>versionRange</code> 可以匹配任意版本，但是建议使用 <code>[0,)</code> 匹配。</p><h3 id="加载模组"><a href="#加载模组" class="headerlink" title="加载模组"></a>加载模组</h3><p>如果想加载其它模组，不可以直接在 <code>run/mods</code> 中加载，需要配置 <code>build.gradle</code>。<sup id="fnref:4" class="footnote-ref"><a href="#fn:4" rel="footnote"><span class="hint--top hint--rounded" aria-label="[Dependencies](https://forge.gemwire.uk/wiki/Dependencies). Forge Community Wiki. 2021-08-02 [2022-06-04]. （原始内容[存档](https://web.archive.org/web/20220605135343/https://forge.gemwire.uk/wiki/Dependencies)于2022-06-05）.">[4]</span></a></sup></p><p>大部分模组都会提供配置信息，比如 JEI<sup id="fnref:5" class="footnote-ref"><a href="#fn:5" rel="footnote"><span class="hint--top hint--rounded" aria-label="[Getting Started [1.13 and Up]](https://github.com/mezz/JustEnoughItems/wiki/Getting-Started-%5B1.13-and-Up%5D). mezz/JustEnoughItems Wiki. 2021-11-30 [2022-06-05]. （原始内容[存档](https://web.archive.org/web/20220605140318/https://github.com/mezz/JustEnoughItems/wiki/Getting-Started-%5B1.13-and-Up%5D)于2022-06-05）.">[5]</span></a></sup>，配置 <code>build.gradle</code> 即可正确加载：</p><p><img src="https://picture.zhanganzhi.com/2022/06/19/ei54p06.png" alt="JEI 提供的配置"></p><p>也有部分模组不提供，可以使用以下两种方式。</p><h4 id="本地文件"><a href="#本地文件" class="headerlink" title="本地文件"></a>本地文件</h4><p>在项目根目录创建一个 <code>lib</code> 文件夹，将下载的模组文件放入该文件夹。</p><p>在 <code>build.gradle</code> 中添加以下配置：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">repositories</span> &#123;<br>    <span class="hljs-keyword">flatDir</span> &#123;<br>        dirs <span class="hljs-string">&#x27;lib&#x27;</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><code>depdependencies</code> 的格式如下：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle">runtimeOnly fg.deobf(<span class="hljs-string">&quot;&lt;group&gt;:&lt;artifact&gt;:&lt;version&gt;&quot;</span>)<br></code></pre></td></tr></table></figure><p>以 JEI 为例，下载 <code>jei-1.16.5-7.7.1.152.jar</code>，放入 <code>lib</code> 文件夹，配置如下：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle">runtimeOnly fg.deobf(<span class="hljs-string">&quot;mezz.jei:jei:1.16.5-7.7.1.152&quot;</span>)<br></code></pre></td></tr></table></figure><p>注：group 不影响本地文件加载，可以随意填写。</p><h4 id="Curse-Maven"><a href="#Curse-Maven" class="headerlink" title="Curse Maven"></a><a href="https://www.cursemaven.com/">Curse Maven</a></h4><p>本地文件的方式并不方便，需要手动下载模组，对多人合作也不友好，<a href="https://www.cursemaven.com/">Curse Maven</a> 支持所有上传到 <a href="https://www.curseforge.com/">Curse Forge</a> 的模组，在 <code>build.gradle</code> 中添加以下配置：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">repositories</span> &#123;<br>    maven &#123;<br>        url <span class="hljs-string">&quot;https://cursemaven.com&quot;</span><br>        content &#123;<br>            includeGroup <span class="hljs-string">&quot;curse.maven&quot;</span><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><code>depdependencies</code> 的格式如下：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle">runtimeOnly fg.deobf(<span class="hljs-string">&quot;curse.maven:&lt;descriptor&gt;-&lt;projectid&gt;:&lt;fileids&gt;&quot;</span>)<br></code></pre></td></tr></table></figure><p><img src="https://picture.zhanganzhi.com/2022/06/19/n6j3daq.png" alt="&amp;ltdescriptor&gt; 可以为任意内容，这会显示在下载的文件名汇总，最好设置为模组的名称，如项目名"></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/8bjqnnp.png" alt="&amp;ltprojectid&gt; 项目ID"></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/c07tjwl.png" alt="&amp;ltfileids&gt; 文件ID"></p><p>以 <a href="https://www.curseforge.com/minecraft/mc-mods/jei/files/3681294">JEI 1.16.5-7.7.1.152</a> 为例，配置如下：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle">runtimeOnly fg.deobf(<span class="hljs-string">&quot;curse.maven:jei-238222:3681294&quot;</span>)<br></code></pre></td></tr></table></figure><h2 id="GitHub-Actions-配置（可选）"><a href="#GitHub-Actions-配置（可选）" class="headerlink" title="GitHub Actions 配置（可选）"></a>GitHub Actions 配置（可选）</h2><p>通过配置 GitHub Actions，可以实现发布 Release 和 PR 自动打包。</p><p>首先修改 <code>build.gradle</code>，将 <code>version</code> 部分改为以下内容：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">if</span> (<span class="hljs-keyword">project</span>.hasProperty(<span class="hljs-string">&#x27;projVersion&#x27;</span>)) &#123;<br>    version = <span class="hljs-keyword">project</span>.projVersion<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    version = <span class="hljs-string">&#x27;1.16.5-0.0.1.0&#x27;</span><br>&#125;<br></code></pre></td></tr></table></figure><p>创建 <code>.github/workflows</code> 文件夹，创建两个 <code>yml</code> 文件，注意修改 <code>&lt;modname&gt;</code>。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">name:</span> <span class="hljs-string">Release</span> <span class="hljs-string">Packer</span><br><span class="hljs-attr">on:</span><br>  <span class="hljs-attr">workflow_dispatch:</span><br>    <span class="hljs-attr">inputs:</span><br>      <span class="hljs-attr">version:</span><br>        <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;Release Version&#x27;</span><br>        <span class="hljs-attr">required:</span> <span class="hljs-literal">true</span><br>        <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>      <span class="hljs-attr">pre_release:</span><br>        <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;This is a pre-release&#x27;</span><br>        <span class="hljs-attr">required:</span> <span class="hljs-literal">true</span><br>        <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>        <span class="hljs-attr">default:</span> <span class="hljs-literal">false</span><br><br><span class="hljs-attr">env:</span><br>  <span class="hljs-attr">NAME:</span> <span class="hljs-string">&lt;modname&gt;-$&#123;&#123;</span> <span class="hljs-string">github.event.inputs.version</span> <span class="hljs-string">&#125;&#125;</span><br><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">pack:</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">Pack</span><br><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Check</span> <span class="hljs-string">Out</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v3</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Setup</span> <span class="hljs-string">Java</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/setup-java@v3</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">java-version:</span> <span class="hljs-string">&#x27;8&#x27;</span><br>          <span class="hljs-attr">distribution:</span> <span class="hljs-string">&#x27;adopt&#x27;</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Chmod</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">chmod</span> <span class="hljs-string">+x</span> <span class="hljs-string">./gradlew</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Pack</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">./gradlew</span> <span class="hljs-string">jar</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Create</span> <span class="hljs-string">Release</span><br>        <span class="hljs-attr">id:</span> <span class="hljs-string">create_release</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/create-release@v1</span><br>        <span class="hljs-attr">env:</span><br>          <span class="hljs-attr">GITHUB_TOKEN:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.GITHUB_TOKEN</span> <span class="hljs-string">&#125;&#125;</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">tag_name:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">github.event.inputs.version</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">release_name:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">env.NAME</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">draft:</span> <span class="hljs-literal">false</span><br>          <span class="hljs-attr">prerelease:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">github.event.inputs.pre_release</span> <span class="hljs-string">&#125;&#125;</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Upload</span> <span class="hljs-string">Release</span> <span class="hljs-string">Asset</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/upload-release-asset@v1</span><br>        <span class="hljs-attr">env:</span><br>          <span class="hljs-attr">GITHUB_TOKEN:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.GITHUB_TOKEN</span> <span class="hljs-string">&#125;&#125;</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">upload_url:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">steps.create_release.outputs.upload_url</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">asset_path:</span> <span class="hljs-string">build/libs/$&#123;&#123;</span> <span class="hljs-string">env.NAME</span> <span class="hljs-string">&#125;&#125;.jar</span><br>          <span class="hljs-attr">asset_name:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">env.NAME</span> <span class="hljs-string">&#125;&#125;.jar</span><br>          <span class="hljs-attr">asset_content_type:</span> <span class="hljs-string">application/java-archive</span><br></code></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">name:</span> <span class="hljs-string">PR</span> <span class="hljs-string">Packer</span><br><span class="hljs-attr">on:</span> <span class="hljs-string">pull_request_target</span><br><br><span class="hljs-attr">env:</span><br>  <span class="hljs-attr">NAME:</span> <span class="hljs-string">&quot;&lt;modname&gt;-#$<span class="hljs-template-variable">&#123;&#123; github.event.number &#125;&#125;</span>&quot;</span><br><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">pack:</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">Pack</span><br><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Check</span> <span class="hljs-string">Out</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v3</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">ref:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">github.event.pull_request.head.sha</span> <span class="hljs-string">&#125;&#125;</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Setup</span> <span class="hljs-string">Java</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/setup-java@v3</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">java-version:</span> <span class="hljs-string">&#x27;8&#x27;</span><br>          <span class="hljs-attr">distribution:</span> <span class="hljs-string">&#x27;adopt&#x27;</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Chmod</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">chmod</span> <span class="hljs-string">+x</span> <span class="hljs-string">./gradlew</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Pack</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">&quot;./gradlew -PprojVersion=#$<span class="hljs-template-variable">&#123;&#123; github.event.number &#125;&#125;</span> jar&quot;</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Upload</span> <span class="hljs-string">Artifact</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/upload-artifact@v3</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">name:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">env.NAME</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">path:</span> <span class="hljs-string">build/libs/$&#123;&#123;</span> <span class="hljs-string">env.NAME</span> <span class="hljs-string">&#125;&#125;.jar</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Find</span> <span class="hljs-string">Comment</span><br>        <span class="hljs-attr">id:</span> <span class="hljs-string">find_comment</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">peter-evans/find-comment@v2</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">issue-number:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">github.event.number</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">comment-author:</span> <span class="hljs-string">github-actions[bot]</span><br>          <span class="hljs-attr">direction:</span> <span class="hljs-string">first</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Create</span> <span class="hljs-string">Comment</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">peter-evans/create-or-update-comment@v2</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">issue-number:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">github.event.number</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">body:</span> <span class="hljs-string">在</span> [<span class="hljs-string">这里</span>]<span class="hljs-string">(../actions/runs/$&#123;&#123;</span> <span class="hljs-string">github.run_id</span> <span class="hljs-string">&#125;&#125;)</span> <span class="hljs-string">下载此</span> <span class="hljs-string">PR</span> <span class="hljs-string">的最新打包。</span><br>        <span class="hljs-attr">if:</span> <span class="hljs-string">steps.find_comment.outputs.comment-id</span> <span class="hljs-string">==</span> <span class="hljs-number">0</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Update</span> <span class="hljs-string">Comment</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">peter-evans/create-or-update-comment@v2</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">comment-id:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">steps.find_comment.outputs.comment-id</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">body:</span> <span class="hljs-string">在</span> [<span class="hljs-string">这里</span>]<span class="hljs-string">(../actions/runs/$&#123;&#123;</span> <span class="hljs-string">github.run_id</span> <span class="hljs-string">&#125;&#125;)</span> <span class="hljs-string">下载此</span> <span class="hljs-string">PR</span> <span class="hljs-string">的最新打包。</span><br>          <span class="hljs-attr">edit-mode:</span> <span class="hljs-string">replace</span><br>        <span class="hljs-attr">if:</span> <span class="hljs-string">steps.find_comment.outputs.comment-id</span> <span class="hljs-type">!=</span> <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><section class="footnotes"><h2 id="参考文献">参考文献</h2><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://boson.v2mcdev.com/devenvironment/intro.html">环境配置</a>. Boson 1.16 Modding Tutorial. [2022-06-04].<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://mcforge.readthedocs.io/en/latest/gettingstarted/structuring/">Structuring Your Mod</a>. Forge Documentation. [2022-06-04]. （原始内容<a href="https://web.archive.org/web/20220605133857/https://mcforge.readthedocs.io/en/latest/gettingstarted/structuring/">存档</a>于2022-06-05）.<a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="https://forge.gemwire.uk/wiki/Mods.toml#:~:text=http%3A//example.com/%22-,Dependency%20Configurations,-Mods%20can%20define">Mods.toml</a>. Forge Community Wiki. 2022-03-22 [2022-06-04]. （原始内容<a href="https://web.archive.org/web/20220605134745/https://forge.gemwire.uk/wiki/Mods.toml#:~:text=http%3A//example.com/%22-,Dependency%20Configurations,-Mods%20can%20define">存档</a>于2022-06-05）.<a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:4" class="footnote-text"><span><a href="https://forge.gemwire.uk/wiki/Dependencies">Dependencies</a>. Forge Community Wiki. 2021-08-02 [2022-06-04]. （原始内容<a href="https://web.archive.org/web/20220605135343/https://forge.gemwire.uk/wiki/Dependencies">存档</a>于2022-06-05）.<a href="#fnref:4" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:5" class="footnote-text"><span><a href="https://github.com/mezz/JustEnoughItems/wiki/Getting-Started-%5B1.13-and-Up%5D">Getting Started [1.13 and Up]</a>. mezz&#x2F;JustEnoughItems Wiki. 2021-11-30 [2022-06-05]. （原始内容<a href="https://web.archive.org/web/20220605140318/https://github.com/mezz/JustEnoughItems/wiki/Getting-Started-%5B1.13-and-Up%5D">存档</a>于2022-06-05）.<a href="#fnref:5" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <summary type="html">如何搭建 Forge Mod 开发环境</summary>
    
    
    
    <category term="Minecraft" scheme="https://blog.zhanganzhi.com/categories/Minecraft/"/>
    
    <category term="Mod" scheme="https://blog.zhanganzhi.com/categories/Minecraft/Mod/"/>
    
    
    <category term="Minecraft" scheme="https://blog.zhanganzhi.com/tags/Minecraft/"/>
    
    <category term="Forge" scheme="https://blog.zhanganzhi.com/tags/Forge/"/>
    
    <category term="Mod" scheme="https://blog.zhanganzhi.com/tags/Mod/"/>
    
    <category term="Java" scheme="https://blog.zhanganzhi.com/tags/Java/"/>
    
    <category term="Gradle" scheme="https://blog.zhanganzhi.com/tags/Gradle/"/>
    
  </entry>
  
</feed>
