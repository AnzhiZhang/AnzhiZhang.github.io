<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>一个没有密码保护的 frp 服务器有多不安全</title>
    <link href="/zh-CN/2022/10/7951c3e787fe/"/>
    <url>/zh-CN/2022/10/7951c3e787fe/</url>
    
    <content type="html"><![CDATA[<blockquote><p>当使用 frp 时，务必开启权限验证。</p></blockquote><span id="more"></span><h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>群内有人的家里云受到了尝试登录的攻击，在群友劝其关闭公网时表示不怕打，并公布了自己 frps 的端口。在征求同意后，我开始尝试连接和应用。</p><p><img src="https://picture.zhanganzhi.com/2022/10/30/ljwwqfd.png" alt="表示欢迎尝试玩玩"></p><h2 id="本地服务部署"><a href="#本地服务部署" class="headerlink" title="本地服务部署"></a>本地服务部署</h2><p>正好手里有个 web 项目，于是立刻启动了起来。</p><p><img src="https://picture.zhanganzhi.com/2022/10/30/haxwbw3.png" alt="一个网站项目"></p><h2 id="frpc-配置"><a href="#frpc-配置" class="headerlink" title="frpc 配置"></a>frpc 配置</h2><p>接下来到 <a href="https://github.com/fatedier/frp">https://github.com/fatedier/frp</a> 下载客户端，编写配置文件然后启动。</p><p><img src="https://picture.zhanganzhi.com/2022/10/30/bzlvof9.png" alt="编写配置文件"></p><p><img src="https://picture.zhanganzhi.com/2022/10/30/z6q2lj9.png" alt="启动 frpc"></p><h2 id="检验成果"><a href="#检验成果" class="headerlink" title="检验成果"></a>检验成果</h2><p>访问他的域名和 frpc 配置的端口，检验是否成功。</p><p><img src="https://picture.zhanganzhi.com/2022/10/30/dcv4bsc.png" alt="测试成功"></p><p><img src="https://picture.zhanganzhi.com/2022/10/30/e6wxr16.png" alt="服务端日志"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li>当使用 frp 时，一定要配置鉴权方式，无论是 <code>token</code> 还是 <code>oidc</code>；</li><li>不要随意公开服务器应用的端口，尤其是非公开服务；</li><li>使用路由器和防火墙将服务器应用的端口映射到公网，而不是直接暴露所有端口；</li><li>谨防社会工程学攻击。</li></ol><section class="footnotes"><h2 id="参考文献">参考文献</h2><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://pixabay.com/photos/security-protection-antivirus-265130/">https://pixabay.com/photos/security-protection-antivirus-265130/</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>开发</category>
      
      <category>安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>frp</tag>
      
      <tag>安全</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows 连接 smb 非标准端口</title>
    <link href="/zh-CN/2022/09/9fe6d5ab7fe2/"/>
    <url>/zh-CN/2022/09/9fe6d5ab7fe2/</url>
    
    <content type="html"><![CDATA[<blockquote><p>当使用家庭宽带将 smb 服务转发到公网时，由于 445 端口被封，必须使用其它端口，而 Windows 系统只支持连接标准端口，需要通过端口转发解决此问题。</p></blockquote><span id="more"></span><h2 id="关闭自带文件共享服务"><a href="#关闭自带文件共享服务" class="headerlink" title="关闭自带文件共享服务"></a>关闭自带文件共享服务</h2><p>由于 Windows 自带的文件共享服务会占用 445 端口，需要将其关闭以释放端口。</p><h3 id="关闭-Windows-功能"><a href="#关闭-Windows-功能" class="headerlink" title="关闭 Windows 功能"></a>关闭 Windows 功能</h3><p>在开始菜单中搜索 <code>启用或关闭 Windows 功能</code> 并运行，取消选中 <code>SMB 1.0/CIFS 文件共享支持</code>。</p><p><img src="https://picture.zhanganzhi.com/2022/09/03/t32qfre.png" alt="搜索并打开 启用或关闭 Windows 功能"></p><p><img src="https://picture.zhanganzhi.com/2022/09/03/3we8v69.png" alt="取消选中 SMB 功能"></p><h3 id="关闭-LanmanServer"><a href="#关闭-LanmanServer" class="headerlink" title="关闭 LanmanServer"></a>关闭 LanmanServer</h3><p>用管理员模式运行命令提示符，输入以下命令<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="[PORT 445: What is the use and how to disable this TCP port](https://www.how2shout.com/how-to/port-445-what-is-the-use-and-how-to-disable-this-tcp-port.html). H2S Media. 2021-07-29 [2022-09-03]. （原始内容[存档](https://web.archive.org/web/20220903121932/https://www.how2shout.com/how-to/port-445-what-is-the-use-and-how-to-disable-this-tcp-port.html)于2022-09-03）.">[2]</span></a></sup>。</p><p><img src="https://picture.zhanganzhi.com/2022/09/03/ssalh2l.png" alt="运行命令提示符"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sc stop lanmanserver<br>sc config lanmanserver start=disabled<br></code></pre></td></tr></table></figure><h2 id="创建端口转发"><a href="#创建端口转发" class="headerlink" title="创建端口转发"></a>创建端口转发</h2><p>使用以下命令<sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><span class="hint--top hint--rounded" aria-label="纸乎. [Windows 10 下如何修改 smb 连接的默认端口(445)？](https://www.zhihu.com/question/59814912/answer/684689433). 知乎. 2019-05-16 [2022-09-03]. （原始内容[存档](https://web.archive.org/web/20220903121926/https://www.zhihu.com/question/59814912/answer/684689433)于2022-09-03）.">[3]</span></a></sup>创建本机的端口转发，将远程 smb 服务转发到本机的 445 端口。将 <code>serverport</code> 和 <code>serverip</code> 改为远程服务的地址。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">netsh interface portproxy add v4tov4 listenport=445 listenaddress=127.0.0.1 connectport=serverport connectaddress=serverip<br></code></pre></td></tr></table></figure><p>随后<strong>重启</strong>，即可通过 <code>\\127.0.0.1</code> 连接远程 smb 服务。</p><h2 id="IP-地址变化"><a href="#IP-地址变化" class="headerlink" title="IP 地址变化"></a>IP 地址变化</h2><p>我们一般会将端口转发绑定到域名上，若域名改变将无法连接，需要重新启动 <code>IP Helper Service</code> 来重新映射域名。启动命令提示符并运行以下命令<sup id="fnref:4" class="footnote-ref"><a href="#fn:4" rel="footnote"><span class="hint--top hint--rounded" aria-label="Morris. [Windows 10 下如何修改 smb 连接的默认端口(445)？](https://www.zhihu.com/question/59814912/answer/2355661073). 知乎. 2022-02-20 [2022-09-03]. （原始内容[存档](https://web.archive.org/web/20220903121933/https://www.zhihu.com/question/59814912/answer/2355661073)于2022-09-03）.">[4]</span></a></sup>；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">ipconfig /flushdns<br>net stop iphlpsvc<br>net start iphlpsvc<br></code></pre></td></tr></table></figure><h2 id="端口转发检查"><a href="#端口转发检查" class="headerlink" title="端口转发检查"></a>端口转发检查</h2><p>查看所有的端口转发设置<sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><span class="hint--top hint--rounded" aria-label="纸乎. [Windows 10 下如何修改 smb 连接的默认端口(445)？](https://www.zhihu.com/question/59814912/answer/684689433). 知乎. 2019-05-16 [2022-09-03]. （原始内容[存档](https://web.archive.org/web/20220903121926/https://www.zhihu.com/question/59814912/answer/684689433)于2022-09-03）.">[3]</span></a></sup>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">netsh interface portproxy show all<br></code></pre></td></tr></table></figure><p>查看 445 端口占用情况，若已经建立 smb 的连接，可以在这里看到远程 IP<sup id="fnref:4" class="footnote-ref"><a href="#fn:4" rel="footnote"><span class="hint--top hint--rounded" aria-label="Morris. [Windows 10 下如何修改 smb 连接的默认端口(445)？](https://www.zhihu.com/question/59814912/answer/2355661073). 知乎. 2022-02-20 [2022-09-03]. （原始内容[存档](https://web.archive.org/web/20220903121933/https://www.zhihu.com/question/59814912/answer/2355661073)于2022-09-03）.">[4]</span></a></sup>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">netstat -ano|findstr 445<br></code></pre></td></tr></table></figure><section class="footnotes"><h2 id="参考文献">参考文献</h2><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://www.pexels.com/zh-cn/photo/1181772/">https://www.pexels.com/zh-cn/photo/1181772/</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://www.how2shout.com/how-to/port-445-what-is-the-use-and-how-to-disable-this-tcp-port.html">PORT 445: What is the use and how to disable this TCP port</a>. H2S Media. 2021-07-29 [2022-09-03]. （原始内容<a href="https://web.archive.org/web/20220903121932/https://www.how2shout.com/how-to/port-445-what-is-the-use-and-how-to-disable-this-tcp-port.html">存档</a>于2022-09-03）.<a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span>纸乎. <a href="https://www.zhihu.com/question/59814912/answer/684689433">Windows 10 下如何修改 smb 连接的默认端口(445)？</a>. 知乎. 2019-05-16 [2022-09-03]. （原始内容<a href="https://web.archive.org/web/20220903121926/https://www.zhihu.com/question/59814912/answer/684689433">存档</a>于2022-09-03）.<a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:4" class="footnote-text"><span>Morris. <a href="https://www.zhihu.com/question/59814912/answer/2355661073">Windows 10 下如何修改 smb 连接的默认端口(445)？</a>. 知乎. 2022-02-20 [2022-09-03]. （原始内容<a href="https://web.archive.org/web/20220903121933/https://www.zhihu.com/question/59814912/answer/2355661073">存档</a>于2022-09-03）.<a href="#fnref:4" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>经验</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Windows</tag>
      
      <tag>端口转发</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【MCDR Tutorials 01】Introduction</title>
    <link href="/en/2022/08/8fe975c3db2b/"/>
    <url>/en/2022/08/8fe975c3db2b/</url>
    
    <content type="html"><![CDATA[<blockquote><p>The vanilla Minecraft technology survival has become a hot topic in recent years. Perhaps because of the pandemic, people have been able to pick up the game they put down years ago, or perhaps because of the successful advertising of TIS, students have been able to look up from the tasteless mobile games, and this long-history but minority topic has gradually entered the public eye. In the last three years, a large number of new technology survival servers have founded and fallen, and both old and new players have been blown away by the unlimited potential shown by this decade-old game. And behind these servers, almost all are using a significant server management tool - MCDReforged.</p></blockquote><h2 id="History"><a href="#History" class="headerlink" title="History"></a>History</h2><p>In November 2018<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="TIS_TrinityUnion. &quot;[一起见证原版生存科技的巅峰！TIS服务器一周年纪念视频 TIS Trinity Union First Anniversary](https://www.bilibili.com/video/BV17J41197be?t=15.8)&quot;. bilibili. 29 November 2019. [Archived](https://web.archive.org/web/20220823131237/https://www.bilibili.com/video/BV17J41197be?t=15.8) from the original on 23 Augest 2022. Retrieved 23 Augest 2022.">[1]</span></a></sup>, before the TIS starts the server, chino_desu developed the server management tool MCDaemon<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="kafuuchino-desu. &quot;[MCDaemon](https://github.com/kafuuchino-desu/MCDaemon)&quot;. GitHub. [Archived](https://web.archive.org/web/20220823093059/https://github.com/kafuuchino-desu/MCDaemon) from the original on 23 Augest 2022. Retrieved 23 Augest 2022.">[2]</span></a></sup>. Without modifying the vanilla server, the tool provides server management functions such as restart, world files backup and automatic rollback, cross-service chat, mirror synchronization, etc.</p><p><img src="https://picture.zhanganzhi.com/2022/08/23/6vgazij.png" alt="The first commit of MCDaemon&lt;sup id=&quot;fnref:3&quot; class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;#fn:3&quot; rel=&quot;footnote&quot;&gt;&lt;span class=&quot;hint--top hint--rounded&quot; aria-label=&quot;kafuuchino-desu. &quot;[Initial commit](https://github.com/kafuuchino-desu/MCDaemon/commit/ab6e9d92fdcb0f2a2a13c77d573d1af61fc51920)&quot;. GitHub. 13 November 2018. [Archived](https://web.archive.org/web/20220823093612/https://github.com/kafuuchino-desu/MCDaemon/commit/ab6e9d92fdcb0f2a2a13c77d573d1af61fc51920) from the original on 23 Augest 2022. Retrieved 23 Augest 2022.&quot;&gt;[3]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;"></p><p>With the development of TIS, powerful functions shown by the MCDaemon are notified by many people, especially the saves backup and rollback. They want to use MCDaemon to manage their server, but it does not support Windows. Therefore, lightbrotherV created the project MCDaemon-go<sup id="fnref:4" class="footnote-ref"><a href="#fn:4" rel="footnote"><span class="hint--top hint--rounded" aria-label="TISUnion. &quot;[MCDaemon-go](https://github.com/TISUnion/MCDaemon-go)&quot;. GitHub. [Archived](https://web.archive.org/web/20220823094520/https://github.com/TISUnion/MCDaemon-go) from the original on 23 Augest 2022. Retrieved 23 Augest 2022.">[4]</span></a></sup>, which is compatible with the Windows system.</p><p><img src="https://picture.zhanganzhi.com/2022/08/23/s6bco38.png" alt="Archived MCDaemon-go"></p><p><img src="https://picture.zhanganzhi.com/2022/08/23/6zjvd3y.png" alt="The first commit of MCDaemon-go&lt;sup id=&quot;fnref:5&quot; class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;#fn:5&quot; rel=&quot;footnote&quot;&gt;&lt;span class=&quot;hint--top hint--rounded&quot; aria-label=&quot;lightbrotherV. &quot;[Initial commit](https://github.com/TISUnion/MCDaemon-go/commit/72322490b6aa5570baafc3de10f3af5b32380e20)&quot;. GitHub. 2 December 2018 [Archived](https://web.archive.org/web/20220823112917/https://github.com/TISUnion/MCDaemon-go/commit/72322490b6aa5570baafc3de10f3af5b32380e20) from the original on 23 Augest 2022. Retrieved 23 Augest 2022.&quot;&gt;[5]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;"></p><p>Although MCDaemon-go is compatible with windows, it is not able to load Python plugins from MCDaemon. Repeating the development of two system plugins is obviously not a wise move, and not unsustainable for long-term community development. During the period, some users created forks like MCD-Windows, now most of them are deleted.</p><p>MCDaemon has been used by TIS for a while, and many problems have been revealed, and there are a lot of features to optimize, so the development of MCD 2.0 is on the agenda.</p><p>In March 2020, Fallen_Breath started the development of MCDReforged<sup id="fnref:6" class="footnote-ref"><a href="#fn:6" rel="footnote"><span class="hint--top hint--rounded" aria-label="Fallen-Breath. &quot;[MCDReforged](https://github.com/Fallen-Breath/MCDReforged)&quot;. GitHub. [Archived](https://web.archive.org/web/20220515211259/https://github.com/Fallen-Breath/MCDReforged) from the original on 15 May 2022. Retrieved 23 Augest 2022.">[6]</span></a></sup>, which can run on Windows.</p><p><img src="https://picture.zhanganzhi.com/2022/08/23/0g3fejd.png" alt="The first commit of MCDReforged&lt;sup id=&quot;fnref:7&quot; class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;#fn:7&quot; rel=&quot;footnote&quot;&gt;&lt;span class=&quot;hint--top hint--rounded&quot; aria-label=&quot;Fallen-Breath. &quot;[init](https://github.com/Fallen-Breath/MCDReforged/commit/e7cc72a523f8c8b113df37c41015704cf4031e2b)&quot;. GitHub. 30 May 2020 [Archived](https://web.archive.org/web/20220823113116/https://github.com/Fallen-Breath/MCDReforged/commit/e7cc72a523f8c8b113df37c41015704cf4031e2b) from the original on 23 Augest 2022. Retrieved 23 Augest 2022.&quot;&gt;[7]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;"></p><p>Chino sent the source code of MCD 2.0 and the expected features list to Fallen_Breath. In March 2020, MCDR released its first prerelease. In May, chino announced to stop the development and maintenance of MCDaemon.</p><blockquote><p>At the beginning of MCDR development, I gave Fallen a small portion of the MCD 2.0 source code I had written, as well as a list of expected MCD 2.0 features. It’s hard to say if it helped Fox write MCDR, but the directory structure in the src of MCDR does look like MCD 2.0.<br>—— <em>chino_desu</em></p></blockquote><p><img src="https://picture.zhanganzhi.com/2022/08/23/wuxhmzm.png" alt="The document of MCDaemon states it stops maintenance"></p><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><blockquote><p>MCDReforged is a tool that provides the management ability of the Minecraft server using a custom plugin system. It doesn’t need to modify or mod the original Minecraft server at all. From in-game calculator, player high-light, to manipulate scoreboard, manage structure file and backup &#x2F; load backup, you can implement these by using MCDR and related plugins.<br>—— <em>The readme of MCDReforged</em><sup id="fnref:6" class="footnote-ref"><a href="#fn:6" rel="footnote"><span class="hint--top hint--rounded" aria-label="Fallen-Breath. &quot;[MCDReforged](https://github.com/Fallen-Breath/MCDReforged)&quot;. GitHub. [Archived](https://web.archive.org/web/20220515211259/https://github.com/Fallen-Breath/MCDReforged) from the original on 15 May 2022. Retrieved 23 Augest 2022.">[6]</span></a></sup></p></blockquote><p><img src="https://picture.zhanganzhi.com/2022/08/23/bzwxibh.png" alt="The readme of MCDReforged"></p><p>The MCDReforged completely liberates the limitations of MC server management. The relatively independent server management tool can manipulate server files during the server is turned off, or provides functions without permitting OP permission to players.</p><p>This really fits in the needs of the vanilla technical survival players and has effectively contributed to the excellent development of MC vanilla technical survival in recent years. It is also behind the resurgence of Minecraft topics in China during the epidemic.</p><p>Today many bukkit and mod servers are using MCDR to use save file management, and cross-server chatting functions.</p><p><img src="https://picture.zhanganzhi.com/2022/08/23/lqu2rgv.png" alt="Google trends of Minecraft"></p><h2 id="Principle"><a href="#Principle" class="headerlink" title="Principle"></a>Principle</h2><p>Actually, the principle of MCDR is really simple.</p><blockquote><p>MCDR uses Popen to start the server as a sub-process, then it has the ability to control the standard input &#x2F; out stream of the server. Since the console output of a Minecraft server has a stable format and contains a large amount of useful information about the server, e.g. player chat messages, MCDR is able to parse and analyze the server output, abstract them into different events and dispatch them towards plugins for responding. With the help of Minecraft command system, MCDR can send Minecraft commands via the standard input stream to affect the actual Minecraft server. <sup id="fnref:6" class="footnote-ref"><a href="#fn:6" rel="footnote"><span class="hint--top hint--rounded" aria-label="Fallen-Breath. &quot;[MCDReforged](https://github.com/Fallen-Breath/MCDReforged)&quot;. GitHub. [Archived](https://web.archive.org/web/20220515211259/https://github.com/Fallen-Breath/MCDReforged) from the original on 15 May 2022. Retrieved 23 Augest 2022.">[6]</span></a></sup></p></blockquote><p><img src="https://picture.zhanganzhi.com/2022/08/23/yvzoe3u.png" alt="MCDReforged will launch the server, and have its input/out stream"></p><p>Plugins react differently depending on different events. For example, players can back up server saves, send their location to other players, use the calculator, manage and store fake players, etc. by typing specific commands in the chat box.</p><p><img src="https://picture.zhanganzhi.com/2022/08/23/16gbx6q.png" alt="Player types !!qb in the chat to make a backup of save file"></p><p><img src="https://picture.zhanganzhi.com/2022/08/23/uve47tl.png" alt="Player types !!here in the chat to send his location"></p><p><img src="https://picture.zhanganzhi.com/2022/08/23/by2gpmo.png" alt="In-game calculator"></p><p><img src="https://picture.zhanganzhi.com/2022/08/23/d69iqse.png" alt="Fake players management plugin"></p><h2 id="Unique-Features"><a href="#Unique-Features" class="headerlink" title="Unique Features"></a>Unique Features</h2><ul><li><strong>The ability to control the running status of the server.</strong> There is no plugin or mod that can control a turned-off server, but MCDReforged can do that easily because it is running out of the server. The feature never can be achieved by any Bukkit plugin or Forge&#x2F;Fabric mod.</li><li><strong>The ability to manage server files.</strong> The ability to freely control the running of the server allows MCDR to manage files that must restart the server. For example, shutting down the server and rollback the save, changing server mods or plugins, can be easily implemented by MCDR plugins, eliminating manually login to the server terminal.</li></ul><h2 id="Strongpoints"><a href="#Strongpoints" class="headerlink" title="Strongpoints"></a>Strongpoints</h2><ul><li><strong>Management ability out of the server.</strong> Independent running decoupling MCDR and the server, that helps to implement unbelievable functions in the past.</li><li><strong>Cheap to get started and easy to develop.</strong> Complete documents allow server owners only need basic computer skills to get started. MCDR and its plugins are written in Python, an easy language that makes it easy to quickly learn and start developing plugins directly over the Internet.</li><li><strong>Fantastic community energy and support services.</strong> There are still many excellent plugins emerging from the community, and new users become plugin developers, updating old plugins to add new energy and ideas to the community. A large number of users and active MCDR developers work together to provide multi-platform, responsive, and satisfying technical support, application deployment, and emergency maintenance services.</li></ul><section class="footnotes"><h2 id="参考文献">参考文献</h2><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>TIS_TrinityUnion. &quot;<a href="https://www.bilibili.com/video/BV17J41197be?t=15.8">一起见证原版生存科技的巅峰！TIS服务器一周年纪念视频 TIS Trinity Union First Anniversary</a>&quot;. bilibili. 29 November 2019. <a href="https://web.archive.org/web/20220823131237/https://www.bilibili.com/video/BV17J41197be?t=15.8">Archived</a> from the original on 23 Augest 2022. Retrieved 23 Augest 2022.<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span>kafuuchino-desu. &quot;<a href="https://github.com/kafuuchino-desu/MCDaemon">MCDaemon</a>&quot;. GitHub. <a href="https://web.archive.org/web/20220823093059/https://github.com/kafuuchino-desu/MCDaemon">Archived</a> from the original on 23 Augest 2022. Retrieved 23 Augest 2022.<a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span>kafuuchino-desu. &quot;<a href="https://github.com/kafuuchino-desu/MCDaemon/commit/ab6e9d92fdcb0f2a2a13c77d573d1af61fc51920">Initial commit</a>&quot;. GitHub. 13 November 2018. <a href="https://web.archive.org/web/20220823093612/https://github.com/kafuuchino-desu/MCDaemon/commit/ab6e9d92fdcb0f2a2a13c77d573d1af61fc51920">Archived</a> from the original on 23 Augest 2022. Retrieved 23 Augest 2022.<a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:4" class="footnote-text"><span>TISUnion. &quot;<a href="https://github.com/TISUnion/MCDaemon-go">MCDaemon-go</a>&quot;. GitHub. <a href="https://web.archive.org/web/20220823094520/https://github.com/TISUnion/MCDaemon-go">Archived</a> from the original on 23 Augest 2022. Retrieved 23 Augest 2022.<a href="#fnref:4" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:5" class="footnote-text"><span>lightbrotherV. &quot;<a href="https://github.com/TISUnion/MCDaemon-go/commit/72322490b6aa5570baafc3de10f3af5b32380e20">Initial commit</a>&quot;. GitHub. 2 December 2018 <a href="https://web.archive.org/web/20220823112917/https://github.com/TISUnion/MCDaemon-go/commit/72322490b6aa5570baafc3de10f3af5b32380e20">Archived</a> from the original on 23 Augest 2022. Retrieved 23 Augest 2022.<a href="#fnref:5" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:6" class="footnote-text"><span>Fallen-Breath. &quot;<a href="https://github.com/Fallen-Breath/MCDReforged">MCDReforged</a>&quot;. GitHub. <a href="https://web.archive.org/web/20220515211259/https://github.com/Fallen-Breath/MCDReforged">Archived</a> from the original on 15 May 2022. Retrieved 23 Augest 2022.<a href="#fnref:6" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:7" class="footnote-text"><span>Fallen-Breath. &quot;<a href="https://github.com/Fallen-Breath/MCDReforged/commit/e7cc72a523f8c8b113df37c41015704cf4031e2b">init</a>&quot;. GitHub. 30 May 2020 <a href="https://web.archive.org/web/20220823113116/https://github.com/Fallen-Breath/MCDReforged/commit/e7cc72a523f8c8b113df37c41015704cf4031e2b">Archived</a> from the original on 23 Augest 2022. Retrieved 23 Augest 2022.<a href="#fnref:7" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>Minecraft</category>
      
      <category>MCDR系列教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Minecraft</tag>
      
      <tag>MCDReforged</tag>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【MCDR 系列教程 01】简介</title>
    <link href="/zh-CN/2022/08/fc02d61c8889/"/>
    <url>/zh-CN/2022/08/fc02d61c8889/</url>
    
    <content type="html"><![CDATA[<blockquote><p>近几年的 Minecraft 原版技术生存成为了一个热门话题，或许是因为疫情大家得以闲暇捡起数年前放下的游戏、或许是 TIS 成功的宣传让学生们从索然无味的手机游戏中抬起头来，这个历史悠久但小众的玩法逐渐进入了大众的视野。近三年，大量新的技术生存服务器不断涌现又逐渐没落，无论新老玩家都被这款有着十年历史的游戏所展现出来的无限潜力而震撼。而在这些服务器的背后，几乎都在使用一个划时代的服务端管理工具——MCDReforged。</p></blockquote><h2 id="演变历史"><a href="#演变历史" class="headerlink" title="演变历史"></a>演变历史</h2><p>2018 年 11 月<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="TIS_TrinityUnion. [一起见证原版生存科技的巅峰！TIS服务器一周年纪念视频 TIS Trinity Union First Anniversary](https://www.bilibili.com/video/BV17J41197be?t=15.8). bilibili. 2019-11-29 [2022-08-23]. （原始内容[存档](https://web.archive.org/web/20220823131237/https://www.bilibili.com/video/BV17J41197be?t=15.8)于2022-08-23）.">[1]</span></a></sup>，TIS 开服前夕，chino_desu 开发了服务端管理工具 MCDaemon<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="kafuuchino-desu. [MCDaemon](https://github.com/kafuuchino-desu/MCDaemon). GitHub. [2022-08-23]. （原始内容[存档](https://web.archive.org/web/20220823093059/https://github.com/kafuuchino-desu/MCDaemon)于2022-08-23）.">[2]</span></a></sup>。在不修改原版服务端的情况下，提供了多种服务端管理功能，例如服务器重启、存档备份和自动回档、跨服聊天、镜像服存档同步等。</p><p><img src="https://picture.zhanganzhi.com/2022/08/23/6vgazij.png" alt="MCDaemon 的第一条 commit&lt;sup id=&quot;fnref:3&quot; class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;#fn:3&quot; rel=&quot;footnote&quot;&gt;&lt;span class=&quot;hint--top hint--rounded&quot; aria-label=&quot;kafuuchino-desu. [Initial commit](https://github.com/kafuuchino-desu/MCDaemon/commit/ab6e9d92fdcb0f2a2a13c77d573d1af61fc51920). GitHub. 2018-11-03 [2022-08-23]. （原始内容[存档](https://web.archive.org/web/20220823093612/https://github.com/kafuuchino-desu/MCDaemon/commit/ab6e9d92fdcb0f2a2a13c77d573d1af61fc51920)于2022-08-23）.&quot;&gt;[3]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;"></p><p>随着 TIS 开服和发展，MCDaemon 展示出来的强大功能，尤其是备份回档受到了越来越多人的关注，并期望使用它来管理自己的服务器。但 MCDaemon 有个明显的缺点：不支持 Windows。于是 lightbrotherV 创建了 MCDaemon-go<sup id="fnref:4" class="footnote-ref"><a href="#fn:4" rel="footnote"><span class="hint--top hint--rounded" aria-label="TISUnion. [MCDaemon-go](https://github.com/TISUnion/MCDaemon-go). GitHub. [2022-08-23]. （原始内容[存档](https://web.archive.org/web/20220823094520/https://github.com/TISUnion/MCDaemon-go)于2022-08-23）.">[4]</span></a></sup> 项目，实现了 Windows 支持。</p><p><img src="https://picture.zhanganzhi.com/2022/08/23/s6bco38.png" alt="已经归档的 MCDaemon-go 项目"></p><p><img src="https://picture.zhanganzhi.com/2022/08/23/6zjvd3y.png" alt="MCDaemon-go 的第一条 commit&lt;sup id=&quot;fnref:5&quot; class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;#fn:5&quot; rel=&quot;footnote&quot;&gt;&lt;span class=&quot;hint--top hint--rounded&quot; aria-label=&quot;lightbrotherV. [Initial commit](https://github.com/TISUnion/MCDaemon-go/commit/72322490b6aa5570baafc3de10f3af5b32380e20). GitHub. 2018-12-02 [2022-08-23]. （原始内容[存档](https://web.archive.org/web/20220823112917/https://github.com/TISUnion/MCDaemon-go/commit/72322490b6aa5570baafc3de10f3af5b32380e20)于2022-08-23）.&quot;&gt;[5]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;"></p><p>虽然 MCDaemon-go 支持了 windows，但是并不支持 MCDaemon 的 Python 插件，重复开发两个生态的插件显然不是明智之举，对于长期社区发展也不是好事。这段时间里，社区用户也创建了一些 Fork，例如 MCD-Windows。这些 Fork 现在大部分已经删库。</p><p>MCDaemon 在被 TIS 使用一段时间后暴露出许多问题，有很大的优化空间，于是 MCD 2.0 的开发也提上了日程。</p><p>2020年3月，Fallen_Breath 开始了 MCDReforged<sup id="fnref:6" class="footnote-ref"><a href="#fn:6" rel="footnote"><span class="hint--top hint--rounded" aria-label="Fallen-Breath. [MCDReforged](https://github.com/Fallen-Breath/MCDReforged). GitHub. [2022-08-23]. （原始内容[存档](https://web.archive.org/web/20220515211259/https://github.com/Fallen-Breath/MCDReforged)于2022-05-15）.">[6]</span></a></sup> 的开发，其支持在 Windows 下运行。</p><p><img src="https://picture.zhanganzhi.com/2022/08/23/0g3fejd.png" alt="MCDReforged 的第一条 commit&lt;sup id=&quot;fnref:7&quot; class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;#fn:7&quot; rel=&quot;footnote&quot;&gt;&lt;span class=&quot;hint--top hint--rounded&quot; aria-label=&quot;Fallen-Breath. [init](https://github.com/Fallen-Breath/MCDReforged/commit/e7cc72a523f8c8b113df37c41015704cf4031e2b). GitHub. 2020-05-30 [2022-08-23]. （原始内容[存档](https://web.archive.org/web/20220823113116/https://github.com/Fallen-Breath/MCDReforged/commit/e7cc72a523f8c8b113df37c41015704cf4031e2b)于2022-08-23）.&quot;&gt;[7]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;"></p><p>chino 将 MCD 2.0 的源码和预期功能列表给了 Fallen_Breath。2020年4月，MCDR 发布了第一个预览版本。同年5月，chino 宣布停止 MCDaemon 的开发和维护。</p><blockquote><p>我一个周末搓的所以根本不想重构。MCDR 开发初期，我是把写了一小部分的 MCD 2.0 源码给了 Fallen 的，以及一个 MCD 2.0 预期的功能列表。很难说有没有帮上狐狸写 MCDR，但是 MCDR 的 src 里面目录结构的确是 MCD 2.0 的样子。<br>—— <em>chino_desu</em></p></blockquote><p><img src="https://picture.zhanganzhi.com/2022/08/23/wuxhmzm.png" alt="MCDaemon 的文档声明其已经停止维护"></p><h2 id="功能简介"><a href="#功能简介" class="headerlink" title="功能简介"></a>功能简介</h2><blockquote><p>MCDReforged 是一个基于 Python 的 Minecraft 服务端控制工具，可以在完全不对 Minecraft 服务端进行修改的情况下，通过可自定义的插件系统，提供对服务端的管理能力的工具。小至计算器、高亮玩家、B 站弹幕姬，大至操控计分板、管理结构文件、自助备份回档，都可以通过 MCDR 及相配套的插件实现。<br>—— <em>MCDReforged 自述文件</em><sup id="fnref:6" class="footnote-ref"><a href="#fn:6" rel="footnote"><span class="hint--top hint--rounded" aria-label="Fallen-Breath. [MCDReforged](https://github.com/Fallen-Breath/MCDReforged). GitHub. [2022-08-23]. （原始内容[存档](https://web.archive.org/web/20220515211259/https://github.com/Fallen-Breath/MCDReforged)于2022-05-15）.">[6]</span></a></sup></p></blockquote><p><img src="https://picture.zhanganzhi.com/2022/08/23/7flci56.png" alt="MCDReforged 的自述文件"></p><p>MCDReforged 彻底解放了 MC 服务端控制的限制，相对独立的服务端控制工具可以在关服时操作服务器文件，或是在玩家无 OP 权限的情况下为原版生存实现各种功能。</p><p>这十分符合原版技术生存玩家的需求，切实推动了近几年 MC 原版技术生存的蓬勃发展。在疫情期间国内重新兴起的 MC 相关话题背后也有它的影子。</p><p>如今，许多插件服和模组服也会使用 MCDR 实现服务器存档管理和回档、跨服聊天等功能。</p><p><img src="https://picture.zhanganzhi.com/2022/08/23/rcnqywp.png" alt="Minecraft 的百度指数"></p><h2 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h2><p>实际上，MCDR 的实现原理非常简单。</p><blockquote><p>它将服务端作为子进程启动，以此拥有了控制服务端标准输入&#x2F;输出流的能力。服务端输出会被 MCDR 获取，而 MCDR 也可以向控制台内输入指令。Minecraft 的控制台输出非常标准，通过解析输出即可将其抽象成不同的事件并派发给插件进行响应。在 Minecraft 内置指令系统的帮助下，MCDR 可以通过向服务端标准输入流发送 Minecraft 指令来与 Minecraft 服务器做出交互。<sup id="fnref:6" class="footnote-ref"><a href="#fn:6" rel="footnote"><span class="hint--top hint--rounded" aria-label="Fallen-Breath. [MCDReforged](https://github.com/Fallen-Breath/MCDReforged). GitHub. [2022-08-23]. （原始内容[存档](https://web.archive.org/web/20220515211259/https://github.com/Fallen-Breath/MCDReforged)于2022-05-15）.">[6]</span></a></sup></p></blockquote><p><img src="https://picture.zhanganzhi.com/2022/08/23/yvzoe3u.png" alt="MCDReforged 会启动服务端，并获取它的输入输出流"></p><p>插件根据不同的事件做出不同的反应。例如，玩家在聊天框打出特定指令即可备份存档、向其他玩家发送自己所在的位置、使用计算器、管理和存储假人玩家等。</p><p><img src="https://picture.zhanganzhi.com/2022/08/23/16gbx6q.png" alt="玩家在聊天中打出 !!qb make 以备份存档"></p><p><img src="https://picture.zhanganzhi.com/2022/08/23/uve47tl.png" alt="玩家在聊天中打出 !!here 以发送自己所在位置"></p><p><img src="https://picture.zhanganzhi.com/2022/08/23/by2gpmo.png" alt="游戏内计算器"></p><p><img src="https://picture.zhanganzhi.com/2022/08/23/d69iqse.png" alt="假人管理插件"></p><h2 id="独特功能"><a href="#独特功能" class="headerlink" title="独特功能"></a>独特功能</h2><ul><li><strong>对服务端运行状态的控制。</strong>没有任何插件或模组能控制已关闭的服务端，而在服务端之外运行的 MCDReforged 可以轻易做到。这是 Bukkit 系插件、Forge&#x2F;Fabric 模组不可能实现的特性。</li><li><strong>对于服务端文件的管理能力。</strong>自由控制服务端的运行的能力让 MCDR 可以方便地修改必须重启服务端才可用的文件。例如关服回档、管理服务端模组或插件，都可以方便地通过 MCDR 插件实现，不再需要繁琐地登录服务器后台手动操作。</li></ul><h2 id="软件优势"><a href="#软件优势" class="headerlink" title="软件优势"></a>软件优势</h2><ul><li><strong>服务端之外的管理能力。</strong>独立于服务端运行使 MCDR 与服务端解耦，得以实现原本不可能实现的功能。</li><li><strong>容易上手、开发简单。</strong>完善的文档让服主只需基本的计算机基础即可上手。完善的文档、API 和事件系统，使插件开发简单清晰。MCDR 及其插件均使用 Python 语言，这门对新手十分友好的语言使新手能够轻松地通过互联网快速学习并直接开始插件开发。</li><li><strong>优秀的社区活力和支持服务。</strong>MCDR 社区仍有不少优秀插件涌现，新的用户成为插件开发者，迭代更新老旧插件，为社区注入新的活力和思想。庞大的用户群体与积极活跃的 MCDR 开发者共同提供了多平台、响应迅速、满意度高的技术支持、应用部署、应急维护等服务。</li></ul><section class="footnotes"><h2 id="参考文献">参考文献</h2><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>TIS_TrinityUnion. <a href="https://www.bilibili.com/video/BV17J41197be?t=15.8">一起见证原版生存科技的巅峰！TIS服务器一周年纪念视频 TIS Trinity Union First Anniversary</a>. bilibili. 2019-11-29 [2022-08-23]. （原始内容<a href="https://web.archive.org/web/20220823131237/https://www.bilibili.com/video/BV17J41197be?t=15.8">存档</a>于2022-08-23）.<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span>kafuuchino-desu. <a href="https://github.com/kafuuchino-desu/MCDaemon">MCDaemon</a>. GitHub. [2022-08-23]. （原始内容<a href="https://web.archive.org/web/20220823093059/https://github.com/kafuuchino-desu/MCDaemon">存档</a>于2022-08-23）.<a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span>kafuuchino-desu. <a href="https://github.com/kafuuchino-desu/MCDaemon/commit/ab6e9d92fdcb0f2a2a13c77d573d1af61fc51920">Initial commit</a>. GitHub. 2018-11-03 [2022-08-23]. （原始内容<a href="https://web.archive.org/web/20220823093612/https://github.com/kafuuchino-desu/MCDaemon/commit/ab6e9d92fdcb0f2a2a13c77d573d1af61fc51920">存档</a>于2022-08-23）.<a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:4" class="footnote-text"><span>TISUnion. <a href="https://github.com/TISUnion/MCDaemon-go">MCDaemon-go</a>. GitHub. [2022-08-23]. （原始内容<a href="https://web.archive.org/web/20220823094520/https://github.com/TISUnion/MCDaemon-go">存档</a>于2022-08-23）.<a href="#fnref:4" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:5" class="footnote-text"><span>lightbrotherV. <a href="https://github.com/TISUnion/MCDaemon-go/commit/72322490b6aa5570baafc3de10f3af5b32380e20">Initial commit</a>. GitHub. 2018-12-02 [2022-08-23]. （原始内容<a href="https://web.archive.org/web/20220823112917/https://github.com/TISUnion/MCDaemon-go/commit/72322490b6aa5570baafc3de10f3af5b32380e20">存档</a>于2022-08-23）.<a href="#fnref:5" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:6" class="footnote-text"><span>Fallen-Breath. <a href="https://github.com/Fallen-Breath/MCDReforged">MCDReforged</a>. GitHub. [2022-08-23]. （原始内容<a href="https://web.archive.org/web/20220515211259/https://github.com/Fallen-Breath/MCDReforged">存档</a>于2022-05-15）.<a href="#fnref:6" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:7" class="footnote-text"><span>Fallen-Breath. <a href="https://github.com/Fallen-Breath/MCDReforged/commit/e7cc72a523f8c8b113df37c41015704cf4031e2b">init</a>. GitHub. 2020-05-30 [2022-08-23]. （原始内容<a href="https://web.archive.org/web/20220823113116/https://github.com/Fallen-Breath/MCDReforged/commit/e7cc72a523f8c8b113df37c41015704cf4031e2b">存档</a>于2022-08-23）.<a href="#fnref:7" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>Minecraft</category>
      
      <category>MCDR系列教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Minecraft</tag>
      
      <tag>MCDReforged</tag>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何科学地买菜：阶梯菜价</title>
    <link href="/zh-CN/2022/08/21f435f762dc/"/>
    <url>/zh-CN/2022/08/21f435f762dc/</url>
    
    <content type="html"><![CDATA[<blockquote><p>在 <a href="https://www.bilibili.com/video/BV17B4y1k7fZ">《如何科学的买饼》</a><sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><span class="hint--top hint--rounded" aria-label="shenjack_. [《如何科学的买饼》](https://www.bilibili.com/video/BV17B4y1k7fZ). 2022-08-07 [2022-08-09]. （原始内容[存档](https://web.archive.org/web/20220809133655/https://www.bilibili.com/video/BV17B4y1k7fZ)于2022-08-09）.">[3]</span></a></sup> 中，我们买好了大饼，接下来需要买几棵大葱，做一道煎饼卷大葱。</p></blockquote><p><img src="https://picture.zhanganzhi.com/2022/08/09/celzgar.png" alt="煎饼卷大葱"></p><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p><img src="https://picture.zhanganzhi.com/2022/08/09/u7ie4lr.png" alt="原始题目"></p><p>大葱的价格遵循以下规律：第一棵的价格为 1 元&#x2F;棵，每购买 20 棵则上涨一元。</p><table><thead><tr><th>数量</th><th>单价</th></tr></thead><tbody><tr><td>1-20</td><td>1 元&#x2F;棵</td></tr><tr><td>21-40</td><td>2 元&#x2F;棵</td></tr><tr><td>41-60</td><td>3 元&#x2F;棵</td></tr><tr><td>61-80</td><td>4 元&#x2F;棵</td></tr><tr><td>81-100</td><td>5 元&#x2F;棵</td></tr><tr><td>……</td><td>……</td></tr></tbody></table><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>首先将问题拆解，一是每棵葱的单价，二是如何合计总价。</p><p>单价的变化规律是每买 20 个增加 1，所以使用数量除以 20，整数部分即为当前数量的单价。</p><p>合计总价需要将每一棵葱的单价相加，而学过小学二年级数学的我们知道，只需要运用微积分的知识，即可求和。</p><h2 id="列式"><a href="#列式" class="headerlink" title="列式"></a>列式</h2><h3 id="单价"><a href="#单价" class="headerlink" title="单价"></a>单价</h3><p>数量每增长 20 个，单价增长 1 元。回忆我们的数学知识，这正符合阶跃函数的特征。</p><p><img src="https://picture.zhanganzhi.com/2022/08/09/4aei8w4.png" alt="阶跃函数&lt;sup id=&quot;fnref:4&quot; class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;#fn:4&quot; rel=&quot;footnote&quot;&gt;&lt;span class=&quot;hint--top hint--rounded&quot; aria-label=&quot;Stewart J, Redlin L, Watson S. Precalculus[M]. Cengage Learning, 2012.&quot;&gt;[4]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;"></p><p>列出表达式，并画图观察是否符合要求。</p><p>$$\lfloor\frac{n-1}{20}\rfloor+1$$</p><p><img src="https://picture.zhanganzhi.com/2022/08/09/707d2uc.png" alt="画图检查"></p><h3 id="总价"><a href="#总价" class="headerlink" title="总价"></a>总价</h3><p>有了单价，即可计算总价，使用求和符号将单价相加。</p><p><img src="https://picture.zhanganzhi.com/2022/08/09/25udoc4.png" alt="求和符号&lt;sup id=&quot;fnref:4&quot; class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;#fn:4&quot; rel=&quot;footnote&quot;&gt;&lt;span class=&quot;hint--top hint--rounded&quot; aria-label=&quot;Stewart J, Redlin L, Watson S. Precalculus[M]. Cengage Learning, 2012.&quot;&gt;[4]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;"></p><p>列出表达式，并画图观察是否符合要求。</p><p>$$\sum_{n&#x3D;1}^{x}(\lfloor\frac{n-1}{20}\rfloor+1)$$</p><p><img src="https://picture.zhanganzhi.com/2022/08/09/48tb3f7.png" alt="画图检查"></p><h2 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h2><p>葱的单价为 $\lfloor\frac{n-1}{20}\rfloor+1$，总价为 $\sum_{n&#x3D;1}^{x}(\lfloor\frac{n-1}{20}\rfloor+1)$。图表链接：<a href="https://www.desmos.com/calculator/qc16ngykwu">https://www.desmos.com/calculator/qc16ngykwu</a>。</p><p>若一棵葱为半斤，那么在单价 1-2 元左右是科学的，也就是一次购买 40 棵以内是最科学的。</p><section class="footnotes"><h2 id="参考文献">参考文献</h2><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://pixabay.com/photos/winter-onion-leek-root-stalk-228039/">https://pixabay.com/photos/winter-onion-leek-root-stalk-228039/</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://www.pexels.com/zh-cn/photo/1508666/">https://www.pexels.com/zh-cn/photo/1508666/</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span>shenjack_. <a href="https://www.bilibili.com/video/BV17B4y1k7fZ">《如何科学的买饼》</a>. 2022-08-07 [2022-08-09]. （原始内容<a href="https://web.archive.org/web/20220809133655/https://www.bilibili.com/video/BV17B4y1k7fZ">存档</a>于2022-08-09）.<a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:4" class="footnote-text"><span>Stewart J, Redlin L, Watson S. Precalculus[M]. Cengage Learning, 2012.<a href="#fnref:4" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>生活</tag>
      
      <tag>数学</tag>
      
      <tag>微积分</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>购买西数 4T 新紫盘</title>
    <link href="/zh-CN/2022/08/81f2bb325590/"/>
    <url>/zh-CN/2022/08/81f2bb325590/</url>
    
    <content type="html"><![CDATA[<blockquote><p>以前搭 NAS 的时候用了块家里旧台式机拆下来的硬盘，只有 512G，容量一直挺吃紧的，加上这个硬盘快十年了，不放心安全性，决定换个新的。</p></blockquote><span id="more"></span><h2 id="旧硬盘的由来"><a href="#旧硬盘的由来" class="headerlink" title="旧硬盘的由来"></a>旧硬盘的由来</h2><p>家里十年前买了个一体机放家里用，但是性能不强使用频率不高，去年看着再吃灰更不值钱了，几百块钱买了出去。<strong>但是卖之前上淘宝花了 16 块钱买了个 500G 的劣质硬盘偷梁换柱，还非常贴心地帮忙装了个 win7 系统。</strong></p><p><img src="https://picture.zhanganzhi.com/2022/08/02/0evw9xr.png" alt="黑心二手商家"></p><h2 id="硬盘选型"><a href="#硬盘选型" class="headerlink" title="硬盘选型"></a>硬盘选型</h2><p>综合了价格和容量之后，决定买 4T 的硬盘，对比之后确定了西数的 <code>WD42EJRX</code>。京东自营价格 529 元，等了快一个月一直没降下去，今天写文章降到 509 了。</p><p>还有一个问题，这个是不是叠瓦盘。费了一番功夫，找到了<a href="https://www.bilibili.com/read/cv14273159">这篇文章</a><sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="海门牌梭鱼罐头. [十年，2T：西数新款紫盘深入测试](https://www.bilibili.com/read/cv14273159). 2021-12-03 [2022-07-20]. （原始内容[存档](http://web.archive.org/web/20220802103829/https://www.bilibili.com/read/cv14273159)于2022-08-03）.">[1]</span></a></sup>，确定不是叠瓦盘。巧的是在我下单前，这篇文章的作者发布了一条<a href="https://t.bilibili.com/687792429254836233">动态</a><sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="海门牌梭鱼罐头. [动态](https://t.bilibili.com/687792429254836233). 2022-07-28 [2022-07-29]. （原始内容[存档](http://web.archive.org/web/20220802104250/https://t.bilibili.com/687792429254836233)于2022-08-03）.">[2]</span></a></sup>，通过破解电路板证实了确实是一块 CMR 硬盘。</p><h2 id="开箱"><a href="#开箱" class="headerlink" title="开箱"></a>开箱</h2><p>京东的包装有些简陋，硬盘盒子直接套了个快递泡沫袋，也不装箱。盒子里是一个塑料的架子，里面静电袋包着硬盘。</p><p><img src="https://picture.zhanganzhi.com/2022/08/02/k2c57us.jpg" alt="盒子已经挤压变形了"></p><p><img src="https://picture.zhanganzhi.com/2022/08/02/ad2fdt7.jpg" alt="硬盘正面"></p><p><img src="https://picture.zhanganzhi.com/2022/08/02/c5eiczr.png" alt="厚度非常明显"></p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>健康信息忘了截图了，很正常，京东自营应该不会篡改的。</p><p><img src="https://picture.zhanganzhi.com/2022/08/02/emtnrxn.png" alt="用了七个小时扫一遍坏道"></p><p><img src="https://picture.zhanganzhi.com/2022/08/02/9v329ah.png" alt="读取速度曲线"></p><p><img src="https://picture.zhanganzhi.com/2022/08/02/nmgr2ra.png" alt="写入速度曲线"></p><p>按文章<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="海门牌梭鱼罐头. [十年，2T：西数新款紫盘深入测试](https://www.bilibili.com/read/cv14273159). 2021-12-03 [2022-07-20]. （原始内容[存档](http://web.archive.org/web/20220802103829/https://www.bilibili.com/read/cv14273159)于2022-08-03）.">[1]</span></a></sup>的方法又跑了下随机读写用于判断叠瓦，真的有炒豆子的声音。</p><p><img src="https://picture.zhanganzhi.com/2022/08/02/2ece2xp.png" alt="格式化测个速"></p><h2 id="实装"><a href="#实装" class="headerlink" title="实装"></a>实装</h2><p>装上设置挂载，然后调一下 samba 配置文件，把旧硬盘文件拷过来即可。第一次拷文件在 100 MB&#x2F;s 左右徘徊，之后就可以稳定占满千兆网线的速度了。</p><p><img src="https://picture.zhanganzhi.com/2022/08/02/3jp0ese.png" alt="第一次速度不太稳"></p><p><img src="https://picture.zhanganzhi.com/2022/08/02/thu935z.png" alt="实际使用的速度"></p><section class="footnotes"><h2 id="参考文献">参考文献</h2><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>海门牌梭鱼罐头. <a href="https://www.bilibili.com/read/cv14273159">十年，2T：西数新款紫盘深入测试</a>. 2021-12-03 [2022-07-20]. （原始内容<a href="http://web.archive.org/web/20220802103829/https://www.bilibili.com/read/cv14273159">存档</a>于2022-08-03）.<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span>海门牌梭鱼罐头. <a href="https://t.bilibili.com/687792429254836233">动态</a>. 2022-07-28 [2022-07-29]. （原始内容<a href="http://web.archive.org/web/20220802104250/https://t.bilibili.com/687792429254836233">存档</a>于2022-08-03）.<a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>日常</category>
      
      <category>开箱</category>
      
    </categories>
    
    
    <tags>
      
      <tag>开箱</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git Conventional Commits</title>
    <link href="/en/2022/06/ca740262a99f/"/>
    <url>/en/2022/06/ca740262a99f/</url>
    
    <content type="html"><![CDATA[<blockquote><p>The Conventional Commits specification is a lightweight convention on top of commit messages. It provides an easy set of rules for creating an explicit commit history; which makes it easier to write automated tools on top of. This convention dovetails with <a href="https://semver.org/">SemVer</a>, by describing the features, fixes, and breaking changes made in commit messages.</p></blockquote><span id="more"></span><ul><li>Automatically generating CHANGELOGs.</li><li>Automatically determining a semantic version bump (based on the types of commits landed).</li><li>Communicating the nature of changes to teammates, the public, and other stakeholders.</li><li>Triggering build and publish processes.</li><li>Making it easier for people to contribute to your projects, by allowing them to explore a more structured commit history.</li></ul><h2 id="Specification"><a href="#Specification" class="headerlink" title="Specification"></a>Specification</h2><p><a href="https://www.conventionalcommits.org/en/v1.0.0/">Conventional Commits</a><sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="&quot;[Conventional Commits](https://www.conventionalcommits.org/en/v1.0.0/)&quot;. Retrieved 28 June 2022.">[1]</span></a></sup> specifies the structure of the commit message:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">&lt;type&gt;[optional scope]: &lt;description&gt;<br><br>[optional body]<br><br>[optional footer(s)]<br></code></pre></td></tr></table></figure><h3 id="Type"><a href="#Type" class="headerlink" title="Type"></a>Type</h3><p>The type must use <strong>lowercase</strong>, cannot empty, followed by the OPTIONAL scope, OPTIONAL <code>!</code>, and REQUIRED terminal colon and space.</p><p>There are all available commit types:</p><ul><li><code>build</code></li><li><code>chore</code></li><li><code>ci</code></li><li><code>docs</code></li><li><code>feat</code></li><li><code>fix</code></li><li><code>perf</code></li><li><code>refactor</code></li><li><code>revert</code></li><li><code>style</code></li><li><code>test</code></li></ul><h3 id="Scope"><a href="#Scope" class="headerlink" title="Scope"></a>Scope</h3><p>A scope MAY be provided after a type. A scope MUST consist of a noun describing a section of the codebase surrounded by parenthesis.</p><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>The description is a short summary of the code changes, cannot be empty, and does not end with a period.</p><h3 id="Body"><a href="#Body" class="headerlink" title="Body"></a>Body</h3><p>A longer commit body MAY be provided after the short description, providing additional contextual information about the code changes. The body MUST begin one blank line after the description.</p><p>A commit body is free-form and MAY consist of any number of newline separated paragraphs.</p><h3 id="Footer"><a href="#Footer" class="headerlink" title="Footer"></a>Footer</h3><p>One or more footers MAY be provided one blank line after the body. Each footer MUST consist of a word token, followed by either a <code>:&lt;space&gt;</code> or <code>&lt;space&gt;#</code> separator, followed by a string value.</p><p>A footer’s token MUST use <code>-</code> in place of whitespace characters, a only exception is made for <code>BREAKING CHANGE</code>.</p><p>A footer’s value MAY contain spaces and newlines.</p><h3 id="Correlate-with-SemVer"><a href="#Correlate-with-SemVer" class="headerlink" title="Correlate with SemVer"></a>Correlate with SemVer</h3><p>Some commit types may affect <a href="https://semver.org/">SemVer</a> changes:</p><ol><li><strong>fix</strong> means patches a bug, this correlates with <code>PATCH</code> in Semantic Versioning.</li><li><strong>feat</strong> means introduces a new feature, this correlates with <code>MINOR</code> in Semantic Versioning.</li><li><strong>BREAKING CHANGE</strong> is in the footer, or appends a <code>!</code> after the type&#x2F;scope, this correlates with <code>MAJOR</code> in Semantic Versioning.</li></ol><h2 id="Tools"><a href="#Tools" class="headerlink" title="Tools"></a>Tools</h2><h3 id="Gitmoji"><a href="#Gitmoji" class="headerlink" title="Gitmoji"></a>Gitmoji</h3><p><a href="https://gitmoji.dev/">Gitmoji</a><sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="&quot;[gitmoji](https://gitmoji.dev/)&quot;. [Archived](https://web.archive.org/web/20220628095615/https://gitmoji.dev/) from the original on 28 June 2022. Retrieved 28 June 2022.">[2]</span></a></sup> is an initiative to standardize and explain the use of emojis on GitHub commit messages.</p><h3 id="VS-Code-Extension"><a href="#VS-Code-Extension" class="headerlink" title="VS Code Extension"></a>VS Code Extension</h3><p>When committing in the VS Code, <a href="https://marketplace.visualstudio.com/items?itemName=vivaxy.vscode-conventional-commits">Conventional Commits</a><sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><span class="hint--top hint--rounded" aria-label="&quot;[Semantic Versioning](https://semver.org/)&quot;. [Archived](https://web.archive.org/web/20220628082309/https://semver.org/) from the original on 28 June 2022. Retrieved 28 June 2022.">[3]</span></a></sup> extension can help to generate a commit message.</p><p><img src="https://picture.zhanganzhi.com/2022/06/28/ap3xacu.png" alt="The interface of Conventional Commits"></p><h3 id="GitHub-Action"><a href="#GitHub-Action" class="headerlink" title="GitHub Action"></a>GitHub Action</h3><p><a href="https://github.com/google-github-actions/release-please-action">Release Please Action</a><sup id="fnref:4" class="footnote-ref"><a href="#fn:4" rel="footnote"><span class="hint--top hint--rounded" aria-label="&quot;[Release Please Action](https://github.com/google-github-actions/release-please-action)&quot;. [Archived](https://web.archive.org/web/20220628095655/https://github.com/google-github-actions/release-please-action) from the original on 28 June 2022. Retrieved 28 June 2022.">[4]</span></a></sup> is a GitHub Action, which can auto-generate and create releases based on commit messages.</p><p>Release Please Action will automatically create release pr includes generated CHANGELOG. When PR is merged, it will create a release, and you can run CI&#x2F;CD and upload files to the release.</p><p><img src="https://picture.zhanganzhi.com/2022/06/28/h8ihofj.png" alt="The PR created by Release Please Action"></p><section class="footnotes"><h2 id="参考文献">参考文献</h2><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>&quot;<a href="https://www.conventionalcommits.org/en/v1.0.0/">Conventional Commits</a>&quot;. Retrieved 28 June 2022.<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span>&quot;<a href="https://gitmoji.dev/">gitmoji</a>&quot;. <a href="https://web.archive.org/web/20220628095615/https://gitmoji.dev/">Archived</a> from the original on 28 June 2022. Retrieved 28 June 2022.<a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span>&quot;<a href="https://semver.org/">Semantic Versioning</a>&quot;. <a href="https://web.archive.org/web/20220628082309/https://semver.org/">Archived</a> from the original on 28 June 2022. Retrieved 28 June 2022.<a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:4" class="footnote-text"><span>&quot;<a href="https://github.com/google-github-actions/release-please-action">Release Please Action</a>&quot;. <a href="https://web.archive.org/web/20220628095655/https://github.com/google-github-actions/release-please-action">Archived</a> from the original on 28 June 2022. Retrieved 28 June 2022.<a href="#fnref:4" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>开发</category>
      
      <category>Git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Git</tag>
      
      <tag>GitHub</tag>
      
      <tag>VS Code</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git 约定式提交</title>
    <link href="/zh-CN/2022/06/ca740262a99f/"/>
    <url>/zh-CN/2022/06/ca740262a99f/</url>
    
    <content type="html"><![CDATA[<blockquote><p>约定式提交规范是一种基于提交信息的轻量级约定。它提供了一组简单规则来创建清晰的提交历史；这更有利于编写自动化工具。通过在提交信息中描述功能、修复和破坏性变更，使这种惯例与 <a href="https://semver.org/">SemVer</a> 相互对应。</p></blockquote><span id="more"></span><ul><li>自动化生成 CHANGELOG。</li><li>基于提交的类型，自动决定语义化的版本变更。</li><li>向同事、公众与其他利益关系者传达变化的性质。</li><li>触发构建和部署流程。</li><li>让人们探索一个更加结构化的提交历史，以便降低对你的项目做出贡献的难度。</li></ul><h2 id="规范"><a href="#规范" class="headerlink" title="规范"></a>规范</h2><p><a href="https://www.conventionalcommits.org/en/v1.0.0/">约定式提交</a><sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="[Conventional Commits](https://www.conventionalcommits.org/en/v1.0.0/). [2022-06-28].">[1]</span></a></sup> 规定了每一条 commit message 的格式：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">&lt;type&gt;[optional scope]: &lt;description&gt;<br><br>[optional body]<br><br>[optional footer(s)]<br></code></pre></td></tr></table></figure><h3 id="类型（type）"><a href="#类型（type）" class="headerlink" title="类型（type）"></a>类型（type）</h3><p>类型应当使用<strong>小写字母</strong>，不能为空，后接<strong>可选的</strong>范围字段和 <code>!</code>，以及<strong>必要的</strong>冒号和空格。</p><p>下为可用的类型列表：</p><ul><li><code>build</code></li><li><code>chore</code></li><li><code>ci</code></li><li><code>docs</code></li><li><code>feat</code></li><li><code>fix</code></li><li><code>perf</code></li><li><code>refactor</code></li><li><code>revert</code></li><li><code>style</code></li><li><code>test</code></li></ul><h3 id="范围（scope）"><a href="#范围（scope）" class="headerlink" title="范围（scope）"></a>范围（scope）</h3><p>范围字段<strong>可以</strong>跟随在类型字段后面。范围<strong>必须</strong>是一个描述某部分代码的名词，并用圆括号包围。</p><h3 id="描述（description）"><a href="#描述（description）" class="headerlink" title="描述（description）"></a>描述（description）</h3><p>对代码变更的简短总结，不能为空，结尾不写句号。</p><h3 id="正文（body）"><a href="#正文（body）" class="headerlink" title="正文（body）"></a>正文（body）</h3><p>在简短描述之后，<strong>可以</strong>编写较长的提交正文，为代码变更提供额外的上下文信息。<strong>正文</strong>必须起始于描述字段结束的一个空行后。</p><p>正文内容自由编写，并<strong>可以</strong>使用空行分隔不同段落。</p><h3 id="脚注（footer）"><a href="#脚注（footer）" class="headerlink" title="脚注（footer）"></a>脚注（footer）</h3><p>在正文结束的一个空行之后，<strong>可以</strong>编写一行或多行脚注。每行脚注都<strong>必须</strong>包含一个令牌（token），后面紧跟 <code>:&lt;space&gt;</code> 或 <code>&lt;space&gt;#</code> 作为分隔符，后面再紧跟令牌的值。</p><p>脚注的令牌<strong>必须</strong>使用 <code>-</code> 作为连字符，唯一的例外是 <code>BREAKING CHANGE</code>。</p><p>脚注的值<strong>可以</strong>包含空格和换行。</p><h3 id="SemVer-的影响"><a href="#SemVer-的影响" class="headerlink" title="SemVer 的影响"></a>SemVer 的影响</h3><p>有些提交类型对 <a href="https://semver.org/">SemVer</a> 的版本号有影响：</p><ol><li><strong>fix</strong> 表示修复了一个 bug，对应语义化版本的 <code>PATCH</code>。</li><li><strong>feat</strong> 表示新增了一个功能，对应语义化版本的 <code>MINOR</code>。</li><li><strong>BREAKING CHANGE</strong> 包含在脚注中，或类型&#x2F;范围后有一个 <code>!</code>，对应语义化版本的 <code>MAJOR</code>。</li></ol><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><h3 id="Gitmoji"><a href="#Gitmoji" class="headerlink" title="Gitmoji"></a>Gitmoji</h3><p><a href="https://gitmoji.dev/">Gitmoji</a><sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="[gitmoji](https://gitmoji.dev/). [2022-06-28]. （原始内容[存档](https://web.archive.org/web/20220628095615/https://gitmoji.dev/)于2022-06-28）.">[2]</span></a></sup> 是一项旨在规范和解释在 GitHub 提交消息上使用表情符号的倡议。</p><h3 id="VS-Code-扩展"><a href="#VS-Code-扩展" class="headerlink" title="VS Code 扩展"></a>VS Code 扩展</h3><p>在 VS Code 中提交时，<a href="https://marketplace.visualstudio.com/items?itemName=vivaxy.vscode-conventional-commits">Conventional Commits</a><sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><span class="hint--top hint--rounded" aria-label="[Semantic Versioning](https://semver.org/). [2022-06-28]. （原始内容[存档](https://web.archive.org/web/20220628082309/https://semver.org/)于2022-06-28）.">[3]</span></a></sup> 扩展可以帮助生成提交信息。</p><p><img src="https://picture.zhanganzhi.com/2022/06/28/ap3xacu.png" alt="Conventional Commits 的界面"></p><h3 id="GitHub-Action"><a href="#GitHub-Action" class="headerlink" title="GitHub Action"></a>GitHub Action</h3><p><a href="https://github.com/google-github-actions/release-please-action">Release Please Action</a><sup id="fnref:4" class="footnote-ref"><a href="#fn:4" rel="footnote"><span class="hint--top hint--rounded" aria-label="[Release Please Action](https://github.com/google-github-actions/release-please-action). [2022-06-28]. （原始内容[存档](https://web.archive.org/web/20220628095655/https://github.com/google-github-actions/release-please-action)于2022-06-28）.">[4]</span></a></sup> 是一个 GitHub Action，可以根据提交信息自动生成 CHANGELOG 和发布 Release。</p><p>Release Please Action 会自动创建发布 PR，包含生成的 CHANGELOG。当 PR 合并时，发布 Release，此时可以执行 CI&#x2F;CD，将文件上传到 Release 和发布。</p><p><img src="https://picture.zhanganzhi.com/2022/06/28/h8ihofj.png" alt="Release Please Action 创建的 PR"></p><section class="footnotes"><h2 id="参考文献">参考文献</h2><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://www.conventionalcommits.org/en/v1.0.0/">Conventional Commits</a>. [2022-06-28].<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://gitmoji.dev/">gitmoji</a>. [2022-06-28]. （原始内容<a href="https://web.archive.org/web/20220628095615/https://gitmoji.dev/">存档</a>于2022-06-28）.<a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="https://semver.org/">Semantic Versioning</a>. [2022-06-28]. （原始内容<a href="https://web.archive.org/web/20220628082309/https://semver.org/">存档</a>于2022-06-28）.<a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:4" class="footnote-text"><span><a href="https://github.com/google-github-actions/release-please-action">Release Please Action</a>. [2022-06-28]. （原始内容<a href="https://web.archive.org/web/20220628095655/https://github.com/google-github-actions/release-please-action">存档</a>于2022-06-28）.<a href="#fnref:4" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>开发</category>
      
      <category>Git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Git</tag>
      
      <tag>GitHub</tag>
      
      <tag>VS Code</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GitHub Actions 自动部署 Hexo 博客</title>
    <link href="/zh-CN/2022/06/0800d76d306e/"/>
    <url>/zh-CN/2022/06/0800d76d306e/</url>
    
    <content type="html"><![CDATA[<blockquote><p>Hexo 官方文档的 <a href="https://pages.github.com/">GitHub Pages</a> 部署方案<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="[将 Hexo 部署到 GitHub Pages](https://hexo.io/zh-cn/docs/github-pages). Hexo. 2022-06-11 [2022-06-17]. （原始内容[存档](https://web.archive.org/web/20220617122944/https://hexo.io/zh-cn/docs/github-pages)于2022-06-17）.">[1]</span></a></sup>需要注册第三方账号且绑定信用卡，所以创建博客时选择了一键部署<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="[部署](https://hexo.io/zh-cn/docs/one-command-deployment). Hexo. 2022-06-11 [2022-06-17]. （原始内容[存档](https://web.archive.org/web/20220617122947/https://hexo.io/zh-cn/docs/one-command-deployment)于2022-06-17）.">[2]</span></a></sup>的方案，但是需要手动使用 <code>hexo clean &amp;&amp; hexo d</code> 部署博客，有些麻烦，于是决定改为 GitHub Actions 自动部署。</p></blockquote><span id="more"></span><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>分别设置博客仓库和部署仓库，部署仓库为 <a href="https://pages.github.com/">GitHub Pages</a>。</p><h2 id="配置-SSH"><a href="#配置-SSH" class="headerlink" title="配置 SSH"></a>配置 SSH</h2><p>在本地生成一对 SSH 密钥，注意更改文件名避免将正在使用的密钥覆盖。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -t ed25519 -C <span class="hljs-string">&quot;your_email@example.com&quot;</span><br></code></pre></td></tr></table></figure><p>在<strong>博客仓库</strong>的 <code>Settings -&gt; Secrets -&gt; Actions</code> 中添加 SSH <strong>私钥</strong>，命名为 <code>SSH_DEPLOY_KEY</code>。</p><p><img src="https://picture.zhanganzhi.com/2022/06/19/011b4r1.png" alt="添加私钥"></p><p>在<strong>部署仓库</strong>的 <code>Settings -&gt; Deploy keys</code> 中添加 SSH <strong>公钥</strong>，注意勾选 <code>Allow write access</code>。</p><p><img src="https://picture.zhanganzhi.com/2022/06/19/ui72xts.png" alt="添加公钥"></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/ktzdikp.png" alt="勾选 Allow write access"></p><h2 id="编写-Workflow"><a href="#编写-Workflow" class="headerlink" title="编写 Workflow"></a>编写 Workflow</h2><p>创建 <code>.github/workflows/deployment.yml</code>，写入以下内容，注意修改仓库地址和 Git 配置。此时当 <code>push</code> 到博客仓库时，GitHub Actions 将会自动部署。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">name:</span> <span class="hljs-string">Deployment</span><br><span class="hljs-attr">on:</span> <span class="hljs-string">push</span><br><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">deployment:</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">Deployment</span><br><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Check</span> <span class="hljs-string">Out</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v3</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Clone</span> <span class="hljs-string">Repo</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v3</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">repository:</span> <span class="hljs-string">Username/Repository</span><br>          <span class="hljs-attr">path:</span> <span class="hljs-string">.deploy_git</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Setup</span> <span class="hljs-string">Node</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/setup-node@v3</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">node-version:</span> <span class="hljs-number">16</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Setup</span> <span class="hljs-string">Git</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">          git config --global user.name &quot;Example&quot;</span><br><span class="hljs-string">          git config --global user.email &quot;email@example.com&quot;</span><br><span class="hljs-string"></span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Setup</span> <span class="hljs-string">SSH</span> <span class="hljs-string">Key</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">          mkdir -p ~/.ssh</span><br><span class="hljs-string">          echo &quot;$&#123;&#123; secrets.SSH_DEPLOY_KEY &#125;&#125;&quot; &gt; ~/.ssh/id_ed25519</span><br><span class="hljs-string">          chmod 600 ~/.ssh/id_ed25519</span><br><span class="hljs-string"></span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Deploy</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">          npm install --location=global hexo-cli</span><br><span class="hljs-string">          npm install</span><br><span class="hljs-string">          hexo d</span><br></code></pre></td></tr></table></figure><h2 id="Workflow-解析"><a href="#Workflow-解析" class="headerlink" title="Workflow 解析"></a>Workflow 解析</h2><p>两个 Checkout 的作用是切换到博客仓库最新提交，并且将部署仓库克隆到 <code>.deploy_git</code>，也就是 Hexo 的部署目录。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Check</span> <span class="hljs-string">Out</span><br>    <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v3</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Clone</span> <span class="hljs-string">Repo</span><br>  <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v3</span><br>  <span class="hljs-attr">with:</span><br>   <span class="hljs-attr">repository:</span> <span class="hljs-string">Username/Repository</span><br>   <span class="hljs-attr">path:</span> <span class="hljs-string">.deploy_git</span><br></code></pre></td></tr></table></figure><p>下一步安装 Node，版本需要与博客使用的版本相同。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Setup</span> <span class="hljs-string">Node</span><br>  <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/setup-node@v3</span><br>  <span class="hljs-attr">with:</span><br>    <span class="hljs-attr">node-version:</span> <span class="hljs-number">16</span><br></code></pre></td></tr></table></figure><p>设置提交的用户名和邮箱。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Setup</span> <span class="hljs-string">Git</span><br>  <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">    git config --global user.name &quot;Example&quot;</span><br><span class="hljs-string">    git config --global user.email &quot;email@example.com&quot;</span><br></code></pre></td></tr></table></figure><p>将存储在仓库 Secrets 的 SSH 私钥存储到本地供 Git 使用。<code>mkdir</code> 是为了下一步可以在 <code>~/.ssh</code> 目录中创建文件，<code>chmod</code> 设置权限，Git 才能使用私钥<sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><span class="hint--top hint--rounded" aria-label="[利用 Github Actions 自动部署 Hexo 博客](https://sanonz.github.io/2020/deploy-a-hexo-blog-from-github-actions/). Sanonz. 2020-05-12 [2022-06-17]. （原始内容[存档](https://web.archive.org/web/20210618140206/https://sanonz.github.io/2020/deploy-a-hexo-blog-from-github-actions/)于2021-06-18）.">[3]</span></a></sup>。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Setup</span> <span class="hljs-string">SSH</span> <span class="hljs-string">Key</span><br>  <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">    mkdir -p ~/.ssh</span><br><span class="hljs-string">    echo &quot;$&#123;&#123; secrets.SSH_DEPLOY_KEY &#125;&#125;&quot; &gt; ~/.ssh/id_ed25519</span><br><span class="hljs-string">    chmod 600 ~/.ssh/id_ed25519</span><br></code></pre></td></tr></table></figure><p>最后安装 Hexo 和依赖，运行 <code>hexo d</code> 部署博客。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Deploy</span><br>  <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">    npm install --location=global hexo-cli</span><br><span class="hljs-string">    npm install</span><br><span class="hljs-string">    hexo d</span><br></code></pre></td></tr></table></figure><section class="footnotes"><h2 id="参考文献">参考文献</h2><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://hexo.io/zh-cn/docs/github-pages">将 Hexo 部署到 GitHub Pages</a>. Hexo. 2022-06-11 [2022-06-17]. （原始内容<a href="https://web.archive.org/web/20220617122944/https://hexo.io/zh-cn/docs/github-pages">存档</a>于2022-06-17）.<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://hexo.io/zh-cn/docs/one-command-deployment">部署</a>. Hexo. 2022-06-11 [2022-06-17]. （原始内容<a href="https://web.archive.org/web/20220617122947/https://hexo.io/zh-cn/docs/one-command-deployment">存档</a>于2022-06-17）.<a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="https://sanonz.github.io/2020/deploy-a-hexo-blog-from-github-actions/">利用 Github Actions 自动部署 Hexo 博客</a>. Sanonz. 2020-05-12 [2022-06-17]. （原始内容<a href="https://web.archive.org/web/20210618140206/https://sanonz.github.io/2020/deploy-a-hexo-blog-from-github-actions/">存档</a>于2021-06-18）.<a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>经验</category>
      
    </categories>
    
    
    <tags>
      
      <tag>GitHub</tag>
      
      <tag>博客</tag>
      
      <tag>自动部署</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CurseForge Modpack Downloader Tutorial</title>
    <link href="/en/2022/06/7b049d0aa9ff/"/>
    <url>/en/2022/06/7b049d0aa9ff/</url>
    
    <content type="html"><![CDATA[<blockquote><p>On May 16, 2022, CurseForge released the official API. This result in third-party launchers no longer to download modpacks, like MultiMC and PCL2. More info can be found in <a href="https://medium.com/overwolf/the-curseforge-official-api-is-now-live-d314606355c2">“The CurseForge Official API is Now Live”</a><sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="Moran Weiss. &quot;[The CurseForge Official API is Now Live](https://medium.com/overwolf/the-curseforge-official-api-is-now-live-d314606355c2)&quot;. Overwolf Blog. 16 May 2022. [Archived](https://web.archive.org/web/20220608151743/https://medium.com/overwolf/the-curseforge-official-api-is-now-live-d314606355c2) from the original on 8 June 2022. Retrieved 23 May 2022.">[1]</span></a></sup>.</p></blockquote><span id="more"></span><p>Therefore, I made a software <a href="https://github.com/AnzhiZhang/CurseForgeModpackDownloader">CurseForge Modpack Downloader</a> (CMPDL). It could download mods for modpack downloaded from CurseForge, an pack to the format that is supported by launchers like MultiMC, HMCL, and PCL2.</p><p>At this moment, they say HMCL and PCL2 can download again, but obviously, it is not in the official method. MMC’s author said he has may support the API Key of CurseForge to downlaod<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="phit. &quot;[Looks like CurseForge API in MultiMC is deprecated and unusable](https://github.com/MultiMC/Launcher/issues/4716#issuecomment-1135498404)&quot;. GitHub. 24 May 2022. [Archived](https://web.archive.org/web/20220608152954/https://github.com/MultiMC/Launcher/issues/4716) from the original on 8 June 2022. Retrieved 26 May 2022.">[2]</span></a></sup>.</p><h2 id="Download-Program"><a href="#Download-Program" class="headerlink" title="Download Program"></a>Download Program</h2><p>Open the <a href="https://github.com/AnzhiZhang/CurseForgeModpackDownloader">repository</a>, and download the newest version on the right side. You also could click <a href="https://github.com/AnzhiZhang/CurseForgeModpackDownloader/releases/latest">here</a> to go to the newest release.</p><p><img src="https://picture.zhanganzhi.com/2022/07/02/stjqlmi.png" alt="Find Releases"></p><p><img src="https://picture.zhanganzhi.com/2022/07/02/bp3dzql.png" alt="Download the first one in Assets"></p><h2 id="Download-Modpack"><a href="#Download-Modpack" class="headerlink" title="Download Modpack"></a>Download Modpack</h2><p>There are two ways to download modpacks: direct download in program or import.</p><h3 id="Direct-Download-in-CMPDL"><a href="#Direct-Download-in-CMPDL" class="headerlink" title="Direct Download in CMPDL"></a>Direct Download in CMPDL</h3><p>You could find modpacks in the list.</p><p><img src="https://picture.zhanganzhi.com/2022/07/02/l7f94y7.png" alt="Select a modpack"></p><p><img src="https://picture.zhanganzhi.com/2022/07/02/1uo8z0g.png" alt="Entry keywords at the top to search"></p><p><img src="https://picture.zhanganzhi.com/2022/07/02/mptddvj.png" alt="Change sort"></p><p><img src="https://picture.zhanganzhi.com/2022/07/02/b5o9rnr.png" alt="Filter game version"></p><p>After selecting a modpack, you could choose the modpack version at the bottom right.</p><p><img src="https://picture.zhanganzhi.com/2022/06/19/2defdt2.png" alt="Choose modpack version"></p><p><img src="https://picture.zhanganzhi.com/2022/07/02/ldo9vkm.png" alt="Click download and wait for the downloading"></p><h3 id="Use-CurseForge-Download-and-Import"><a href="#Use-CurseForge-Download-and-Import" class="headerlink" title="Use CurseForge Download and Import"></a>Use CurseForge Download and Import</h3><p>Find moodpack your like on CourseForge and download modpack file, I will use Restrict Skyblock for example.</p><p><img src="https://picture.zhanganzhi.com/2022/06/19/7jqy8d1.png" alt="Go to Files"></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/0lwxnnf.png" alt="Choose modpack version"></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/4lgr1mb.png" alt="Click Download"></p><p><img src="https://picture.zhanganzhi.com/2022/07/02/ebln9qo.png" alt="Click Import"></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/teu0gwf.png" alt="Select the file downloaded from CurseForge"></p><p><img src="https://picture.zhanganzhi.com/2022/07/02/yg7seuc.png" alt="Wait for the downloading"></p><h2 id="Import-to-Launcher"><a href="#Import-to-Launcher" class="headerlink" title="Import to Launcher"></a>Import to Launcher</h2><p>Wait for the downloading to finish and pop this prompt. Import the zip file (located at the program path, if imported from a specific file, it is the original path) into your launcher.</p><p><img src="https://picture.zhanganzhi.com/2022/07/02/wps5n6s.png" alt="Prompt of finished"></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/r1o164g.png" alt="Import to MultiMC"></p><h2 id="Get-CurseForge-API-Key"><a href="#Get-CurseForge-API-Key" class="headerlink" title="Get CurseForge API Key"></a>Get CurseForge API Key</h2><p>Go to <a href="https://console.curseforge.com/">https://console.curseforge.com/</a> and sign up with Google.</p><p><img src="https://picture.zhanganzhi.com/2022/06/27/4shwhrw.png" alt="Only allowed Google"></p><p><img src="https://picture.zhanganzhi.com/2022/06/27/n854m6c.png" alt="Copy in API Keys"></p><section class="footnotes"><h2 id="参考文献">参考文献</h2><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>Moran Weiss. &quot;<a href="https://medium.com/overwolf/the-curseforge-official-api-is-now-live-d314606355c2">The CurseForge Official API is Now Live</a>&quot;. Overwolf Blog. 16 May 2022. <a href="https://web.archive.org/web/20220608151743/https://medium.com/overwolf/the-curseforge-official-api-is-now-live-d314606355c2">Archived</a> from the original on 8 June 2022. Retrieved 23 May 2022.<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span>phit. &quot;<a href="https://github.com/MultiMC/Launcher/issues/4716#issuecomment-1135498404">Looks like CurseForge API in MultiMC is deprecated and unusable</a>&quot;. GitHub. 24 May 2022. <a href="https://web.archive.org/web/20220608152954/https://github.com/MultiMC/Launcher/issues/4716">Archived</a> from the original on 8 June 2022. Retrieved 26 May 2022.<a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>Minecraft</category>
      
      <category>工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Minecraft</tag>
      
      <tag>整合包</tag>
      
      <tag>CurseForge</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CurseForge 整合包下载器教程</title>
    <link href="/zh-CN/2022/06/7b049d0aa9ff/"/>
    <url>/zh-CN/2022/06/7b049d0aa9ff/</url>
    
    <content type="html"><![CDATA[<blockquote><p>2022年5月16日，CurseForge 发布了官方 API，同时弃用了旧的 API，这导致第三方启动器无法下载，如 MultiMC 和 PCL2。具体原因和详细情况在 <a href="https://medium.com/overwolf/the-curseforge-official-api-is-now-live-d314606355c2">《The CurseForge Official API is Now Live》</a><sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="Moran Weiss. [The CurseForge Official API is Now Live](https://medium.com/overwolf/the-curseforge-official-api-is-now-live-d314606355c2). Overwolf Blog. 2022-05-16 [2022-05-23]. （原始内容[存档](https://web.archive.org/web/20220608151743/https://medium.com/overwolf/the-curseforge-official-api-is-now-live-d314606355c2)于2022-06-08）.">[1]</span></a></sup> 中有详细说明。</p></blockquote><span id="more"></span><p>因此，我制作了一个软件 <a href="https://github.com/AnzhiZhang/CurseForgeModpackDownloader">CurseForge Modpack Downloader</a> (CMPDL)，可以将 CurseForge 下载的整合包补全文件，制作为启动器支持的格式。目前已测试支持的启动器列表为：MultiMC，HMCL 和 PCL2。</p><p>当前，据说 HMCL 和 PCL2 已重新支持下载，但显然不是官方认可的方式。MMC 作者表示没有短期支持的计划，长期可能支持 API Key 的方式<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="phit. [Looks like CurseForge API in MultiMC is deprecated and unusable](https://github.com/MultiMC/Launcher/issues/4716#issuecomment-1135498404). GitHub. 2022-05-24 [2022-05-26]. （原始内容[存档](https://web.archive.org/web/20220608152954/https://github.com/MultiMC/Launcher/issues/4716)于2022-06-08）.">[2]</span></a></sup>。</p><h2 id="下载程序"><a href="#下载程序" class="headerlink" title="下载程序"></a>下载程序</h2><p>打开 <a href="https://github.com/AnzhiZhang/CurseForgeModpackDownloader">程序仓库</a>，在右侧的 Releases 下载最新版。您也可以点击 <a href="https://github.com/AnzhiZhang/CurseForgeModpackDownloader/releases/latest">这里</a> 直接前往最新版</p><p><img src="https://picture.zhanganzhi.com/2022/07/02/stjqlmi.png" alt="找到 Releases"></p><p><img src="https://picture.zhanganzhi.com/2022/07/02/bp3dzql.png" alt="下载 Assets 的第一个"></p><h2 id="下载整合包"><a href="#下载整合包" class="headerlink" title="下载整合包"></a>下载整合包</h2><p>共有两种方式下载整合包：直接在程序内下载或导入。</p><h3 id="直接使用-CMPDL-下载"><a href="#直接使用-CMPDL-下载" class="headerlink" title="直接使用 CMPDL 下载"></a>直接使用 CMPDL 下载</h3><p>在中间的列表可以直接选择整合包。</p><p><img src="https://picture.zhanganzhi.com/2022/06/19/lqfefxc.png" alt="选择整合包"></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/wxp7lxf.png" alt="在上方输入关键词搜索"></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/fy60yqf.png" alt="修改排序方式"></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/4kir4gd.png" alt="筛选游戏版本"></p><p>选择整合包后，可以在右下方选择整合包版本。</p><p><img src="https://picture.zhanganzhi.com/2022/06/19/2defdt2.png" alt="选择整合包版本"></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/mm9ulsp.png" alt="点击下载并等待完成"></p><h3 id="使用-CurseForge-下载并导入"><a href="#使用-CurseForge-下载并导入" class="headerlink" title="使用 CurseForge 下载并导入"></a>使用 CurseForge 下载并导入</h3><p>在 CourseForge 上找到喜欢的整合包，下载整合包文件，此处以 Restrict Skyblock 为例</p><p><img src="https://picture.zhanganzhi.com/2022/06/19/7jqy8d1.png" alt="打开 Files"></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/0lwxnnf.png" alt="选择整合包版本"></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/4lgr1mb.png" alt="点击 Download 下载"></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/w0x17uf.png" alt="点击导入"></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/teu0gwf.png" alt="选择从 CurseForge 下载的文件"></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/l3mkqq6.png" alt="等待下载完成"></p><h2 id="导入启动器"><a href="#导入启动器" class="headerlink" title="导入启动器"></a>导入启动器</h2><p>等待下载完成弹出下图提示。将压缩包（位于软件目录，如果是导入即为原路径）导入启动器即可。</p><p><img src="https://picture.zhanganzhi.com/2022/06/19/6cpt62r.png" alt="提示下载完成"></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/r1o164g.png" alt="导入 MultiMC"></p><h2 id="CurseForge-API-Key-获取方式"><a href="#CurseForge-API-Key-获取方式" class="headerlink" title="CurseForge API Key 获取方式"></a>CurseForge API Key 获取方式</h2><p>在 <a href="https://console.curseforge.com/">https://console.curseforge.com/</a>，使用 Google 注册。</p><p><img src="https://picture.zhanganzhi.com/2022/06/27/4shwhrw.png" alt="仅支持 Google 登录"></p><p><img src="https://picture.zhanganzhi.com/2022/06/27/n854m6c.png" alt="在 API Keys 中复制"></p><section class="footnotes"><h2 id="参考文献">参考文献</h2><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>Moran Weiss. <a href="https://medium.com/overwolf/the-curseforge-official-api-is-now-live-d314606355c2">The CurseForge Official API is Now Live</a>. Overwolf Blog. 2022-05-16 [2022-05-23]. （原始内容<a href="https://web.archive.org/web/20220608151743/https://medium.com/overwolf/the-curseforge-official-api-is-now-live-d314606355c2">存档</a>于2022-06-08）.<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span>phit. <a href="https://github.com/MultiMC/Launcher/issues/4716#issuecomment-1135498404">Looks like CurseForge API in MultiMC is deprecated and unusable</a>. GitHub. 2022-05-24 [2022-05-26]. （原始内容<a href="https://web.archive.org/web/20220608152954/https://github.com/MultiMC/Launcher/issues/4716">存档</a>于2022-06-08）.<a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>Minecraft</category>
      
      <category>工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Minecraft</tag>
      
      <tag>整合包</tag>
      
      <tag>CurseForge</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GPG 入门教程</title>
    <link href="/zh-CN/2022/06/1c71f69657ed/"/>
    <url>/zh-CN/2022/06/1c71f69657ed/</url>
    
    <content type="html"><![CDATA[<h2 id="简介和概念"><a href="#简介和概念" class="headerlink" title="简介和概念"></a>简介和概念</h2><p>完整的官方文档可在 <a href="https://www.gnupg.org/">官网</a> 阅读。</p><blockquote><p>GNU Privacy Guard（GnuPG 或 GPG）是一个密码学软件，用于加密、签名通信内容及管理非对称密码学的密钥。GnuPG 是自由软件，遵循 IETF 订定的 OpenPGP 技术标准设计，并与 PGP 保持兼容。</p></blockquote><p>GPG 有许多用途，包括文件和邮件加密、签名、Git 提交签名等。</p><p><img src="https://picture.zhanganzhi.com/2022/06/19/2hq6kjy.png" alt="经过 GPG 签名的提交可以在 GitHub 显示绿色的 Verified&lt;sup id=&quot;fnref:1&quot; class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;#fn:1&quot; rel=&quot;footnote&quot;&gt;&lt;span class=&quot;hint--top hint--rounded&quot; aria-label=&quot;[About commit signature verification](https://docs.github.com/en/authentication/managing-commit-signature-verification/about-commit-signature-verification). GitHub Docs. [2022-06-06]. （原始内容[存档](https://web.archive.org/web/20220606095245/https://docs.github.com/en/authentication/managing-commit-signature-verification/about-commit-signature-verification)于2022-06-06）&quot;&gt;[1]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;"></p><p>以下概念建议先浏览一遍，操作后再回来看一遍，可以更好理解。</p><h3 id="主密钥（Primary-Key）和子密钥（Subkey）"><a href="#主密钥（Primary-Key）和子密钥（Subkey）" class="headerlink" title="主密钥（Primary Key）和子密钥（Subkey）"></a>主密钥（Primary Key）和子密钥（Subkey）</h3><p>类似证书的根证书结构，GPG 密钥分为主密钥和子密钥。</p><p><img src="https://picture.zhanganzhi.com/2022/06/19/jgoxt42.png" alt="主密钥和子密钥的关系&lt;sup id=&quot;fnref:5&quot; class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;#fn:5&quot; rel=&quot;footnote&quot;&gt;&lt;span class=&quot;hint--top hint--rounded&quot; aria-label=&quot;嗯了个踢. [简明 GPG 概念](https://zhuanlan.zhihu.com/p/137801979). 知乎. 2020-05-02 [2022-06-06]. （原始内容[存档](https://web.archive.org/save/https://zhuanlan.zhihu.com/p/137801979)于2022-06-06）&quot;&gt;[5]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;"></p><p>子密钥虽然有自己的公钥，但是实际使用导出的是一组公钥，发布这一个公钥即可认证所有子密钥。所有的变更都是通过这个公钥发布的，比如 UID 的更改、子密钥的新增或撤销等。</p><h3 id="密钥类型"><a href="#密钥类型" class="headerlink" title="密钥类型"></a>密钥类型</h3><p>共有四种类型的密钥，对应的缩写<sup id="fnref:8" class="footnote-ref"><a href="#fn:8" rel="footnote"><span class="hint--top hint--rounded" aria-label="UlyC. [2021年，用更现代的方法使用PGP（上）](https://ulyc.github.io/2021/01/13/2021%E5%B9%B4-%E7%94%A8%E6%9B%B4%E7%8E%B0%E4%BB%A3%E7%9A%84%E6%96%B9%E6%B3%95%E4%BD%BF%E7%94%A8PGP-%E4%B8%8A/). UlyC - C的博客. 2021-01-13 [2022-06-06]. （原始内容[存档](https://web.archive.org/web/20220606133111/https://ulyc.github.io/2021/01/13/2021%E5%B9%B4-%E7%94%A8%E6%9B%B4%E7%8E%B0%E4%BB%A3%E7%9A%84%E6%96%B9%E6%B3%95%E4%BD%BF%E7%94%A8PGP-%E4%B8%8A/)于2022-06-06）">[8]</span></a></sup>如下：</p><table><thead><tr><th>类型</th><th>全名</th><th>缩写</th></tr></thead><tbody><tr><td>主公钥</td><td>Public Key</td><td>pub</td></tr><tr><td>子公钥</td><td>Public Subkey</td><td>sub</td></tr><tr><td>主私钥</td><td>Secret Key</td><td>sec</td></tr><tr><td>子私钥</td><td>Secret Subkey</td><td>ssb</td></tr></tbody></table><h3 id="用途（Usage）"><a href="#用途（Usage）" class="headerlink" title="用途（Usage）"></a>用途（Usage）</h3><p>每个密钥可以用不同的用途，下表是不同用途的含义：</p><table><thead><tr><th>缩写</th><th>全名</th><th>用途</th></tr></thead><tbody><tr><td>C</td><td>Certificating</td><td>认证，如子密钥或证书，类似根证书的作用。</td></tr><tr><td>S</td><td>Signing</td><td>签名，如文件数字签名、邮件签名、Git 提交。</td></tr><tr><td>A</td><td>Authenticating</td><td>身份验证，如登录。</td></tr><tr><td>E</td><td>Encrypting</td><td>加密，如文件和文本。</td></tr></tbody></table><p>具有 <code>C</code> 的密钥是主密钥，只有这个密钥可以用于：</p><ul><li>添加或撤销子密钥的用途</li><li>添加、更改或撤销密钥关联的身份（UID）</li><li>添加或更改本身或其他子密钥的到期时间</li><li>为了网络信任目的为其它密钥签名<sup id="fnref:7" class="footnote-ref"><a href="#fn:7" rel="footnote"><span class="hint--top hint--rounded" aria-label="Konstantin Ryabitsev. [用 PGP 保护代码完整性（二）：生成你的主密钥](https://linux.cn/article-9529-1.html). Linux 中国. 2018-04-09 [2022-06-06].">[7]</span></a></sup></li></ul><h3 id="用户-ID（User-ID）"><a href="#用户-ID（User-ID）" class="headerlink" title="用户 ID（User ID）"></a>用户 ID（User ID）</h3><p>用户 ID 用于将密钥和真人关联，可以有多个 UID，一般为以下格式：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">Name &lt;name@example.com&gt;<br></code></pre></td></tr></table></figure><p>如果使用多个身份，比如个人邮箱、 GitHub 账号、公司邮箱<sup id="fnref:6" class="footnote-ref"><a href="#fn:6" rel="footnote"><span class="hint--top hint--rounded" aria-label="Konstantin Ryabitsev. [用 PGP 保护代码完整性（一）： 基本概念和工具](https://linux.cn/article-9524-1.html). Linux 中国. 2018-04-08 [2022-06-06].">[6]</span></a></sup>，可以设置为这样：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">Name &lt;name@example.com&gt;<br>Name(GitHub) &lt;name@users.noreply.github.com&gt;<br>Name(Work) &lt;name@work.com&gt;<br></code></pre></td></tr></table></figure><p>需要注意公钥会包含电子邮件地址，注意隐私和垃圾邮件问题。</p><h3 id="密钥-ID（Key-ID）"><a href="#密钥-ID（Key-ID）" class="headerlink" title="密钥 ID（Key ID）"></a>密钥 ID（Key ID）</h3><p>每一个密钥 ID（Key ID）有三种形式，指定密钥的最好方式就是使用指纹，可以最大限度避免重复的 ID：</p><ul><li>指纹：证书的 SHA-1 哈希，20 字节；</li><li>长 ID：指纹的最后 16 位，8 字节；</li><li>短 ID：指纹的最后 8 位，4 字节；</li></ul><h3 id="过期（Expire）和撤销（Revoke）"><a href="#过期（Expire）和撤销（Revoke）" class="headerlink" title="过期（Expire）和撤销（Revoke）"></a>过期（Expire）和撤销（Revoke）</h3><p>GPG 密钥可以设置过期时间，可以是永久有效。很多人会给主密钥设置长期有效，对不同用途的子密钥设置较短的期限。</p><p>GPG 可以发布撤销证书，发布撤销证书后，其他人收到后就知道之前发布的密钥失效了。</p><h2 id="安装-GPG"><a href="#安装-GPG" class="headerlink" title="安装 GPG"></a>安装 GPG</h2><p>如果安装了 <a href="https://git-scm.com/">Git</a>，可直接使用 Git Bash。</p><p>也可以到 <a href="https://www.gnupg.org/download/">官网</a> 下载安装。</p><h2 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">gpg --full-gen-key<br></code></pre></td></tr></table></figure><p>选择加密类型，推荐 RSA 4096。</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs console">Please select what kind of key you want:<br>   (1) RSA and RSA (default)<br>   (2) DSA and Elgamal<br>   (3) DSA (sign only)<br>   (4) RSA (sign only)<br>  (14) Existing key from card<br>Your selection? 1<br>RSA keys may be between 1024 and 4096 bits long.<br>What keysize do you want? (3072) 4096<br>Requested keysize is 4096 bits<br></code></pre></td></tr></table></figure><p>设置过期时间，<code>0</code> 为永久。</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs console">Please specify how long the key should be valid.<br>         0 = key does not expire<br>      &lt;n&gt;  = key expires in n days<br>      &lt;n&gt;w = key expires in n weeks<br>      &lt;n&gt;m = key expires in n months<br>      &lt;n&gt;y = key expires in n years<br>Key is valid for? (0)<br>Key does not expire at all<br>Is this correct? (y/N) y<br></code></pre></td></tr></table></figure><p>根据提示输入姓名和邮箱，<code>Comment</code> 留空即可，然后设置密钥的密码。密码用于对称加密本地存储的私钥，在文件泄露的情况下也能保护你的密钥，在使用 GPG 密钥时经常需要输入密码以验证身份。</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs console">GnuPG needs to construct a user ID to identify your key.<br><br>Real name: Name<br>Email address: name@example.com<br>Comment:<br>You selected this USER-ID:<br>    &quot;Name &lt;name@example.com&gt;&quot;<br><br>Change (N)ame, (C)omment, (E)mail or (O)kay/(Q)uit? o<br></code></pre></td></tr></table></figure><p><img src="https://picture.zhanganzhi.com/2022/06/19/h6k7ui1.png" alt="设置密码"></p><p>同时会自动生成一个用途为 <code>E</code> 的子密钥，生成的密钥将会列出。</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs console">public and secret key created and signed.<br><br>pub   rsa4096 2022-06-06 [SC]<br>      5DE3E0509C47EA3CF04A42D34AEE18F83AFDEB23<br>uid                      Name &lt;name@example.com&gt;<br>sub   rsa4096 2022-06-06 [E]<br></code></pre></td></tr></table></figure><h3 id="生成子密钥"><a href="#生成子密钥" class="headerlink" title="生成子密钥"></a>生成子密钥</h3><p><strong>在日常使用中，应当避免使用主密钥，而是为不同用途使用不同的子密钥。</strong><sup id="fnref:8" class="footnote-ref"><a href="#fn:8" rel="footnote"><span class="hint--top hint--rounded" aria-label="UlyC. [2021年，用更现代的方法使用PGP（上）](https://ulyc.github.io/2021/01/13/2021%E5%B9%B4-%E7%94%A8%E6%9B%B4%E7%8E%B0%E4%BB%A3%E7%9A%84%E6%96%B9%E6%B3%95%E4%BD%BF%E7%94%A8PGP-%E4%B8%8A/). UlyC - C的博客. 2021-01-13 [2022-06-06]. （原始内容[存档](https://web.archive.org/web/20220606133111/https://ulyc.github.io/2021/01/13/2021%E5%B9%B4-%E7%94%A8%E6%9B%B4%E7%8E%B0%E4%BB%A3%E7%9A%84%E6%96%B9%E6%B3%95%E4%BD%BF%E7%94%A8PGP-%E4%B8%8A/)于2022-06-06）">[8]</span></a></sup></p><p>进入密钥的编辑，参数为上一步输出的密钥指纹。加上 <code>--expert</code> 参数以在下一步使用 <a href="https://zh.wikipedia.org/wiki/Curve25519">Curve 25519</a> 算法生成子密钥<sup id="fnref:9" class="footnote-ref"><a href="#fn:9" rel="footnote"><span class="hint--top hint--rounded" aria-label="UlyC. [2021年，用更现代的方法使用PGP（中）](https://ulyc.github.io/2021/01/18/2021%E5%B9%B4-%E7%94%A8%E6%9B%B4%E7%8E%B0%E4%BB%A3%E7%9A%84%E6%96%B9%E6%B3%95%E4%BD%BF%E7%94%A8PGP-%E4%B8%AD/). UlyC - C的博客. 2021-01-18 [2022-06-06]. （原始内容[存档](https://web.archive.org/web/20220606133131/https://ulyc.github.io/2021/01/18/2021%E5%B9%B4-%E7%94%A8%E6%9B%B4%E7%8E%B0%E4%BB%A3%E7%9A%84%E6%96%B9%E6%B3%95%E4%BD%BF%E7%94%A8PGP-%E4%B8%AD/)于2022-06-06）">[9]</span></a></sup>，这是一种安全性介于 RSA 2048 和 RSA 4096 之间的算法，且速度更快。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">gpg --expert --edit-key 5DE3E0509C47EA3CF04A42D34AEE18F83AFDEB23<br></code></pre></td></tr></table></figure><p>使用 <code>addkey</code> 添加子密钥，根据提示选择、输入密码、保存更改。</p><p>注意不同用途的子密钥可能需要选择不同的加密方式。</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">gpg&gt; </span><span class="language-bash">addkey</span><br>Please select what kind of key you want:<br>   (3) DSA (sign only)<br>   (4) RSA (sign only)<br>   (5) Elgamal (encrypt only)<br>   (6) RSA (encrypt only)<br>   (7) DSA (set your own capabilities)<br>   (8) RSA (set your own capabilities)<br>  (10) ECC (sign only)<br>  (11) ECC (set your own capabilities)<br>  (12) ECC (encrypt only)<br>  (13) Existing key<br>  (14) Existing key from card<br>Your selection? 10<br>Please select which elliptic curve you want:<br>   (1) Curve 25519<br>   (3) NIST P-256<br>   (4) NIST P-384<br>   (5) NIST P-521<br>   (6) Brainpool P-256<br>   (7) Brainpool P-384<br>   (8) Brainpool P-512<br>   (9) secp256k1<br>Your selection? 1<br>Please specify how long the key should be valid.<br>         0 = key does not expire<br>      &lt;n&gt;  = key expires in n days<br>      &lt;n&gt;w = key expires in n weeks<br>      &lt;n&gt;m = key expires in n months<br>      &lt;n&gt;y = key expires in n years<br>Key is valid for? (0)<br>Key does not expire at all<br>Is this correct? (y/N) y<br>Really create? (y/N) y<br></code></pre></td></tr></table></figure><p>在弹出的对话框输入密码。生成完成后保存。</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">gpg&gt; </span><span class="language-bash">save</span><br></code></pre></td></tr></table></figure><h3 id="撤销证书"><a href="#撤销证书" class="headerlink" title="撤销证书"></a>撤销证书</h3><p>默认情况下生成密钥后会在用户文件夹内的 <code>.gnupg\openpgp-revocs.d</code> 生成一份撤销证书，也可以使用 <code>gpg --output revoke.asc --gen-revoke mykey</code> 生成一份。</p><h2 id="管理密钥"><a href="#管理密钥" class="headerlink" title="管理密钥"></a>管理密钥</h2><h3 id="列出密钥"><a href="#列出密钥" class="headerlink" title="列出密钥"></a>列出密钥</h3><p>使用 <code>gpg --list-keys</code> 即可列出本地所有公钥和子公钥，还有一个简便写法：<code>gpg -k</code>。</p><p>私钥类似，<code>gpg --list-secret-keys</code> 和 <code>gpg -K</code>。</p><hr><p>我们在本地使用时，长 ID 和短 ID 更方便，使用 <code>--keyid-format &#123;none|short|0xshort|long|0xlong&#125;</code> 即可输出长 ID 或短 ID：</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">gpg -k --keyid-format short</span><br>~/.gnupg/pubring.kbx<br>---------------------------------<br>pub   rsa2048/3AFDEB23 2017-08-16 [SC]<br>      5DE3E0509C47EA3CF04A42D34AEE18F83AFDEB23<br>uid         [ultimate] GitHub (web-flow commit signing) &lt;noreply@github.com&gt;<br></code></pre></td></tr></table></figure><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">gpg -k --keyid-format long</span><br>~/.gnupg/pubring.kbx<br>---------------------------------<br>pub   rsa2048/4AEE18F83AFDEB23 2017-08-16 [SC]<br>      5DE3E0509C47EA3CF04A42D34AEE18F83AFDEB23<br>uid                 [ultimate] GitHub (web-flow commit signing) &lt;noreply@github.com&gt;<br></code></pre></td></tr></table></figure><p>默认情况下会输出连续的 20 字节指纹，例如 <code>5DE3E0509C47EA3CF04A42D34AEE18F83AFDEB23</code>。使用 <code>--fingerprint</code> 参数可输出有空格分隔的指纹，例如 <code>5DE3 E050 9C47 EA3C F04A  42D3 4AEE 18F8 3AFD EB23</code>。</p><p>以上两个参数可以在配置文件 <code>~/.gnupg/gpg.conf</code> 中添加以避免重复输入，文件需要手动创建。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">keyid-format long<br>fingerprint<br></code></pre></td></tr></table></figure><h3 id="导入和导出"><a href="#导入和导出" class="headerlink" title="导入和导出"></a>导入和导出</h3><p>使用 <code>gpg --import key.gpg</code> 导入密钥，后面会提到导入 GitHub 的公钥。</p><hr><p>通过以下命令查看使用 ASCII-armored 格式的公钥：</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">gpg --<span class="hljs-built_in">export</span> --armor 4AEE18F83AFDEB23</span><br>-----BEGIN PGP PUBLIC KEY BLOCK-----<br>[...]<br>-----END PGP PUBLIC KEY BLOCK-----<br></code></pre></td></tr></table></figure><p>增加 <code>--output</code> 参数以导出到文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">gpg --armor --output public-key.gpg --<span class="hljs-built_in">export</span> 4AEE18F83AFDEB23<br></code></pre></td></tr></table></figure><p>导出私钥，需要输入密码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">gpg --armor --output private-key.gpg --export-secret-keys 4AEE18F83AFDEB23<br></code></pre></td></tr></table></figure><p>建议将导出的公私钥和撤销证书做好备份。</p><h3 id="修改用户-ID（UID）"><a href="#修改用户-ID（UID）" class="headerlink" title="修改用户 ID（UID）"></a>修改用户 ID（UID）</h3><p>进入编辑密钥，然后修改 UID，可以添加、设置主 UID、撤销和删除。</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">gpg --edit-key 4AEE18F83AFDEB23</span><br><span class="hljs-meta prompt_">gpg&gt; </span><span class="language-bash">adduid</span><br>Real name: Name(Work)<br>Email address: name@work.com<br>Comment:<br>You selected this USER-ID:<br>    &quot;Name(Work) &lt;name@work.com&gt;&quot;<br><br>Change (N)ame, (C)omment, (E)mail or (O)kay/(Q)uit? o<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">gpg&gt; </span><span class="language-bash">uid 1</span><br>[ultimate] (1)* Name &lt;name@example.com&gt;<br>[ unknown] (2). Name(Work) &lt;name@work.com&gt;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">gpg&gt; </span><span class="language-bash">primary</span><br>[ultimate] (1)* Name &lt;name@example.com&gt;<br>[ unknown] (2)  Name(Work) &lt;name@work.com&gt;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">gpg&gt; </span><span class="language-bash">uid 1</span><br>[ultimate] (1). Name &lt;name@example.com&gt;<br>[ unknown] (2)  Name(Work) &lt;name@work.com&gt;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">gpg&gt; </span><span class="language-bash">uid 2</span><br>[ultimate] (1). Name &lt;name@example.com&gt;<br>[ unknown] (2)* Name(Work) &lt;name@work.com&gt;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">gpg&gt; </span><span class="language-bash">revuid</span><br>[ultimate] (1). Name &lt;name@example.com&gt;<br>[ revoked] (2)  Name(Work) &lt;name@work.com&gt;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">gpg&gt; </span><span class="language-bash">uid 2</span><br>[ultimate] (1). Name &lt;name@example.com&gt;<br>[ revoked] (2)* Name(Work) &lt;name@work.com&gt;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">gpg&gt; </span><span class="language-bash">deluid</span><br>[ultimate] (1). Name &lt;name@example.com&gt;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">gpg&gt; </span><span class="language-bash">save</span><br></code></pre></td></tr></table></figure><h2 id="Git-amp-GitHub-使用"><a href="#Git-amp-GitHub-使用" class="headerlink" title="Git &amp; GitHub 使用"></a>Git &amp; GitHub 使用</h2><p>Git 提交可以使用 GPG 密钥签名，增加 <code>--show-signature</code> 参数即可显示提交的签名信息。</p><p>未信任的公钥签名的提交显示红色提示。</p><p><img src="https://picture.zhanganzhi.com/2022/06/19/txzi1fd.png" alt="未信任公钥的签名"></p><p>已信任的公钥签名的提交显示青色提示。</p><p><img src="https://picture.zhanganzhi.com/2022/06/19/dje94dq.png" alt="已信任公钥的签名"></p><h3 id="Git-设置"><a href="#Git-设置" class="headerlink" title="Git 设置"></a>Git 设置</h3><p>密钥的 UID 需要包括 Git 使用的邮箱。</p><p>首先告诉 Git 使用的密钥。<sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><span class="hint--top hint--rounded" aria-label="[Telling Git about your signing key](https://docs.github.com/en/authentication/managing-commit-signature-verification/telling-git-about-your-signing-key). GitHub Docs. [2022-06-06]. （原始内容[存档](https://web.archive.org/web/20220529202622/https://docs.github.com/en/authentication/managing-commit-signature-verification/telling-git-about-your-signing-key)于2022-05-29）">[3]</span></a></sup></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.signingkey 4AEE18F83AFDEB23<br></code></pre></td></tr></table></figure><p>然后设置提交时使用 GPG 签名。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global commit.gpgsign <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><h3 id="信任-GitHub-公钥"><a href="#信任-GitHub-公钥" class="headerlink" title="信任 GitHub 公钥"></a>信任 GitHub 公钥</h3><p>使用以下命令导入并信任 GitHub 的公钥。<sup id="fnref:11" class="footnote-ref"><a href="#fn:11" rel="footnote"><span class="hint--top hint--rounded" aria-label="VonC. [What is GitHub's public GPG key?](https://stackoverflow.com/questions/60482588/what-is-githubs-public-gpg-key). Stack Overflow. 2022-03-02 [2022-06-06]. （原始内容[存档](https://web.archive.org/web/20211123035710/https://stackoverflow.com/questions/60482588/what-is-githubs-public-gpg-key)于2021-11-23）">[11]</span></a></sup></p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">curl https://github.com/web-flow.gpg | gpg --import</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">gpg --edit-key noreply@github.com</span><br><span class="hljs-meta prompt_">gpg&gt; </span><span class="language-bash">trust</span><br><span class="hljs-meta prompt_">gpg&gt; </span><span class="language-bash">save</span><br></code></pre></td></tr></table></figure><h3 id="上传公钥到-GitHub"><a href="#上传公钥到-GitHub" class="headerlink" title="上传公钥到 GitHub"></a>上传公钥到 GitHub</h3><p>打开 GitHub 设置，找到 <code>SSH and GPG Keys</code>。<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="[Adding a new GPG key to your GitHub account](https://docs.github.com/en/authentication/managing-commit-signature-verification/adding-a-new-gpg-key-to-your-github-account). GitHub Docs. [2022-06-06]. （原始内容[存档](https://web.archive.org/web/20220531040934/https://docs.github.com/en/authentication/managing-commit-signature-verification/adding-a-new-gpg-key-to-your-github-account)于2022-05-31）">[2]</span></a></sup></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/c6mmdq9.png" alt="GitHub 设置"></p><p>点击 <code>New GPG Key</code>，把导出的公钥复制进去。</p><p><img src="https://picture.zhanganzhi.com/2022/06/19/98vpfaj.png" alt="新建 GPG 密钥"></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/eiq03eb.png" alt="填写并保存"></p><p>此时签名的提交在 GitHub 即可显示绿色的 <code>Verified</code>。</p><section class="footnotes"><h2 id="参考文献">参考文献</h2><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://docs.github.com/en/authentication/managing-commit-signature-verification/about-commit-signature-verification">About commit signature verification</a>. GitHub Docs. [2022-06-06]. （原始内容<a href="https://web.archive.org/web/20220606095245/https://docs.github.com/en/authentication/managing-commit-signature-verification/about-commit-signature-verification">存档</a>于2022-06-06）<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://docs.github.com/en/authentication/managing-commit-signature-verification/adding-a-new-gpg-key-to-your-github-account">Adding a new GPG key to your GitHub account</a>. GitHub Docs. [2022-06-06]. （原始内容<a href="https://web.archive.org/web/20220531040934/https://docs.github.com/en/authentication/managing-commit-signature-verification/adding-a-new-gpg-key-to-your-github-account">存档</a>于2022-05-31）<a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="https://docs.github.com/en/authentication/managing-commit-signature-verification/telling-git-about-your-signing-key">Telling Git about your signing key</a>. GitHub Docs. [2022-06-06]. （原始内容<a href="https://web.archive.org/web/20220529202622/https://docs.github.com/en/authentication/managing-commit-signature-verification/telling-git-about-your-signing-key">存档</a>于2022-05-29）<a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:4" class="footnote-text"><span>阮一峰. <a href="https://www.ruanyifeng.com/blog/2013/07/gpg.html">GPG入门教程</a>. 阮一峰的网络日志. 2013-07-12 [2022-06-06]. （原始内容<a href="https://web.archive.org/web/20220601090505/https://www.ruanyifeng.com/blog/2013/07/gpg.html">存档</a>于2022-06-01）<a href="#fnref:4" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:5" class="footnote-text"><span>嗯了个踢. <a href="https://zhuanlan.zhihu.com/p/137801979">简明 GPG 概念</a>. 知乎. 2020-05-02 [2022-06-06]. （原始内容<a href="https://web.archive.org/save/https://zhuanlan.zhihu.com/p/137801979">存档</a>于2022-06-06）<a href="#fnref:5" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:6" class="footnote-text"><span>Konstantin Ryabitsev. <a href="https://linux.cn/article-9524-1.html">用 PGP 保护代码完整性（一）： 基本概念和工具</a>. Linux 中国. 2018-04-08 [2022-06-06].<a href="#fnref:6" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:7" class="footnote-text"><span>Konstantin Ryabitsev. <a href="https://linux.cn/article-9529-1.html">用 PGP 保护代码完整性（二）：生成你的主密钥</a>. Linux 中国. 2018-04-09 [2022-06-06].<a href="#fnref:7" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:8" class="footnote-text"><span>UlyC. <a href="https://ulyc.github.io/2021/01/13/2021%E5%B9%B4-%E7%94%A8%E6%9B%B4%E7%8E%B0%E4%BB%A3%E7%9A%84%E6%96%B9%E6%B3%95%E4%BD%BF%E7%94%A8PGP-%E4%B8%8A/">2021年，用更现代的方法使用PGP（上）</a>. UlyC - C的博客. 2021-01-13 [2022-06-06]. （原始内容<a href="https://web.archive.org/web/20220606133111/https://ulyc.github.io/2021/01/13/2021%E5%B9%B4-%E7%94%A8%E6%9B%B4%E7%8E%B0%E4%BB%A3%E7%9A%84%E6%96%B9%E6%B3%95%E4%BD%BF%E7%94%A8PGP-%E4%B8%8A/">存档</a>于2022-06-06）<a href="#fnref:8" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:9" class="footnote-text"><span>UlyC. <a href="https://ulyc.github.io/2021/01/18/2021%E5%B9%B4-%E7%94%A8%E6%9B%B4%E7%8E%B0%E4%BB%A3%E7%9A%84%E6%96%B9%E6%B3%95%E4%BD%BF%E7%94%A8PGP-%E4%B8%AD/">2021年，用更现代的方法使用PGP（中）</a>. UlyC - C的博客. 2021-01-18 [2022-06-06]. （原始内容<a href="https://web.archive.org/web/20220606133131/https://ulyc.github.io/2021/01/18/2021%E5%B9%B4-%E7%94%A8%E6%9B%B4%E7%8E%B0%E4%BB%A3%E7%9A%84%E6%96%B9%E6%B3%95%E4%BD%BF%E7%94%A8PGP-%E4%B8%AD/">存档</a>于2022-06-06）<a href="#fnref:9" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:10" class="footnote-text"><span>UlyC. <a href="https://ulyc.github.io/2021/01/26/2021%E5%B9%B4-%E7%94%A8%E6%9B%B4%E7%8E%B0%E4%BB%A3%E7%9A%84%E6%96%B9%E6%B3%95%E4%BD%BF%E7%94%A8PGP-%E4%B8%8B/">2021年，用更现代的方法使用PGP（下）</a>. UlyC - C的博客. 2021-01-26 [2022-06-06]. （原始内容<a href="https://web.archive.org/web/20220606170227/https://ulyc.github.io/2021/01/26/2021%E5%B9%B4-%E7%94%A8%E6%9B%B4%E7%8E%B0%E4%BB%A3%E7%9A%84%E6%96%B9%E6%B3%95%E4%BD%BF%E7%94%A8PGP-%E4%B8%8B/">存档</a>于2022-06-06）<a href="#fnref:10" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:11" class="footnote-text"><span>VonC. <a href="https://stackoverflow.com/questions/60482588/what-is-githubs-public-gpg-key">What is GitHub’s public GPG key?</a>. Stack Overflow. 2022-03-02 [2022-06-06]. （原始内容<a href="https://web.archive.org/web/20211123035710/https://stackoverflow.com/questions/60482588/what-is-githubs-public-gpg-key">存档</a>于2021-11-23）<a href="#fnref:11" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>GitHub</tag>
      
      <tag>计算机</tag>
      
      <tag>密码学</tag>
      
      <tag>GPG</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Minecraft Forge Mod 开发环境搭建</title>
    <link href="/zh-CN/2022/06/226b86b1999a/"/>
    <url>/zh-CN/2022/06/226b86b1999a/</url>
    
    <content type="html"><![CDATA[<p>本文参考了 <a href="https://boson.v2mcdev.com/introducation/intro.html">Boson 1.16 Modding Tutorial</a> 的 <code>环境配置</code><sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="[环境配置](https://boson.v2mcdev.com/devenvironment/intro.html). Boson 1.16 Modding Tutorial. [2022-06-04].">[1]</span></a></sup> 部分。</p><h2 id="准备工具"><a href="#准备工具" class="headerlink" title="准备工具"></a>准备工具</h2><ul><li>IDE：<a href="https://www.jetbrains.com/zh-cn/idea/">IntelliJ IDEA</a></li><li>Java开发环境：<a href="https://www.oracle.com/java/technologies/javase/javase8u211-later-archive-downloads.html#:~:text=Java%20SE%20Development%20Kit%208u311">JDK 8u311</a></li><li>安装示例插件：<a href="https://files.minecraftforge.net/net/minecraftforge/forge/">Forge MDK</a></li></ul><p><img src="https://picture.zhanganzhi.com/2022/06/19/hh9z1s5.png" alt="MDK下载"></p><h2 id="导入项目"><a href="#导入项目" class="headerlink" title="导入项目"></a>导入项目</h2><p>解压下载的压缩文件，使用 IDEA 打开文件夹，等待项目导入完成。</p><p><img src="https://picture.zhanganzhi.com/2022/06/19/575ptqi.png" alt="项目导入完成"></p><p>打开 <code>Settings</code> -&gt; <code>Build, Execution, Deployment</code> -&gt; <code>Build Tools</code> -&gt; <code>Gradle</code>，将 <code>Build and run using</code> 设置为 <code>IntelliJ IDEA</code> 以加快运行速度</p><p><img src="https://picture.zhanganzhi.com/2022/06/19/zmdjmu9.png" alt="Gradle 设置"></p><p>建议将 <code>build.gradle</code> 中的所有 <code>property &#39;forge.logging.console.level&#39;, &#39;debug&#39;</code> 改为 <code>property &#39;forge.logging.console.level&#39;, &#39;info&#39;</code> 以减少日志输出。</p><p>打开右侧的 <code>Gradle</code> 面板，运行 <code>genIntellijRuns</code>。</p><p><img src="https://picture.zhanganzhi.com/2022/06/19/kmxtmtj.png" alt="生成 IDEA 运行配置"></p><p>在右上角选择 <code>runClient</code>，使用 run 或 debug 启动 Minecraft。</p><p><img src="https://picture.zhanganzhi.com/2022/06/19/iyiwnkf.png" alt="点击运行客户端"></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/pt49mui.png" alt="成功运行客户端"></p><h3 id="项目文件结构简介"><a href="#项目文件结构简介" class="headerlink" title="项目文件结构简介"></a>项目文件结构简介</h3><table><thead><tr><th>文件或文件夹</th><th>简介</th></tr></thead><tbody><tr><td>build.gradle</td><td>Gradle 配置文件，大部分项目配置都在这里。</td></tr><tr><td>build 和 out</td><td>编译目录，打包的 jar 文件在 <code>build/libs</code> 中。</td></tr><tr><td>run</td><td>MC 根目录，可以在此处查看日志等信息。</td></tr><tr><td>src</td><td>资源文件和源码目录。</td></tr></tbody></table><h2 id="配置模组信息"><a href="#配置模组信息" class="headerlink" title="配置模组信息"></a>配置模组信息</h2><h3 id="build-gradle"><a href="#build-gradle" class="headerlink" title="build.gradle"></a>build.gradle</h3><p>打开 <code>build.gradle</code>，找到 <code>version</code>、<code>group</code> 和 <code>archiveBaseName</code>。</p><p><img src="https://picture.zhanganzhi.com/2022/06/19/hfsxkze.png" alt="默认的配置"></p><ul><li><code>version</code> 是版本号，一般遵循 Forge的 <a href="https://mcforge.readthedocs.io/en/latest/gettingstarted/versioning/">语义化版本</a>，改为 <code>1.16.5-0.0.1.0</code>。</li><li><code>group</code> 是包名，一般为域名，这里配置为 <code>com.example</code>。</li><li><code>archiveBaseName</code> 是打包的文件的基础名，打包的文件名格式为 <code>&lt;archivesBaseName&gt;-&lt;version&gt;.jar</code>。修改完成后点击右上角的 <code>Load Gradle Changes</code>。</li></ul><p><img src="https://picture.zhanganzhi.com/2022/06/19/lemo4gi.png" alt="修改后的配置"><br><img src="https://picture.zhanganzhi.com/2022/06/19/l2fu0mi.png" alt="点击加载新配置"></p><h3 id="mods-toml"><a href="#mods-toml" class="headerlink" title="mods.toml"></a>mods.toml</h3><p>这部分内容可以在游戏内的模组列表看到效果。打开 <code>src/main/resources/META-INF/mods.toml</code>，注释说明得很全面，也可以参考下表<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="[Structuring Your Mod](https://mcforge.readthedocs.io/en/latest/gettingstarted/structuring/). Forge Documentation. [2022-06-04]. （原始内容[存档](https://web.archive.org/web/20220605133857/https://mcforge.readthedocs.io/en/latest/gettingstarted/structuring/)于2022-06-05）.">[2]</span></a></sup>：</p><table><thead><tr><th>属性</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>license</td><td>string</td><td>许可证名称。</td></tr><tr><td>modid</td><td>string</td><td>modid。</td></tr><tr><td>version</td><td>string</td><td>模组版本，必须是点分隔的数字，最好符合 Forge 的 <a href="https://mcforge.readthedocs.io/en/latest/gettingstarted/versioning/">语义化版本</a> 结构。</td></tr><tr><td>displayName</td><td>string</td><td>模组显示的名称。</td></tr><tr><td>updateJSONURL</td><td>string</td><td><a href="https://mcforge.readthedocs.io/en/latest/misc/updatechecker/">版本 JSON 文件</a> 的 URL。</td></tr><tr><td>displayURL</td><td>string</td><td>模组主页的URL。</td></tr><tr><td>logoFile</td><td>string</td><td>logo 文件名，必须位于 resources 文件夹内。</td></tr><tr><td>credits</td><td>string</td><td>鸣谢。</td></tr><tr><td>authors</td><td>string</td><td>模组作者。</td></tr><tr><td>description</td><td>string</td><td>模组描述，可以是多行。</td></tr><tr><td>dependencies</td><td>[list]</td><td>模组依赖列表。</td></tr></tbody></table><h3 id="模组主类"><a href="#模组主类" class="headerlink" title="模组主类"></a>模组主类</h3><p>删除 <code>src/main/java</code> 内的全部文件，按 <code>group</code> 和 <code>modid</code>，自己新建一个包和类，这个类就是模组的入口，内容如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.examplemod;<br><br><span class="hljs-keyword">import</span> net.minecraftforge.fml.common.Mod;<br><br><span class="hljs-meta">@Mod(&quot;examplemod&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ExampleMod</span> &#123;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="pack-mcmeta"><a href="#pack-mcmeta" class="headerlink" title="pack.mcmeta"></a>pack.mcmeta</h3><p>数据包描述，可以修改 <code>description</code>。</p><p><img src="https://picture.zhanganzhi.com/2022/06/19/f9kf0y9.png" alt="选择数据包的界面"></p><h2 id="其它模组"><a href="#其它模组" class="headerlink" title="其它模组"></a>其它模组</h2><h3 id="依赖项"><a href="#依赖项" class="headerlink" title="依赖项"></a>依赖项</h3><p>如果想将某个模组设置为依赖项，需要在 <code>mods.toml</code> 中配置，每一个依赖项的格式必须为 <code>[[dependencies.modid]]</code>，参考下表<sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><span class="hint--top hint--rounded" aria-label="[Mods.toml](https://forge.gemwire.uk/wiki/Mods.toml#:~:text=http%3A//example.com/%22-,Dependency%20Configurations,-Mods%20can%20define). Forge Community Wiki. 2022-03-22 [2022-06-04]. （原始内容[存档](https://web.archive.org/web/20220605134745/https://forge.gemwire.uk/wiki/Mods.toml#:~:text=http%3A//example.com/%22-,Dependency%20Configurations,-Mods%20can%20define)于2022-06-05）.">[3]</span></a></sup>：</p><table><thead><tr><th>属性</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>modId</td><td>string</td><td>依赖项的模组 ID。</td></tr><tr><td>mandatory</td><td>boolean</td><td>依赖项未满足时是否崩溃。</td></tr><tr><td>versionRange</td><td>string</td><td>可接受的依赖项版本，以 <a href="https://maven.apache.org/enforcer/enforcer-rules/versionRanges.html">Maven version spec</a> 表示。空字符串为无边界版本范围，即匹配任意版本。</td></tr><tr><td>ordering</td><td>string</td><td>定义模组是否必须在此依赖项之前或之后加载。有效值为 <code>BEFORE</code>（必须在之前加载）、<code>AFTER</code>（必须在之后加载）和 <code>NONE</code>（不关心顺序）。</td></tr><tr><td>side</td><td>string</td><td>有效值为 <code>CLIENT</code>（存在于客户端）、<code>SERVER</code>（存在于专用服务器）和 <code>BOTH</code>（存在于两侧）。</td></tr></tbody></table><p>尽管空字符串的 <code>versionRange</code> 可以匹配任意版本，但是建议使用 <code>[0,)</code> 匹配。</p><h3 id="加载模组"><a href="#加载模组" class="headerlink" title="加载模组"></a>加载模组</h3><p>如果想加载其它模组，不可以直接放在 <code>/run/mods</code> 中加载，需要配置 <code>build.gradle</code>。<sup id="fnref:4" class="footnote-ref"><a href="#fn:4" rel="footnote"><span class="hint--top hint--rounded" aria-label="[Dependencies](https://forge.gemwire.uk/wiki/Dependencies). Forge Community Wiki. 2021-08-02 [2022-06-04]. （原始内容[存档](https://web.archive.org/web/20220605135343/https://forge.gemwire.uk/wiki/Dependencies)于2022-06-05）.">[4]</span></a></sup></p><p>大部分模组都会提供配置信息，比如 JEI<sup id="fnref:5" class="footnote-ref"><a href="#fn:5" rel="footnote"><span class="hint--top hint--rounded" aria-label="[Getting Started [1.13 and Up]](https://github.com/mezz/JustEnoughItems/wiki/Getting-Started-%5B1.13-and-Up%5D). mezz/JustEnoughItems Wiki. 2021-11-30 [2022-06-05]. （原始内容[存档](https://web.archive.org/web/20220605140318/https://github.com/mezz/JustEnoughItems/wiki/Getting-Started-%5B1.13-and-Up%5D)于2022-06-05）.">[5]</span></a></sup>，配置 <code>build.gradle</code> 即可正确加载：</p><p><img src="https://picture.zhanganzhi.com/2022/06/19/ei54p06.png" alt="JEI 提供的配置"></p><p>也有部分模组不提供，可以使用以下两种方式。</p><h4 id="本地文件"><a href="#本地文件" class="headerlink" title="本地文件"></a>本地文件</h4><p>在项目根目录创建一个 <code>lib</code> 文件夹，将下载的模组文件放入该文件夹。</p><p>在 <code>build.gradle</code> 中添加以下配置：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">repositories</span> &#123;<br>    <span class="hljs-keyword">flatDir</span> &#123;<br>        dirs <span class="hljs-string">&#x27;lib&#x27;</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><code>depdependencies</code> 的格式如下：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle">runtimeOnly fg.deobf(<span class="hljs-string">&quot;&lt;group&gt;:&lt;artifact&gt;:&lt;version&gt;&quot;</span>)<br></code></pre></td></tr></table></figure><p>以 JEI 为例，下载 <code>jei-1.16.5-7.7.1.152.jar</code>，放入 <code>lib</code> 文件夹，配置如下：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle">runtimeOnly fg.deobf(<span class="hljs-string">&quot;mezz.jei:jei:1.16.5-7.7.1.152&quot;</span>)<br></code></pre></td></tr></table></figure><p>注：group 不影响本地文件加载，可以随意填写。</p><h4 id="Curse-Maven"><a href="#Curse-Maven" class="headerlink" title="Curse Maven"></a><a href="https://www.cursemaven.com/">Curse Maven</a></h4><p>本地文件的方式并不方便，需要手动下载模组，对多人合作也不友好，<a href="https://www.cursemaven.com/">Curse Maven</a> 支持所有上传到 <a href="https://www.curseforge.com/">Curse Forge</a> 的模组，在 <code>build.gradle</code> 中添加以下配置：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">repositories</span> &#123;<br>    maven &#123;<br>        url <span class="hljs-string">&quot;https://cursemaven.com&quot;</span><br>        content &#123;<br>            includeGroup <span class="hljs-string">&quot;curse.maven&quot;</span><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><code>depdependencies</code> 的格式如下：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle">runtimeOnly fg.deobf(<span class="hljs-string">&quot;curse.maven:&lt;descriptor&gt;-&lt;projectid&gt;:&lt;fileids&gt;&quot;</span>)<br></code></pre></td></tr></table></figure><p><img src="https://picture.zhanganzhi.com/2022/06/19/n6j3daq.png" alt="&amp;ltdescriptor&gt; 可以为任意内容，这会显示在下载的文件名汇总，最好设置为模组的名称，如项目名"></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/8bjqnnp.png" alt="&amp;ltprojectid&gt; 项目ID"></p><p><img src="https://picture.zhanganzhi.com/2022/06/19/c07tjwl.png" alt="&amp;ltfileids&gt; 文件ID"></p><p>以 <a href="https://www.curseforge.com/minecraft/mc-mods/jei/files/3681294">JEI 1.16.5-7.7.1.152</a> 为例，配置如下：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle">runtimeOnly fg.deobf(<span class="hljs-string">&quot;curse.maven:jei-238222:3681294&quot;</span>)<br></code></pre></td></tr></table></figure><h2 id="GitHub-Actions-配置（可选）"><a href="#GitHub-Actions-配置（可选）" class="headerlink" title="GitHub Actions 配置（可选）"></a>GitHub Actions 配置（可选）</h2><p>通过配置 GitHub Actions，可以实现发布 Release 和 PR 自动打包。</p><p>首先修改 <code>build.gradle</code>，将 <code>version</code> 部分改为以下内容：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">if</span> (<span class="hljs-keyword">project</span>.hasProperty(<span class="hljs-string">&#x27;inputVersion&#x27;</span>)) &#123;<br>    version = <span class="hljs-keyword">project</span>.inputVersion<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    version = <span class="hljs-string">&#x27;1.16.5-0.0.1.0&#x27;</span><br>&#125;<br></code></pre></td></tr></table></figure><p>创建 <code>.github/workflows</code> 文件夹，创建两个 <code>yml</code> 文件，注意修改 <code>&lt;modname&gt;</code>。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">name:</span> <span class="hljs-string">Release</span> <span class="hljs-string">Packer</span><br><span class="hljs-attr">on:</span><br>  <span class="hljs-attr">workflow_dispatch:</span><br>    <span class="hljs-attr">inputs:</span><br>      <span class="hljs-attr">version:</span><br>        <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;Release Version&#x27;</span><br>        <span class="hljs-attr">required:</span> <span class="hljs-literal">true</span><br>        <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>      <span class="hljs-attr">pre_release:</span><br>        <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;This is a pre-release&#x27;</span><br>        <span class="hljs-attr">required:</span> <span class="hljs-literal">true</span><br>        <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>        <span class="hljs-attr">default:</span> <span class="hljs-literal">false</span><br><br><span class="hljs-attr">env:</span><br>  <span class="hljs-attr">NAME:</span> <span class="hljs-string">&lt;modname&gt;-$&#123;&#123;</span> <span class="hljs-string">github.event.inputs.version</span> <span class="hljs-string">&#125;&#125;</span><br><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">pack:</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">Pack</span><br><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Check</span> <span class="hljs-string">Out</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v3</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Setup</span> <span class="hljs-string">Java</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/setup-java@v3</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">java-version:</span> <span class="hljs-string">&#x27;8&#x27;</span><br>          <span class="hljs-attr">distribution:</span> <span class="hljs-string">&#x27;adopt&#x27;</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Chmod</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">chmod</span> <span class="hljs-string">+x</span> <span class="hljs-string">./gradlew</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Pack</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">./gradlew</span> <span class="hljs-string">jar</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Create</span> <span class="hljs-string">Release</span><br>        <span class="hljs-attr">id:</span> <span class="hljs-string">create_release</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/create-release@v1</span><br>        <span class="hljs-attr">env:</span><br>          <span class="hljs-attr">GITHUB_TOKEN:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.GITHUB_TOKEN</span> <span class="hljs-string">&#125;&#125;</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">tag_name:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">github.event.inputs.version</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">release_name:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">env.NAME</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">draft:</span> <span class="hljs-literal">false</span><br>          <span class="hljs-attr">prerelease:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">github.event.inputs.pre_release</span> <span class="hljs-string">&#125;&#125;</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Upload</span> <span class="hljs-string">Release</span> <span class="hljs-string">Asset</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/upload-release-asset@v1</span><br>        <span class="hljs-attr">env:</span><br>          <span class="hljs-attr">GITHUB_TOKEN:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.GITHUB_TOKEN</span> <span class="hljs-string">&#125;&#125;</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">upload_url:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">steps.create_release.outputs.upload_url</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">asset_path:</span> <span class="hljs-string">build/libs/$&#123;&#123;</span> <span class="hljs-string">env.NAME</span> <span class="hljs-string">&#125;&#125;.jar</span><br>          <span class="hljs-attr">asset_name:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">env.NAME</span> <span class="hljs-string">&#125;&#125;.jar</span><br>          <span class="hljs-attr">asset_content_type:</span> <span class="hljs-string">application/java-archive</span><br></code></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">name:</span> <span class="hljs-string">PR</span> <span class="hljs-string">Packer</span><br><span class="hljs-attr">on:</span> <span class="hljs-string">pull_request_target</span><br><br><span class="hljs-attr">env:</span><br>  <span class="hljs-attr">NAME:</span> <span class="hljs-string">&quot;&lt;modname&gt;-#$<span class="hljs-template-variable">&#123;&#123; github.event.number &#125;&#125;</span>&quot;</span><br><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">pack:</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">Pack</span><br><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Check</span> <span class="hljs-string">Out</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v3</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">ref:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">github.event.pull_request.head.sha</span> <span class="hljs-string">&#125;&#125;</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Setup</span> <span class="hljs-string">Java</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/setup-java@v3</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">java-version:</span> <span class="hljs-string">&#x27;8&#x27;</span><br>          <span class="hljs-attr">distribution:</span> <span class="hljs-string">&#x27;adopt&#x27;</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Chmod</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">chmod</span> <span class="hljs-string">+x</span> <span class="hljs-string">./gradlew</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Pack</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">&quot;./gradlew -PinputVersion=#$<span class="hljs-template-variable">&#123;&#123; github.event.number &#125;&#125;</span> jar&quot;</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Upload</span> <span class="hljs-string">Artifact</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/upload-artifact@v3</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">name:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">env.NAME</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">path:</span> <span class="hljs-string">build/libs/$&#123;&#123;</span> <span class="hljs-string">env.NAME</span> <span class="hljs-string">&#125;&#125;.jar</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Find</span> <span class="hljs-string">Comment</span><br>        <span class="hljs-attr">id:</span> <span class="hljs-string">find_comment</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">peter-evans/find-comment@v2</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">issue-number:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">github.event.number</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">comment-author:</span> <span class="hljs-string">github-actions[bot]</span><br>          <span class="hljs-attr">direction:</span> <span class="hljs-string">first</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Create</span> <span class="hljs-string">Comment</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">peter-evans/create-or-update-comment@v2</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">issue-number:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">github.event.number</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">body:</span> <span class="hljs-string">在</span> [<span class="hljs-string">这里</span>]<span class="hljs-string">(../actions/runs/$&#123;&#123;</span> <span class="hljs-string">github.run_id</span> <span class="hljs-string">&#125;&#125;)</span> <span class="hljs-string">下载此</span> <span class="hljs-string">PR</span> <span class="hljs-string">的最新打包。</span><br>        <span class="hljs-attr">if:</span> <span class="hljs-string">steps.find_comment.outputs.comment-id</span> <span class="hljs-string">==</span> <span class="hljs-number">0</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Update</span> <span class="hljs-string">Comment</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">peter-evans/create-or-update-comment@v2</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">comment-id:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">steps.find_comment.outputs.comment-id</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">body:</span> <span class="hljs-string">在</span> [<span class="hljs-string">这里</span>]<span class="hljs-string">(../actions/runs/$&#123;&#123;</span> <span class="hljs-string">github.run_id</span> <span class="hljs-string">&#125;&#125;)</span> <span class="hljs-string">下载此</span> <span class="hljs-string">PR</span> <span class="hljs-string">的最新打包。</span><br>          <span class="hljs-attr">edit-mode:</span> <span class="hljs-string">replace</span><br>        <span class="hljs-attr">if:</span> <span class="hljs-string">steps.find_comment.outputs.comment-id</span> <span class="hljs-type">!=</span> <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><section class="footnotes"><h2 id="参考文献">参考文献</h2><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://boson.v2mcdev.com/devenvironment/intro.html">环境配置</a>. Boson 1.16 Modding Tutorial. [2022-06-04].<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://mcforge.readthedocs.io/en/latest/gettingstarted/structuring/">Structuring Your Mod</a>. Forge Documentation. [2022-06-04]. （原始内容<a href="https://web.archive.org/web/20220605133857/https://mcforge.readthedocs.io/en/latest/gettingstarted/structuring/">存档</a>于2022-06-05）.<a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="https://forge.gemwire.uk/wiki/Mods.toml#:~:text=http%3A//example.com/%22-,Dependency%20Configurations,-Mods%20can%20define">Mods.toml</a>. Forge Community Wiki. 2022-03-22 [2022-06-04]. （原始内容<a href="https://web.archive.org/web/20220605134745/https://forge.gemwire.uk/wiki/Mods.toml#:~:text=http%3A//example.com/%22-,Dependency%20Configurations,-Mods%20can%20define">存档</a>于2022-06-05）.<a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:4" class="footnote-text"><span><a href="https://forge.gemwire.uk/wiki/Dependencies">Dependencies</a>. Forge Community Wiki. 2021-08-02 [2022-06-04]. （原始内容<a href="https://web.archive.org/web/20220605135343/https://forge.gemwire.uk/wiki/Dependencies">存档</a>于2022-06-05）.<a href="#fnref:4" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:5" class="footnote-text"><span><a href="https://github.com/mezz/JustEnoughItems/wiki/Getting-Started-%5B1.13-and-Up%5D">Getting Started [1.13 and Up]</a>. mezz&#x2F;JustEnoughItems Wiki. 2021-11-30 [2022-06-05]. （原始内容<a href="https://web.archive.org/web/20220605140318/https://github.com/mezz/JustEnoughItems/wiki/Getting-Started-%5B1.13-and-Up%5D">存档</a>于2022-06-05）.<a href="#fnref:5" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>Minecraft</category>
      
      <category>Mod</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Minecraft</tag>
      
      <tag>Forge</tag>
      
      <tag>Mod</tag>
      
      <tag>Java</tag>
      
      <tag>Gradle</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
