<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>CurseForge 整合包下载器教程</title>
    <link href="/2022/06/b583a6838537/"/>
    <url>/2022/06/b583a6838537/</url>
    
    <content type="html"><![CDATA[<blockquote><p>2022年5月16日，CurseForge 发布了官方 API，同时弃用了旧的 API，这导致第三方启动器无法下载，如 MultiMC 和 PCL2。<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="Moran Weiss. The CurseForge Official API is Now Live. Overwolf Blog. 2022-05-16 [2022-05-23]. （原始内容存档于2022-06-08）.">[1]</span></a></sup>具体原因和详细情况在 <a href="https://medium.com/overwolf/the-curseforge-official-api-is-now-live-d314606355c2">《The CurseForge Official API is Now Live》</a> 中有详细说明。</p></blockquote><span id="more"></span><p>因此，我制作了一个软件 <a href="https://github.com/AnzhiZhang/CurseForgeModpackDownloader">CurseForge Modpack Downloader</a>，可以将 CurseForge 下载的整合包补全文件，制作为启动器支持的格式。目前已测试支持的启动器列表为：MultiMC，HMCL 和 PCL2。</p><p>当前，据说 HMCL 和 PCL2 已重新支持下载，但显然不是官方认可的方式。MMC 作者表示没有短期支持的计划，长期可能支持 API Key 的方式。<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="phit. Looks like CurseForge API in MultiMC is deprecated and unusable. GitHub. 2022-05-24 [2022-05-26]. （原始内容存档于2022-06-08）.">[2]</span></a></sup></p><h2 id="下载软件"><a href="#下载软件" class="headerlink" title="下载软件"></a>下载软件</h2><p>打开 <a href="https://github.com/AnzhiZhang/CurseForgeModpackDownloader">软件仓库</a>，在右侧的 Releases 下载最新版。您也可以点击 <a href="https://github.com/AnzhiZhang/CurseForgeModpackDownloader/releases/latest">这里</a> 直接前往最新 Release。</p><p><img src="https://i.imgur.com/7gTHmd3.png" alt="找到 Releases"></p><p><img src="https://i.imgur.com/asJveu0.png" alt="下载 Asstest 的第一个"></p><h2 id="选择整合包"><a href="#选择整合包" class="headerlink" title="选择整合包"></a>选择整合包</h2><p>在 CourseForge 上找到喜欢的整合包，下载整合包文件，此处以 Restrict Skyblock 为例</p><p><img src="https://i.imgur.com/kLceklJ.png" alt="打开 Files"></p><p><img src="https://i.imgur.com/Yp9G3g4.png" alt="选择整合包版本"></p><p><img src="https://i.imgur.com/pBBWQWq.png" alt="点击 Download 下载"></p><h2 id="使用软件下载"><a href="#使用软件下载" class="headerlink" title="使用软件下载"></a>使用软件下载</h2><p>下载完成后，启动软件，选择下载的整合包文件。</p><p><img src="https://i.imgur.com/CgTS2jf.png" alt="选择从 CurseForge 下载的文件"></p><p><img src="https://i.imgur.com/ogi6NTj.png" alt="获取模组下载链接"></p><p><img src="https://i.imgur.com/UiptzVt.png" alt="下载模组"></p><p><img src="https://i.imgur.com/1wT5PSP.png" alt="提示下载完成"></p><p>该软件会下载模组，将压缩包补全为完整的整合包。</p><h2 id="导入启动器"><a href="#导入启动器" class="headerlink" title="导入启动器"></a>导入启动器</h2><p>点击确定退出后，将文件（位置和名称不变）导入启动器，即可启动游戏。</p><p><img src="https://i.imgur.com/XSKg9xE.png" alt="导入 MultiMC"></p><h2 id="鸣谢"><a href="#鸣谢" class="headerlink" title="鸣谢"></a>鸣谢</h2><p>感谢 <a href="http://anyijun.com/">安逸菌</a>、<a href="https://github.com/Cyl18">Cyl18</a> 和 <a href="https://github.com/ShaBaiTianCN">安逸汉化组</a> 在本软件开发过程中提供的建议和帮助。</p><h3 id="使用的-API-的文档"><a href="#使用的-API-的文档" class="headerlink" title="使用的 API 的文档"></a>使用的 API 的文档</h3><p><a href="https://gist.github.com/crapStone/9a423f7e97e64a301e88a2f6a0f3e4d9">Curse API</a><sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><span class="hint--top hint--rounded" aria-label="curse_api.md. GitHub. 2020-09-09 [2022-05-23]. （原始内容存档于2022-06-08）.">[3]</span></a></sup></p><p><a href="https://github.com/Gaz492/CurseforgeAPI/blob/master/apiary.apib">CurseforgeAPI&#x2F;apiary.apib</a><sup id="fnref:4" class="footnote-ref"><a href="#fn:4" rel="footnote"><span class="hint--top hint--rounded" aria-label="CurseforgeAPI&#x2F;apiary.apib. GitHub. 2021-04-10 [2022-05-23]. （原始内容存档于2022-06-08）.">[4]</span></a></sup></p><h2 id="许可"><a href="#许可" class="headerlink" title="许可"></a>许可</h2><p>Copyright © 2022 Andy Zhang</p><p>本程序是自由软件：你可以再分发之和&#x2F;或依照由自由软件基金会发布的 GNU 通用公共许可证修改之，无论是版本 3 许可证，还是（按你的决定）任何以后版都可以。</p><p>发布该程序是希望它能有用，但是并无保障；甚至连可销售和符合某个特定的目的都不保证。请参看 GNU 通用公共许可证，了解详情。</p><p>你应该随程序获得一份 GNU 通用公共许可证的复本。如果没有，请看 <a href="https://www.gnu.org/licenses/">https://www.gnu.org/licenses/</a>。</p><section class="footnotes"><h2 id="参考文献">参考文献</h2><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>Moran Weiss. <a href="https://medium.com/overwolf/the-curseforge-official-api-is-now-live-d314606355c2">The CurseForge Official API is Now Live</a>. Overwolf Blog. 2022-05-16 [2022-05-23]. （原始内容<a href="https://web.archive.org/web/20220608151743/https://medium.com/overwolf/the-curseforge-official-api-is-now-live-d314606355c2">存档</a>于2022-06-08）.<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span>phit. <a href="https://github.com/MultiMC/Launcher/issues/4716#issuecomment-1135498404">Looks like CurseForge API in MultiMC is deprecated and unusable</a>. GitHub. 2022-05-24 [2022-05-26]. （原始内容<a href="https://web.archive.org/web/20220608152954/https://github.com/MultiMC/Launcher/issues/4716">存档</a>于2022-06-08）.<a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="https://gist.github.com/crapStone/9a423f7e97e64a301e88a2f6a0f3e4d9">curse_api.md</a>. GitHub. 2020-09-09 [2022-05-23]. （原始内容<a href="https://web.archive.org/web/20220608154714/https://gist.github.com/crapStone/9a423f7e97e64a301e88a2f6a0f3e4d9">存档</a>于2022-06-08）.<a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:4" class="footnote-text"><span><a href="https://github.com/Gaz492/CurseforgeAPI/blob/master/apiary.apib">CurseforgeAPI&#x2F;apiary.apib</a>. GitHub. 2021-04-10 [2022-05-23]. （原始内容<a href="https://web.archive.org/web/20220608154724/https://github.com/Gaz492/CurseforgeAPI/blob/master/apiary.apib">存档</a>于2022-06-08）.<a href="#fnref:4" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>Minecraft</category>
      
      <category>工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Minecraft</tag>
      
      <tag>整合包</tag>
      
      <tag>CurseForge</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GPG 入门教程</title>
    <link href="/2022/06/39bc6384ffd2/"/>
    <url>/2022/06/39bc6384ffd2/</url>
    
    <content type="html"><![CDATA[<h2 id="简介和概念"><a href="#简介和概念" class="headerlink" title="简介和概念"></a>简介和概念</h2><p>完整的官方文档可在 <a href="https://www.gnupg.org/">官网</a> 阅读。</p><blockquote><p>GNU Privacy Guard（GnuPG 或 GPG）是一个密码学软件，用于加密、签名通信内容及管理非对称密码学的密钥。GnuPG 是自由软件，遵循 IETF 订定的 OpenPGP 技术标准设计，并与 PGP 保持兼容。</p></blockquote><p>GPG 有许多用途，包括文件和邮件加密、签名、Git 提交签名等。</p><p><img src="https://i.imgur.com/yWTP9ET.png" alt="经过 GPG 签名的提交可以在 GitHub 显示绿色的 Verified&lt;sup id=&quot;fnref:1&quot; class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;#fn:1&quot; rel=&quot;footnote&quot;&gt;&lt;span class=&quot;hint--top hint--rounded&quot; aria-label=&quot;About commit signature verification. GitHub Docs. [2022-06-06]. （原始内容存档于2022-06-06）&quot;&gt;[1]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;"></p><p>以下概念建议先浏览一遍，操作后再回来看一遍，可以更好理解。</p><h3 id="主密钥（Primary-Key）和子密钥（Subkey）"><a href="#主密钥（Primary-Key）和子密钥（Subkey）" class="headerlink" title="主密钥（Primary Key）和子密钥（Subkey）"></a>主密钥（Primary Key）和子密钥（Subkey）</h3><p>类似证书的根证书结构，GPG 密钥分为主密钥和子密钥。</p><p><img src="https://i.imgur.com/Fy4PuOx.png" alt="主密钥和子密钥的关系&lt;sup id=&quot;fnref:5&quot; class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;#fn:5&quot; rel=&quot;footnote&quot;&gt;&lt;span class=&quot;hint--top hint--rounded&quot; aria-label=&quot;嗯了个踢. 简明 GPG 概念. 知乎. 2020-05-02 [2022-06-06]. （原始内容存档于2022-06-06）&quot;&gt;[5]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;"></p><p>子密钥虽然有自己的公钥，但是实际使用导出的是一组公钥，发布这一个公钥即可认证所有子密钥。所有的变更都是通过这个公钥发布的，比如 UID 的更改、子密钥的新增或撤销等。</p><h3 id="密钥类型"><a href="#密钥类型" class="headerlink" title="密钥类型"></a>密钥类型</h3><p>共有四种类型的密钥，对应的缩写<sup id="fnref:8" class="footnote-ref"><a href="#fn:8" rel="footnote"><span class="hint--top hint--rounded" aria-label="UlyC. 2021年，用更现代的方法使用PGP（上）. UlyC - C的博客. 2021-01-13 [2022-06-06]. （原始内容存档于2022-06-06）">[8]</span></a></sup>如下：</p><table><thead><tr><th>类型</th><th>全名</th><th>缩写</th></tr></thead><tbody><tr><td>主公钥</td><td>Public Key</td><td>pub</td></tr><tr><td>子公钥</td><td>Public Subkey</td><td>sub</td></tr><tr><td>主私钥</td><td>Secret Key</td><td>sec</td></tr><tr><td>子私钥</td><td>Secret Subkey</td><td>ssb</td></tr></tbody></table><h3 id="用途（Usage）"><a href="#用途（Usage）" class="headerlink" title="用途（Usage）"></a>用途（Usage）</h3><p>每个密钥可以用不同的用途，下表是不同用途的含义：</p><table><thead><tr><th>缩写</th><th>全名</th><th>用途</th></tr></thead><tbody><tr><td>C</td><td>Certificating</td><td>认证，如子密钥或证书，类似根证书的作用。</td></tr><tr><td>S</td><td>Signing</td><td>签名，如文件数字签名、邮件签名、Git 提交。</td></tr><tr><td>A</td><td>Authenticating</td><td>身份验证，如登录。</td></tr><tr><td>E</td><td>Encrypting</td><td>加密，如文件和文本。</td></tr></tbody></table><p>具有 <code>C</code> 的密钥是主密钥，只有这个密钥可以用于：</p><ul><li>添加或撤销子密钥的用途</li><li>添加、更改或撤销密钥关联的身份（UID）</li><li>添加或更改本身或其他子密钥的到期时间</li><li>为了网络信任目的为其它密钥签名<sup id="fnref:7" class="footnote-ref"><a href="#fn:7" rel="footnote"><span class="hint--top hint--rounded" aria-label="Konstantin Ryabitsev. 用 PGP 保护代码完整性（二）：生成你的主密钥. Linux 中国. 2018-04-09 [2022-06-06].">[7]</span></a></sup></li></ul><h3 id="用户-ID（User-ID）"><a href="#用户-ID（User-ID）" class="headerlink" title="用户 ID（User ID）"></a>用户 ID（User ID）</h3><p>用户 ID 用于将密钥和真人关联，可以有多个 UID，一般为以下格式：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">Name &lt;name@example.com&gt;<br></code></pre></td></tr></table></figure><p>如果使用多个身份，比如个人邮箱、 GitHub 账号、公司邮箱<sup id="fnref:6" class="footnote-ref"><a href="#fn:6" rel="footnote"><span class="hint--top hint--rounded" aria-label="Konstantin Ryabitsev. 用 PGP 保护代码完整性（一）： 基本概念和工具. Linux 中国. 2018-04-08 [2022-06-06].">[6]</span></a></sup>，可以设置为这样：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">Name &lt;name@example.com&gt;<br>Name(GitHub) &lt;name@users.noreply.github.com&gt;<br>Name(Work) &lt;name@work.com&gt;<br></code></pre></td></tr></table></figure><p>需要注意公钥会包含电子邮件地址，注意隐私和垃圾邮件问题。</p><h3 id="密钥-ID（Key-ID）"><a href="#密钥-ID（Key-ID）" class="headerlink" title="密钥 ID（Key ID）"></a>密钥 ID（Key ID）</h3><p>每一个密钥 ID（Key ID）有三种形式，指定密钥的最好方式就是使用指纹，可以最大限度避免重复的 ID：</p><ul><li>指纹：证书的 SHA-1 哈希，20 字节；</li><li>长 ID：指纹的最后 16 位，8 字节；</li><li>短 ID：指纹的最后 8 位，4 字节；</li></ul><h3 id="过期（Expire）和撤销（Revoke）"><a href="#过期（Expire）和撤销（Revoke）" class="headerlink" title="过期（Expire）和撤销（Revoke）"></a>过期（Expire）和撤销（Revoke）</h3><p>GPG 密钥可以设置过期时间，可以是永久有效。很多人会给主密钥设置长期有效，对不同用途的子密钥设置较短的期限。</p><p>GPG 可以发布撤销证书，发布撤销证书后，其他人收到后就知道之前发布的密钥失效了。</p><h2 id="安装-GPG"><a href="#安装-GPG" class="headerlink" title="安装 GPG"></a>安装 GPG</h2><p>如果安装了 <a href="https://git-scm.com/">Git</a>，可直接使用 Git Bash。</p><p>也可以到 <a href="https://www.gnupg.org/download/">官网</a> 下载安装。</p><h2 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">gpg --full-gen-key<br></code></pre></td></tr></table></figure><p>选择加密类型，推荐 RSA 4096。</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs console">Please select what kind of key you want:<br>   (1) RSA and RSA (default)<br>   (2) DSA and Elgamal<br>   (3) DSA (sign only)<br>   (4) RSA (sign only)<br>  (14) Existing key from card<br>Your selection? 1<br>RSA keys may be between 1024 and 4096 bits long.<br>What keysize do you want? (3072) 4096<br>Requested keysize is 4096 bits<br></code></pre></td></tr></table></figure><p>设置过期时间，<code>0</code> 为永久。</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs console">Please specify how long the key should be valid.<br>         0 = key does not expire<br>      &lt;n&gt;  = key expires in n days<br>      &lt;n&gt;w = key expires in n weeks<br>      &lt;n&gt;m = key expires in n months<br>      &lt;n&gt;y = key expires in n years<br>Key is valid for? (0)<br>Key does not expire at all<br>Is this correct? (y/N) y<br></code></pre></td></tr></table></figure><p>根据提示输入姓名和邮箱，<code>Comment</code> 留空即可，然后设置密钥的密码。密码用于对称加密本地存储的私钥，在文件泄露的情况下也能保护你的密钥，在使用 GPG 密钥时经常需要输入密码以验证身份。</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs console">GnuPG needs to construct a user ID to identify your key.<br><br>Real name: Name<br>Email address: name@example.com<br>Comment:<br>You selected this USER-ID:<br>    &quot;Name &lt;name@example.com&gt;&quot;<br><br>Change (N)ame, (C)omment, (E)mail or (O)kay/(Q)uit? o<br></code></pre></td></tr></table></figure><p><img src="https://i.imgur.com/Ez5qpIO.png" alt="设置密码"></p><p>同时会自动生成一个用途为 <code>E</code> 的子密钥，生成的密钥将会列出。</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs console">public and secret key created and signed.<br><br>pub   rsa4096 2022-06-06 [SC]<br>      5DE3E0509C47EA3CF04A42D34AEE18F83AFDEB23<br>uid                      Name &lt;name@example.com&gt;<br>sub   rsa4096 2022-06-06 [E]<br></code></pre></td></tr></table></figure><h3 id="生成子密钥"><a href="#生成子密钥" class="headerlink" title="生成子密钥"></a>生成子密钥</h3><p><strong>在日常使用中，应当避免使用主密钥，而是为不同用途使用不同的子密钥。</strong><sup id="fnref:8" class="footnote-ref"><a href="#fn:8" rel="footnote"><span class="hint--top hint--rounded" aria-label="UlyC. 2021年，用更现代的方法使用PGP（上）. UlyC - C的博客. 2021-01-13 [2022-06-06]. （原始内容存档于2022-06-06）">[8]</span></a></sup></p><p>进入密钥的编辑，参数为上一步输出的密钥指纹。加上 <code>--expert</code> 参数以在下一步使用 <a href="https://zh.wikipedia.org/wiki/Curve25519">Curve 25519</a> 算法生成子密钥<sup id="fnref:9" class="footnote-ref"><a href="#fn:9" rel="footnote"><span class="hint--top hint--rounded" aria-label="UlyC. 2021年，用更现代的方法使用PGP（中）. UlyC - C的博客. 2021-01-18 [2022-06-06]. （原始内容存档于2022-06-06）">[9]</span></a></sup>，这是一种安全性介于 RSA 2048 和 RSA 4096 之间的算法，且速度更快。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">gpg --expert --edit-key 5DE3E0509C47EA3CF04A42D34AEE18F83AFDEB23<br></code></pre></td></tr></table></figure><p>使用 <code>addkey</code> 添加子密钥，根据提示选择、输入密码、保存更改。</p><p>注意不同用途的子密钥可能需要选择不同的加密方式。</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">gpg&gt; </span><span class="language-bash">addkey</span><br>Please select what kind of key you want:<br>   (3) DSA (sign only)<br>   (4) RSA (sign only)<br>   (5) Elgamal (encrypt only)<br>   (6) RSA (encrypt only)<br>   (7) DSA (set your own capabilities)<br>   (8) RSA (set your own capabilities)<br>  (10) ECC (sign only)<br>  (11) ECC (set your own capabilities)<br>  (12) ECC (encrypt only)<br>  (13) Existing key<br>  (14) Existing key from card<br>Your selection? 10<br>Please select which elliptic curve you want:<br>   (1) Curve 25519<br>   (3) NIST P-256<br>   (4) NIST P-384<br>   (5) NIST P-521<br>   (6) Brainpool P-256<br>   (7) Brainpool P-384<br>   (8) Brainpool P-512<br>   (9) secp256k1<br>Your selection? 1<br>Please specify how long the key should be valid.<br>         0 = key does not expire<br>      &lt;n&gt;  = key expires in n days<br>      &lt;n&gt;w = key expires in n weeks<br>      &lt;n&gt;m = key expires in n months<br>      &lt;n&gt;y = key expires in n years<br>Key is valid for? (0)<br>Key does not expire at all<br>Is this correct? (y/N) y<br>Really create? (y/N) y<br></code></pre></td></tr></table></figure><p>在弹出的对话框输入密码。生成完成后保存。</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">gpg&gt; </span><span class="language-bash">save</span><br></code></pre></td></tr></table></figure><h3 id="撤销证书"><a href="#撤销证书" class="headerlink" title="撤销证书"></a>撤销证书</h3><p>默认情况下生成密钥后会在用户文件夹内的 <code>.gnupg\openpgp-revocs.d</code> 生成一份撤销证书，也可以使用 <code>gpg --output revoke.asc --gen-revoke mykey</code> 生成一份。</p><h2 id="管理密钥"><a href="#管理密钥" class="headerlink" title="管理密钥"></a>管理密钥</h2><h3 id="列出密钥"><a href="#列出密钥" class="headerlink" title="列出密钥"></a>列出密钥</h3><p>使用 <code>gpg --list-keys</code> 即可列出本地所有公钥和子公钥，还有一个简便写法：<code>gpg -k</code>。</p><p>私钥类似，<code>gpg --list-secret-keys</code> 和 <code>gpg -K</code>。</p><hr><p>我们在本地使用时，长 ID 和短 ID 更方便，使用 <code>--keyid-format &#123;none|short|0xshort|long|0xlong&#125;</code> 即可输出长 ID 或短 ID：</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">gpg -k --keyid-format short</span><br>~/.gnupg/pubring.kbx<br>---------------------------------<br>pub   rsa2048/3AFDEB23 2017-08-16 [SC]<br>      5DE3E0509C47EA3CF04A42D34AEE18F83AFDEB23<br>uid         [ultimate] GitHub (web-flow commit signing) &lt;noreply@github.com&gt;<br></code></pre></td></tr></table></figure><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">gpg -k --keyid-format long</span><br>~/.gnupg/pubring.kbx<br>---------------------------------<br>pub   rsa2048/4AEE18F83AFDEB23 2017-08-16 [SC]<br>      5DE3E0509C47EA3CF04A42D34AEE18F83AFDEB23<br>uid                 [ultimate] GitHub (web-flow commit signing) &lt;noreply@github.com&gt;<br></code></pre></td></tr></table></figure><p>默认情况下会输出连续的 20 字节指纹，例如 <code>5DE3E0509C47EA3CF04A42D34AEE18F83AFDEB23</code>。使用 <code>--fingerprint</code> 参数可输出有空格分隔的指纹，例如 <code>5DE3 E050 9C47 EA3C F04A  42D3 4AEE 18F8 3AFD EB23</code>。</p><p>以上两个参数可以在配置文件 <code>~/.gnupg/gpg.conf</code> 中添加以避免重复输入，文件需要手动创建。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">keyid-format long<br>fingerprint<br></code></pre></td></tr></table></figure><h3 id="导入和导出"><a href="#导入和导出" class="headerlink" title="导入和导出"></a>导入和导出</h3><p>使用 <code>gpg --import key.gpg</code> 导入密钥，后面会提到导入 GitHub 的公钥。</p><hr><p>通过以下命令查看使用 ASCII-armored 格式的公钥：</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">gpg --<span class="hljs-built_in">export</span> --armor 4AEE18F83AFDEB23</span><br>-----BEGIN PGP PUBLIC KEY BLOCK-----<br>[...]<br>-----END PGP PUBLIC KEY BLOCK-----<br></code></pre></td></tr></table></figure><p>增加 <code>--output</code> 参数以导出到文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">gpg --armor --output public-key.gpg --<span class="hljs-built_in">export</span> 4AEE18F83AFDEB23<br></code></pre></td></tr></table></figure><p>导出私钥，需要输入密码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">gpg --armor --output private-key.gpg --export-secret-keys 4AEE18F83AFDEB23<br></code></pre></td></tr></table></figure><p>建议将导出的公私钥和撤销证书做好备份。</p><h3 id="修改用户-ID（UID）"><a href="#修改用户-ID（UID）" class="headerlink" title="修改用户 ID（UID）"></a>修改用户 ID（UID）</h3><p>进入编辑密钥，然后修改 UID，可以添加、设置主 UID、撤销和删除。</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">gpg --edit-key 4AEE18F83AFDEB23</span><br><span class="hljs-meta prompt_">gpg&gt; </span><span class="language-bash">adduid</span><br>Real name: Name(Work)<br>Email address: name@work.com<br>Comment:<br>You selected this USER-ID:<br>    &quot;Name(Work) &lt;name@work.com&gt;&quot;<br><br>Change (N)ame, (C)omment, (E)mail or (O)kay/(Q)uit? o<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">gpg&gt; </span><span class="language-bash">uid 1</span><br>[ultimate] (1)* Name &lt;name@example.com&gt;<br>[ unknown] (2). Name(Work) &lt;name@work.com&gt;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">gpg&gt; </span><span class="language-bash">primary</span><br>[ultimate] (1)* Name &lt;name@example.com&gt;<br>[ unknown] (2)  Name(Work) &lt;name@work.com&gt;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">gpg&gt; </span><span class="language-bash">uid 1</span><br>[ultimate] (1). Name &lt;name@example.com&gt;<br>[ unknown] (2)  Name(Work) &lt;name@work.com&gt;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">gpg&gt; </span><span class="language-bash">uid 2</span><br>[ultimate] (1). Name &lt;name@example.com&gt;<br>[ unknown] (2)* Name(Work) &lt;name@work.com&gt;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">gpg&gt; </span><span class="language-bash">revuid</span><br>[ultimate] (1). Name &lt;name@example.com&gt;<br>[ revoked] (2)  Name(Work) &lt;name@work.com&gt;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">gpg&gt; </span><span class="language-bash">uid 2</span><br>[ultimate] (1). Name &lt;name@example.com&gt;<br>[ revoked] (2)* Name(Work) &lt;name@work.com&gt;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">gpg&gt; </span><span class="language-bash">deluid</span><br>[ultimate] (1). Name &lt;name@example.com&gt;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">gpg&gt; </span><span class="language-bash">save</span><br></code></pre></td></tr></table></figure><h2 id="Git-amp-GitHub-使用"><a href="#Git-amp-GitHub-使用" class="headerlink" title="Git &amp; GitHub 使用"></a>Git &amp; GitHub 使用</h2><p>Git 提交可以使用 GPG 密钥签名，增加 <code>--show-signature</code> 参数即可显示提交的签名信息。</p><p>未信任的公钥签名的提交显示红色提示。</p><p><img src="https://i.imgur.com/wrS8oMn.png" alt="未信任公钥的签名"></p><p>已信任的公钥签名的提交显示青色提示。</p><p><img src="https://i.imgur.com/jqUhCsE.png" alt="已信任公钥的签名"></p><h3 id="Git-设置"><a href="#Git-设置" class="headerlink" title="Git 设置"></a>Git 设置</h3><p>密钥的 UID 需要包括 Git 使用的邮箱。</p><p>首先告诉 Git 使用的密钥。<sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><span class="hint--top hint--rounded" aria-label="Telling Git about your signing key. GitHub Docs. [2022-06-06]. （原始内容存档于2022-05-29）">[3]</span></a></sup></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.signingkey 4AEE18F83AFDEB23<br></code></pre></td></tr></table></figure><p>然后设置提交时使用 GPG 签名。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global commit.gpgsign <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><h3 id="信任-GitHub-公钥"><a href="#信任-GitHub-公钥" class="headerlink" title="信任 GitHub 公钥"></a>信任 GitHub 公钥</h3><p>使用以下命令导入并信任 GitHub 的公钥。<sup id="fnref:11" class="footnote-ref"><a href="#fn:11" rel="footnote"><span class="hint--top hint--rounded" aria-label="VonC. What is GitHub’s public GPG key?. Stack Overflow. 2022-03-02 [2022-06-06]. （原始内容存档于2021-11-23）">[11]</span></a></sup></p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">curl https://github.com/web-flow.gpg | gpg --import</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">gpg --edit-key noreply@github.com</span><br><span class="hljs-meta prompt_">gpg&gt; </span><span class="language-bash">trust</span><br><span class="hljs-meta prompt_">gpg&gt; </span><span class="language-bash">save</span><br></code></pre></td></tr></table></figure><h3 id="上传公钥到-GitHub"><a href="#上传公钥到-GitHub" class="headerlink" title="上传公钥到 GitHub"></a>上传公钥到 GitHub</h3><p>打开 GitHub 设置，找到 <code>SSH and GPG Keys</code>。<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="Adding a new GPG key to your GitHub account. GitHub Docs. [2022-06-06]. （原始内容存档于2022-05-31）">[2]</span></a></sup></p><p><img src="https://i.imgur.com/qqIgq7S.png" alt="GitHub 设置"></p><p>点击 <code>New GPG Key</code>，把导出的公钥复制进去。</p><p><img src="https://i.imgur.com/u90FOOJ.png" alt="新建 GPG 密钥"></p><p><img src="https://i.imgur.com/RraJZSb.png" alt="填写并保存"></p><p>此时签名的提交在 GitHub 即可显示绿色的 <code>Verified</code>。</p><section class="footnotes"><h2 id="参考文献">参考文献</h2><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://docs.github.com/en/authentication/managing-commit-signature-verification/about-commit-signature-verification">About commit signature verification</a>. GitHub Docs. [2022-06-06]. （原始内容<a href="https://web.archive.org/web/20220606095245/https://docs.github.com/en/authentication/managing-commit-signature-verification/about-commit-signature-verification">存档</a>于2022-06-06）<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://docs.github.com/en/authentication/managing-commit-signature-verification/adding-a-new-gpg-key-to-your-github-account">Adding a new GPG key to your GitHub account</a>. GitHub Docs. [2022-06-06]. （原始内容<a href="https://web.archive.org/web/20220531040934/https://docs.github.com/en/authentication/managing-commit-signature-verification/adding-a-new-gpg-key-to-your-github-account">存档</a>于2022-05-31）<a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="https://docs.github.com/en/authentication/managing-commit-signature-verification/telling-git-about-your-signing-key">Telling Git about your signing key</a>. GitHub Docs. [2022-06-06]. （原始内容<a href="https://web.archive.org/web/20220529202622/https://docs.github.com/en/authentication/managing-commit-signature-verification/telling-git-about-your-signing-key">存档</a>于2022-05-29）<a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:4" class="footnote-text"><span>阮一峰. <a href="https://www.ruanyifeng.com/blog/2013/07/gpg.html">GPG入门教程</a>. 阮一峰的网络日志. 2013-07-12 [2022-06-06]. （原始内容<a href="https://web.archive.org/web/20220601090505/https://www.ruanyifeng.com/blog/2013/07/gpg.html">存档</a>于2022-06-01）<a href="#fnref:4" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:5" class="footnote-text"><span>嗯了个踢. <a href="https://zhuanlan.zhihu.com/p/137801979">简明 GPG 概念</a>. 知乎. 2020-05-02 [2022-06-06]. （原始内容<a href="https://web.archive.org/save/https://zhuanlan.zhihu.com/p/137801979">存档</a>于2022-06-06）<a href="#fnref:5" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:6" class="footnote-text"><span>Konstantin Ryabitsev. <a href="https://linux.cn/article-9524-1.html">用 PGP 保护代码完整性（一）： 基本概念和工具</a>. Linux 中国. 2018-04-08 [2022-06-06].<a href="#fnref:6" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:7" class="footnote-text"><span>Konstantin Ryabitsev. <a href="https://linux.cn/article-9529-1.html">用 PGP 保护代码完整性（二）：生成你的主密钥</a>. Linux 中国. 2018-04-09 [2022-06-06].<a href="#fnref:7" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:8" class="footnote-text"><span>UlyC. <a href="https://ulyc.github.io/2021/01/13/2021%E5%B9%B4-%E7%94%A8%E6%9B%B4%E7%8E%B0%E4%BB%A3%E7%9A%84%E6%96%B9%E6%B3%95%E4%BD%BF%E7%94%A8PGP-%E4%B8%8A/">2021年，用更现代的方法使用PGP（上）</a>. UlyC - C的博客. 2021-01-13 [2022-06-06]. （原始内容<a href="https://web.archive.org/web/20220606133111/https://ulyc.github.io/2021/01/13/2021%E5%B9%B4-%E7%94%A8%E6%9B%B4%E7%8E%B0%E4%BB%A3%E7%9A%84%E6%96%B9%E6%B3%95%E4%BD%BF%E7%94%A8PGP-%E4%B8%8A/">存档</a>于2022-06-06）<a href="#fnref:8" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:9" class="footnote-text"><span>UlyC. <a href="https://ulyc.github.io/2021/01/18/2021%E5%B9%B4-%E7%94%A8%E6%9B%B4%E7%8E%B0%E4%BB%A3%E7%9A%84%E6%96%B9%E6%B3%95%E4%BD%BF%E7%94%A8PGP-%E4%B8%AD/">2021年，用更现代的方法使用PGP（中）</a>. UlyC - C的博客. 2021-01-18 [2022-06-06]. （原始内容<a href="https://web.archive.org/web/20220606133131/https://ulyc.github.io/2021/01/18/2021%E5%B9%B4-%E7%94%A8%E6%9B%B4%E7%8E%B0%E4%BB%A3%E7%9A%84%E6%96%B9%E6%B3%95%E4%BD%BF%E7%94%A8PGP-%E4%B8%AD/">存档</a>于2022-06-06）<a href="#fnref:9" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:10" class="footnote-text"><span>UlyC. <a href="https://ulyc.github.io/2021/01/26/2021%E5%B9%B4-%E7%94%A8%E6%9B%B4%E7%8E%B0%E4%BB%A3%E7%9A%84%E6%96%B9%E6%B3%95%E4%BD%BF%E7%94%A8PGP-%E4%B8%8B/">2021年，用更现代的方法使用PGP（下）</a>. UlyC - C的博客. 2021-01-26 [2022-06-06]. （原始内容<a href="https://web.archive.org/web/20220606170227/https://ulyc.github.io/2021/01/26/2021%E5%B9%B4-%E7%94%A8%E6%9B%B4%E7%8E%B0%E4%BB%A3%E7%9A%84%E6%96%B9%E6%B3%95%E4%BD%BF%E7%94%A8PGP-%E4%B8%8B/">存档</a>于2022-06-06）<a href="#fnref:10" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:11" class="footnote-text"><span>VonC. <a href="https://stackoverflow.com/questions/60482588/what-is-githubs-public-gpg-key">What is GitHub’s public GPG key?</a>. Stack Overflow. 2022-03-02 [2022-06-06]. （原始内容<a href="https://web.archive.org/web/20211123035710/https://stackoverflow.com/questions/60482588/what-is-githubs-public-gpg-key">存档</a>于2021-11-23）<a href="#fnref:11" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>计算机</tag>
      
      <tag>密码学</tag>
      
      <tag>GPG</tag>
      
      <tag>GitHub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Minecraft Forge Mod 开发环境搭建</title>
    <link href="/2022/06/d8ab5b806c7d/"/>
    <url>/2022/06/d8ab5b806c7d/</url>
    
    <content type="html"><![CDATA[<p>本文参考了 <a href="https://boson.v2mcdev.com/introducation/intro.html">Boson 1.16 Modding Tutorial</a> 的 <code>环境配置</code><sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="环境配置. Boson 1.16 Modding Tutorial. [2022-06-04].">[1]</span></a></sup> 部分。</p><h2 id="准备工具"><a href="#准备工具" class="headerlink" title="准备工具"></a>准备工具</h2><ul><li>IDE：<a href="https://www.jetbrains.com/zh-cn/idea/">IntelliJ IDEA</a></li><li>Java开发环境：<a href="https://www.oracle.com/java/technologies/javase/javase8u211-later-archive-downloads.html#:~:text=Java%20SE%20Development%20Kit%208u311">JDK 8u311</a></li><li>安装示例插件：<a href="https://files.minecraftforge.net/net/minecraftforge/forge/">Forge MDK</a></li></ul><p><img src="https://i.imgur.com/MeBVpX5.png" alt="MDK下载"></p><h2 id="导入项目"><a href="#导入项目" class="headerlink" title="导入项目"></a>导入项目</h2><p>解压下载的压缩文件，使用 IDEA 打开文件夹，等待项目导入完成。</p><p><img src="https://i.imgur.com/cLblMG7.png" alt="项目导入完成"></p><p>打开 <code>Settings</code> -&gt; <code>Build, Execution, Deployment</code> -&gt; <code>Build Tools</code> -&gt; <code>Gradle</code>，将 <code>Build and run using</code> 设置为 <code>IntelliJ IDEA</code> 以加快运行速度</p><p><img src="https://i.imgur.com/zBifikw.png" alt="Gradle 设置"></p><p>建议将 <code>build.gradle</code> 中的所有 <code>property &#39;forge.logging.console.level&#39;, &#39;debug&#39;</code> 改为 <code>property &#39;forge.logging.console.level&#39;, &#39;info&#39;</code> 以减少日志输出。</p><p>打开右侧的 <code>Gradle</code> 面板，运行 <code>genIntellijRuns</code>。</p><p><img src="https://i.imgur.com/OmDNB1b.png" alt="生成 IDEA 运行配置"></p><p>在右上角选择 <code>runClient</code>，使用 run 或 debug 启动 Minecraft。</p><p><img src="https://i.imgur.com/5nBM43s.png" alt="点击运行客户端"><br><img src="https://i.imgur.com/S0frPEz.png" alt="成功运行客户端"></p><h3 id="项目文件结构简介"><a href="#项目文件结构简介" class="headerlink" title="项目文件结构简介"></a>项目文件结构简介</h3><table><thead><tr><th>文件或文件夹</th><th>简介</th></tr></thead><tbody><tr><td>build.gradle</td><td>Gradle 配置文件，大部分项目配置都在这里。</td></tr><tr><td>build 和 out</td><td>编译目录，打包的 jar 文件在 <code>build/libs</code> 中。</td></tr><tr><td>run</td><td>MC 根目录，可以在此处查看日志等信息。</td></tr><tr><td>src</td><td>资源文件和源码目录。</td></tr></tbody></table><h2 id="配置模组信息"><a href="#配置模组信息" class="headerlink" title="配置模组信息"></a>配置模组信息</h2><h3 id="build-gradle"><a href="#build-gradle" class="headerlink" title="build.gradle"></a>build.gradle</h3><p>打开 <code>build.gradle</code>，找到 <code>version</code>、<code>group</code> 和 <code>archiveBaseName</code>。</p><p><img src="https://i.imgur.com/gK9HXkV.png" alt="默认的配置"></p><ul><li><code>version</code> 是版本号，一般遵循 Forge的 <a href="https://mcforge.readthedocs.io/en/latest/gettingstarted/versioning/">语义化版本</a>，改为 <code>1.16.5-0.0.1.0</code>。</li><li><code>group</code> 是包名，一般为域名，这里配置为 <code>com.example</code>。</li><li><code>archiveBaseName</code> 是打包的文件的基础名，打包的文件名格式为 <code>&lt;archivesBaseName&gt;-&lt;version&gt;.jar</code>。修改完成后点击右上角的 <code>Load Gradle Changes</code>。</li></ul><p><img src="https://i.imgur.com/YjaEJYH.png" alt="修改后的配置"><br><img src="https://i.imgur.com/1IdINNN.png" alt="点击加载新配置"></p><h3 id="mods-toml"><a href="#mods-toml" class="headerlink" title="mods.toml"></a>mods.toml</h3><p>这部分内容可以在游戏内的模组列表看到效果。打开 <code>src/main/resources/META-INF/mods.toml</code>，注释说明得很全面，也可以参考下表<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="Structuring Your Mod. Forge Documentation. [2022-06-04]. （原始内容存档于2022-06-05）.">[2]</span></a></sup>：</p><table><thead><tr><th>属性</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>license</td><td>string</td><td>许可证名称。</td></tr><tr><td>modid</td><td>string</td><td>modid。</td></tr><tr><td>version</td><td>string</td><td>模组版本，必须是点分隔的数字，最好符合 Forge 的 <a href="https://mcforge.readthedocs.io/en/latest/gettingstarted/versioning/">语义化版本</a> 结构。</td></tr><tr><td>displayName</td><td>string</td><td>模组显示的名称。</td></tr><tr><td>updateJSONURL</td><td>string</td><td><a href="https://mcforge.readthedocs.io/en/latest/misc/updatechecker/">版本 JSON 文件</a> 的 URL。</td></tr><tr><td>displayURL</td><td>string</td><td>模组主页的URL。</td></tr><tr><td>logoFile</td><td>string</td><td>logo 文件名，必须位于 resources 文件夹内。</td></tr><tr><td>credits</td><td>string</td><td>鸣谢。</td></tr><tr><td>authors</td><td>string</td><td>模组作者。</td></tr><tr><td>description</td><td>string</td><td>模组描述，可以是多行。</td></tr><tr><td>dependencies</td><td>[list]</td><td>模组依赖列表。</td></tr></tbody></table><h3 id="模组主类"><a href="#模组主类" class="headerlink" title="模组主类"></a>模组主类</h3><p>删除 <code>src/main/java</code> 内的全部文件，按 <code>group</code> 和 <code>modid</code>，自己新建一个包和类，这个类就是模组的入口，内容如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.examplemod;<br><br><span class="hljs-keyword">import</span> net.minecraftforge.fml.common.Mod;<br><br><span class="hljs-meta">@Mod(&quot;examplemod&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ExampleMod</span> &#123;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="pack-mcmeta"><a href="#pack-mcmeta" class="headerlink" title="pack.mcmeta"></a>pack.mcmeta</h3><p>数据包描述，可以修改 <code>description</code>。</p><p><img src="https://i.imgur.com/KlHSf7w.png" alt="选择数据包的界面"></p><h2 id="其它模组"><a href="#其它模组" class="headerlink" title="其它模组"></a>其它模组</h2><h3 id="依赖项"><a href="#依赖项" class="headerlink" title="依赖项"></a>依赖项</h3><p>如果想将某个模组设置为依赖项，需要在 <code>mods.toml</code> 中配置，每一个依赖项的格式必须为 <code>[[dependencies.modid]]</code>，参考下表<sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><span class="hint--top hint--rounded" aria-label="Mods.toml. Forge Community Wiki. 2022-03-22 [2022-06-04]. （原始内容存档于2022-06-05）.">[3]</span></a></sup>：</p><table><thead><tr><th>属性</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>modId</td><td>string</td><td>依赖项的模组 ID。</td></tr><tr><td>mandatory</td><td>boolean</td><td>依赖项未满足时是否崩溃。</td></tr><tr><td>versionRange</td><td>string</td><td>可接受的依赖项版本，以 <a href="https://maven.apache.org/enforcer/enforcer-rules/versionRanges.html">Maven version spec</a> 表示。空字符串为无边界版本范围，即匹配任意版本。</td></tr><tr><td>ordering</td><td>string</td><td>定义模组是否必须在此依赖项之前或之后加载。有效值为 <code>BEFORE</code>（必须在之前加载）、<code>AFTER</code>（必须在之后加载）和 <code>NONE</code>（不关心顺序）。</td></tr><tr><td>side</td><td>string</td><td>有效值为 <code>CLIENT</code>（存在于客户端）、SERVER（存在于专用服务器）和 BOTH（存在于两侧）。</td></tr></tbody></table><p>尽管空字符串的 <code>versionRange</code> 可以匹配任意版本，但是建议使用 <code>[0,)</code> 匹配。</p><h3 id="加载模组"><a href="#加载模组" class="headerlink" title="加载模组"></a>加载模组</h3><p>如果想加载其它模组，不可以直接在 <code>run/mods</code> 中加载，需要配置 <code>build.gradle</code>。<sup id="fnref:4" class="footnote-ref"><a href="#fn:4" rel="footnote"><span class="hint--top hint--rounded" aria-label="Dependencies. Forge Community Wiki. 2021-08-02 [2022-06-04]. （原始内容存档于2022-06-05）.">[4]</span></a></sup></p><p>大部分模组都会提供配置信息，比如 JEI<sup id="fnref:5" class="footnote-ref"><a href="#fn:5" rel="footnote"><span class="hint--top hint--rounded" aria-label="Getting Started [1.13 and Up]. mezz&#x2F;JustEnoughItems Wiki. 2021-11-30 [2022-06-05]. （原始内容存档于2022-06-05）.">[5]</span></a></sup>，配置 <code>build.gradle</code> 即可正确加载：</p><p><img src="https://i.imgur.com/oDes7Wa.png" alt="JEI 提供的配置"></p><p>也有部分模组不提供，可以使用以下两种方式。</p><h4 id="本地文件"><a href="#本地文件" class="headerlink" title="本地文件"></a>本地文件</h4><p>在项目根目录创建一个 <code>lib</code> 文件夹，将下载的模组文件放入该文件夹。</p><p>在 <code>build.gradle</code> 中添加以下配置：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">repositories</span> &#123;<br>    <span class="hljs-keyword">flatDir</span> &#123;<br>        dirs <span class="hljs-string">&#x27;lib&#x27;</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><code>depdependencies</code> 的格式如下：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle">runtimeOnly fg.deobf(<span class="hljs-string">&quot;&lt;group&gt;:&lt;artifact&gt;:&lt;version&gt;&quot;</span>)<br></code></pre></td></tr></table></figure><p>以 JEI 为例，下载 <code>jei-1.16.5-7.7.1.152.jar</code>，放入 <code>lib</code> 文件夹，配置如下：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle">runtimeOnly fg.deobf(<span class="hljs-string">&quot;mezz.jei:jei:1.16.5-7.7.1.152&quot;</span>)<br></code></pre></td></tr></table></figure><p>注：group 不影响本地文件加载，可以随意填写。</p><h4 id="Curse-Maven"><a href="#Curse-Maven" class="headerlink" title="Curse Maven"></a><a href="https://www.cursemaven.com/">Curse Maven</a></h4><p>本地文件的方式并不方便，需要手动下载模组，对多人合作也不友好，<a href="https://www.cursemaven.com/">Curse Maven</a> 支持所有上传到 <a href="https://www.curseforge.com/">Curse Forge</a> 的模组，在 <code>build.gradle</code> 中添加以下配置：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">repositories</span> &#123;<br>    maven &#123;<br>        url <span class="hljs-string">&quot;https://cursemaven.com&quot;</span><br>        content &#123;<br>            includeGroup <span class="hljs-string">&quot;curse.maven&quot;</span><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><code>depdependencies</code> 的格式如下：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle">runtimeOnly fg.deobf(<span class="hljs-string">&quot;curse.maven:&lt;descriptor&gt;-&lt;projectid&gt;:&lt;fileids&gt;&quot;</span>)<br></code></pre></td></tr></table></figure><p><img src="https://i.imgur.com/xZSvd5B.png" alt="&amp;ltdescriptor&gt; 可以为任意内容，这会显示在下载的文件名汇总，最好设置为模组的名称，如项目名"><br><img src="https://i.imgur.com/Cw3GV8Y.png" alt="&amp;ltprojectid&gt; 项目ID"><br><img src="https://i.imgur.com/ZP5TJfH.png" alt="&amp;ltfileids&gt; 文件ID"></p><p>以 <a href="https://www.curseforge.com/minecraft/mc-mods/jei/files/3681294">JEI 1.16.5-7.7.1.152</a> 为例，配置如下：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle">runtimeOnly fg.deobf(<span class="hljs-string">&quot;curse.maven:jei-238222:3681294&quot;</span>)<br></code></pre></td></tr></table></figure><h2 id="GitHub-Actions-配置（可选）"><a href="#GitHub-Actions-配置（可选）" class="headerlink" title="GitHub Actions 配置（可选）"></a>GitHub Actions 配置（可选）</h2><p>通过配置 GitHub Actions，可以实现发布 Release 和 PR 自动打包。</p><p>首先修改 <code>build.gradle</code>，将 <code>version</code> 部分改为以下内容：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">if</span> (<span class="hljs-keyword">project</span>.hasProperty(<span class="hljs-string">&#x27;projVersion&#x27;</span>)) &#123;<br>    version = <span class="hljs-keyword">project</span>.projVersion<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    version = <span class="hljs-string">&#x27;1.16.5-0.0.1.0&#x27;</span><br>&#125;<br></code></pre></td></tr></table></figure><p>创建 <code>.github/workflows</code> 文件夹，创建两个 <code>yml</code> 文件，注意修改 <code>&lt;modname&gt;</code>。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">name:</span> <span class="hljs-string">Release</span> <span class="hljs-string">Packer</span><br><span class="hljs-attr">on:</span><br>  <span class="hljs-attr">workflow_dispatch:</span><br>    <span class="hljs-attr">inputs:</span><br>      <span class="hljs-attr">version:</span><br>        <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;Release Version&#x27;</span><br>        <span class="hljs-attr">required:</span> <span class="hljs-literal">true</span><br>        <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>      <span class="hljs-attr">pre_release:</span><br>        <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;This is a pre-release&#x27;</span><br>        <span class="hljs-attr">required:</span> <span class="hljs-literal">true</span><br>        <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>        <span class="hljs-attr">default:</span> <span class="hljs-literal">false</span><br><br><span class="hljs-attr">env:</span><br>  <span class="hljs-attr">NAME:</span> <span class="hljs-string">&lt;modname&gt;-$&#123;&#123;</span> <span class="hljs-string">github.event.inputs.version</span> <span class="hljs-string">&#125;&#125;</span><br><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">pack:</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">Pack</span><br><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Check</span> <span class="hljs-string">Out</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v3</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Setup</span> <span class="hljs-string">Java</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/setup-java@v3</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">java-version:</span> <span class="hljs-string">&#x27;8&#x27;</span><br>          <span class="hljs-attr">distribution:</span> <span class="hljs-string">&#x27;adopt&#x27;</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Chmod</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">chmod</span> <span class="hljs-string">+x</span> <span class="hljs-string">./gradlew</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Pack</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">./gradlew</span> <span class="hljs-string">jar</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Create</span> <span class="hljs-string">Release</span><br>        <span class="hljs-attr">id:</span> <span class="hljs-string">create_release</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/create-release@v1</span><br>        <span class="hljs-attr">env:</span><br>          <span class="hljs-attr">GITHUB_TOKEN:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.GITHUB_TOKEN</span> <span class="hljs-string">&#125;&#125;</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">tag_name:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">github.event.inputs.version</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">release_name:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">env.NAME</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">draft:</span> <span class="hljs-literal">false</span><br>          <span class="hljs-attr">prerelease:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">github.event.inputs.pre_release</span> <span class="hljs-string">&#125;&#125;</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Upload</span> <span class="hljs-string">Release</span> <span class="hljs-string">Asset</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/upload-release-asset@v1</span><br>        <span class="hljs-attr">env:</span><br>          <span class="hljs-attr">GITHUB_TOKEN:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.GITHUB_TOKEN</span> <span class="hljs-string">&#125;&#125;</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">upload_url:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">steps.create_release.outputs.upload_url</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">asset_path:</span> <span class="hljs-string">build/libs/$&#123;&#123;</span> <span class="hljs-string">env.NAME</span> <span class="hljs-string">&#125;&#125;.jar</span><br>          <span class="hljs-attr">asset_name:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">env.NAME</span> <span class="hljs-string">&#125;&#125;.jar</span><br>          <span class="hljs-attr">asset_content_type:</span> <span class="hljs-string">application/java-archive</span><br></code></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">name:</span> <span class="hljs-string">PR</span> <span class="hljs-string">Packer</span><br><span class="hljs-attr">on:</span> <span class="hljs-string">pull_request_target</span><br><br><span class="hljs-attr">env:</span><br>  <span class="hljs-attr">NAME:</span> <span class="hljs-string">&quot;&lt;modname&gt;-#$<span class="hljs-template-variable">&#123;&#123; github.event.number &#125;&#125;</span>&quot;</span><br><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">pack:</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">Pack</span><br><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Check</span> <span class="hljs-string">Out</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v3</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">ref:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">github.event.pull_request.head.sha</span> <span class="hljs-string">&#125;&#125;</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Setup</span> <span class="hljs-string">Java</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/setup-java@v3</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">java-version:</span> <span class="hljs-string">&#x27;8&#x27;</span><br>          <span class="hljs-attr">distribution:</span> <span class="hljs-string">&#x27;adopt&#x27;</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Chmod</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">chmod</span> <span class="hljs-string">+x</span> <span class="hljs-string">./gradlew</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Pack</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">&quot;./gradlew -PprojVersion=#$<span class="hljs-template-variable">&#123;&#123; github.event.number &#125;&#125;</span> jar&quot;</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Upload</span> <span class="hljs-string">Artifact</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/upload-artifact@v3</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">name:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">env.NAME</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">path:</span> <span class="hljs-string">build/libs/$&#123;&#123;</span> <span class="hljs-string">env.NAME</span> <span class="hljs-string">&#125;&#125;.jar</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Find</span> <span class="hljs-string">Comment</span><br>        <span class="hljs-attr">id:</span> <span class="hljs-string">find_comment</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">peter-evans/find-comment@v2</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">issue-number:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">github.event.number</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">comment-author:</span> <span class="hljs-string">github-actions[bot]</span><br>          <span class="hljs-attr">direction:</span> <span class="hljs-string">first</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Create</span> <span class="hljs-string">Comment</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">peter-evans/create-or-update-comment@v2</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">issue-number:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">github.event.number</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">body:</span> <span class="hljs-string">在</span> [<span class="hljs-string">这里</span>]<span class="hljs-string">(../actions/runs/$&#123;&#123;</span> <span class="hljs-string">github.run_id</span> <span class="hljs-string">&#125;&#125;)</span> <span class="hljs-string">下载此</span> <span class="hljs-string">PR</span> <span class="hljs-string">的最新打包。</span><br>        <span class="hljs-attr">if:</span> <span class="hljs-string">steps.find_comment.outputs.comment-id</span> <span class="hljs-string">==</span> <span class="hljs-number">0</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Update</span> <span class="hljs-string">Comment</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">peter-evans/create-or-update-comment@v2</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">comment-id:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">steps.find_comment.outputs.comment-id</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">body:</span> <span class="hljs-string">在</span> [<span class="hljs-string">这里</span>]<span class="hljs-string">(../actions/runs/$&#123;&#123;</span> <span class="hljs-string">github.run_id</span> <span class="hljs-string">&#125;&#125;)</span> <span class="hljs-string">下载此</span> <span class="hljs-string">PR</span> <span class="hljs-string">的最新打包。</span><br>          <span class="hljs-attr">edit-mode:</span> <span class="hljs-string">replace</span><br>        <span class="hljs-attr">if:</span> <span class="hljs-string">steps.find_comment.outputs.comment-id</span> <span class="hljs-type">!=</span> <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><section class="footnotes"><h2 id="参考文献">参考文献</h2><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://boson.v2mcdev.com/devenvironment/intro.html">环境配置</a>. Boson 1.16 Modding Tutorial. [2022-06-04].<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://mcforge.readthedocs.io/en/latest/gettingstarted/structuring/">Structuring Your Mod</a>. Forge Documentation. [2022-06-04]. （原始内容<a href="https://web.archive.org/web/20220605133857/https://mcforge.readthedocs.io/en/latest/gettingstarted/structuring/">存档</a>于2022-06-05）.<a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="https://forge.gemwire.uk/wiki/Mods.toml#:~:text=http%3A//example.com/%22-,Dependency%20Configurations,-Mods%20can%20define">Mods.toml</a>. Forge Community Wiki. 2022-03-22 [2022-06-04]. （原始内容<a href="https://web.archive.org/web/20220605134745/https://forge.gemwire.uk/wiki/Mods.toml#:~:text=http%3A//example.com/%22-,Dependency%20Configurations,-Mods%20can%20define">存档</a>于2022-06-05）.<a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:4" class="footnote-text"><span><a href="https://forge.gemwire.uk/wiki/Dependencies">Dependencies</a>. Forge Community Wiki. 2021-08-02 [2022-06-04]. （原始内容<a href="https://web.archive.org/web/20220605135343/https://forge.gemwire.uk/wiki/Dependencies">存档</a>于2022-06-05）.<a href="#fnref:4" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:5" class="footnote-text"><span><a href="https://github.com/mezz/JustEnoughItems/wiki/Getting-Started-%5B1.13-and-Up%5D">Getting Started [1.13 and Up]</a>. mezz&#x2F;JustEnoughItems Wiki. 2021-11-30 [2022-06-05]. （原始内容<a href="https://web.archive.org/web/20220605140318/https://github.com/mezz/JustEnoughItems/wiki/Getting-Started-%5B1.13-and-Up%5D">存档</a>于2022-06-05）.<a href="#fnref:5" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>Minecraft</category>
      
      <category>Mod</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Minecraft</tag>
      
      <tag>Forge</tag>
      
      <tag>Mod</tag>
      
      <tag>Java</tag>
      
      <tag>Gradle</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
